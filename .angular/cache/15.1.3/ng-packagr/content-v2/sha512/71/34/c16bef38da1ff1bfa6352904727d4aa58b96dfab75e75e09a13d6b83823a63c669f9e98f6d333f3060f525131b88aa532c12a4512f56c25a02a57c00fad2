{"hash":"16f05002a9bcc79ce6fda2bc43523862b07419e0","fesm2020":[{"exports":["Cell","DefaultEditorBase","DefaultFilter","LocalDataSource","ServerDataSource","SmartIntelTableComponent","SmartIntelTableModule"],"facadeModuleId":"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/smart-intel-table.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/cell.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/row.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/column.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/data-set.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/helpers.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/grid.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell-default.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/custom-edit.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/default-editor.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/checkbox-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/completer-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/input-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/select-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/textarea-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/default-edit.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/custom-view.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/view-cell.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/data-source.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-default.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/default-filter.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/checkbox-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/completer-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/input-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/select-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/default-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/custom-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/create-cancel.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/edit-delete.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/custom.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/add-button.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-filters-row.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-form-row.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions-title.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/checkbox-select-all.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/title/title.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/column-title.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-titles-row.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/loca-data-filter.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-pager.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-sorter.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-source.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.conf.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/public-api.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/smart-intel-table.mjs"],"name":"smart-intel-table","type":"chunk","dynamicImports":[],"fileName":"smart-intel-table.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["EventEmitter","*","Component","Input","Output","ViewContainerRef","ViewChild","ChangeDetectionStrategy","NgModule"],"@angular/common":["*","CommonModule"],"@angular/forms":["*","FormsModule","UntypedFormControl","NgControl","ReactiveFormsModule"],"ng2-completer":["*","Ng2CompleterModule"],"rxjs":["Subject"],"lodash":["cloneDeep"],"rxjs/operators":["debounceTime","map","distinctUntilChanged","skip","takeUntil"],"@angular/common/http":["HttpParams"]},"imports":["@angular/core","@angular/common","@angular/forms","ng2-completer","rxjs","lodash","rxjs/operators","@angular/common/http"],"modules":{"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/cell.define.mjs":{"code":"const prepareValue = (value) => value;\n// @dynamic\nclass Cell {\n    constructor(value, row, column, dataSet) {\n        this.value = value;\n        this.row = row;\n        this.column = column;\n        this.dataSet = dataSet;\n        this.newValue = '';\n        this.newValue = value;\n    }\n    getColumn() {\n        return this.column;\n    }\n    getRow() {\n        return this.row;\n    }\n    getValue() {\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.prepareVal;\n        // eslint-disable-next-line no-useless-call\n        return prepare.call(null, this.value, this.row.getData(), this);\n    }\n    setValue(value) {\n        this.newValue = value;\n    }\n    getId() {\n        return this.getColumn().id;\n    }\n    getTitle() {\n        return this.getColumn().title;\n    }\n    isEditable() {\n        if (this.getRow().index === -1) {\n            return this.getColumn().isAddable;\n        }\n        else {\n            return this.getColumn().isEditable;\n        }\n    }\n}\nCell.prepareVal = prepareValue;","originalLength":4602,"removedExports":[],"renderedExports":["prepareValue","Cell"],"renderedLength":1113},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/row.define.mjs":{"code":"class Row {\n    constructor(index, data, dataSet) {\n        this.index = index;\n        this.data = data;\n        this.dataSet = dataSet;\n        this.isSelected = false;\n        this.isInEditing = false;\n        this.cells = [];\n        this.process();\n    }\n    getCell(column) {\n        return this.cells.find(el => el.getColumn() === column);\n    }\n    getCells() {\n        return this.cells;\n    }\n    getData() {\n        return this.data;\n    }\n    getIsSelected() {\n        return this.isSelected;\n    }\n    getNewData() {\n        const values = Object.assign({}, this.data);\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n        return values;\n    }\n    setData(data) {\n        this.data = data;\n        this.process();\n    }\n    process() {\n        this.cells = [];\n        this.dataSet.getColumns().forEach((column) => {\n            const cell = this.createCell(column);\n            this.cells.push(cell);\n        });\n    }\n    createCell(column) {\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n        return new Cell(value, this, column, this.dataSet);\n    }\n}","originalLength":5528,"removedExports":[],"renderedExports":["Row"],"renderedLength":1260},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/column.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Column {\n    constructor(id, settings, dataSet) {\n        this.id = id;\n        this.settings = settings;\n        this.dataSet = dataSet;\n        this.title = '';\n        this.type = '';\n        this.class = '';\n        this.width = '';\n        this.hide = false;\n        this.isSortable = false;\n        this.isEditable = true;\n        this.isAddable = true;\n        this.isFilterable = false;\n        this.sortDirection = '';\n        this.defaultSortDirection = '';\n        this.editor = { type: '', config: {}, component: null };\n        this.filter = { type: '', config: {}, component: null };\n        this.renderComponent = null;\n        this.process();\n    }\n    getOnComponentInitFunction() {\n        return this.onComponentInitFunction;\n    }\n    getCompareFunction() {\n        return this.compareFunction;\n    }\n    getValuePrepareFunction() {\n        return this.valuePrepareFunction;\n    }\n    getFilterFunction() {\n        return this.filterFunction;\n    }\n    getConfig() {\n        return this.editor && this.editor.config;\n    }\n    getFilterType() {\n        return this.filter && this.filter.type;\n    }\n    getFilterConfig() {\n        return this.filter && this.filter.config;\n    }\n    prepareType() {\n        return this.settings.type || this.determineType();\n    }\n    prepareSortDirection() {\n        return this.settings.sort === 'desc' ? 'desc' : 'asc';\n    }\n    determineType() {\n        // TODO: determine type by data\n        return 'text';\n    }\n    process() {\n        this.title = this.settings.title;\n        this.class = this.settings.class;\n        this.width = this.settings.width;\n        this.hide = Boolean(this.settings.hide);\n        this.type = this.prepareType();\n        this.editor = this.settings.editor;\n        this.filter = this.settings.filter;\n        this.renderComponent = this.settings.renderComponent;\n        this.isFilterable = typeof this.settings.filter === 'undefined' ? true : Boolean(this.settings.filter);\n        this.defaultSortDirection = ['asc', 'desc']\n            .indexOf(this.settings.sortDirection) !== -1 ? this.settings.sortDirection : '';\n        this.isSortable = typeof this.settings.sort === 'undefined' ? true : Boolean(this.settings.sort);\n        this.isEditable = typeof this.settings.editable === 'undefined' ? true : Boolean(this.settings.editable);\n        this.isAddable = typeof this.settings.addable === 'undefined' ? true : Boolean(this.settings.addable);\n        this.sortDirection = this.prepareSortDirection();\n        this.compareFunction = this.settings.compareFunction;\n        this.valuePrepareFunction = this.settings.valuePrepareFunction;\n        this.filterFunction = this.settings.filterFunction;\n        this.onComponentInitFunction = this.settings.onComponentInitFunction;\n    }\n}","originalLength":10919,"removedExports":[],"renderedExports":["Column"],"renderedLength":2841},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/data-set.define.mjs":{"code":"class DataSet {\n    constructor(data = [], \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    columnSettings) {\n        this.columnSettings = columnSettings;\n        this.data = [];\n        this.columns = [];\n        this.rows = [];\n        this.createColumns(columnSettings);\n        this.setData(data);\n        this.createNewRow();\n    }\n    setData(data) {\n        this.data = data;\n        this.createRows();\n    }\n    getColumns() {\n        return this.columns;\n    }\n    getRows() {\n        return this.rows;\n    }\n    getFirstRow() {\n        return this.rows[0];\n    }\n    getLastRow() {\n        return this.rows[this.rows.length - 1];\n    }\n    findRowByData(data) {\n        return this.rows.find((row) => row.getData() === data);\n    }\n    deselectAll() {\n        this.rows.forEach((row) => {\n            row.isSelected = false;\n        });\n        // we need to clear selectedRow field because no one row selected\n        this.selectedRow = undefined;\n    }\n    selectRow(row) {\n        const previousIsSelected = row.isSelected;\n        this.deselectAll();\n        row.isSelected = !previousIsSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    multipleSelectRow(row) {\n        row.isSelected = !row.isSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    selectPreviousRow() {\n        if (this.rows.length > 0) {\n            let index = this.selectedRow ? this.selectedRow.index : 0;\n            if (index > this.rows.length - 1) {\n                index = this.rows.length - 1;\n            }\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n    }\n    selectFirstRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[0]);\n            return this.selectedRow;\n        }\n    }\n    selectLastRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[this.rows.length - 1]);\n            return this.selectedRow;\n        }\n    }\n    selectRowByIndex(index) {\n        const rowsLength = this.rows.length;\n        if (rowsLength === 0) {\n            return;\n        }\n        if (!index) {\n            this.selectFirstRow();\n            return this.selectedRow;\n        }\n        if (index > 0 && index < rowsLength) {\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAll();\n    }\n    willSelectFirstRow() {\n        this.willSelect = 'first';\n    }\n    willSelectLastRow() {\n        this.willSelect = 'last';\n    }\n    select(selectedRowIndex) {\n        if (this.getRows().length === 0) {\n            return;\n        }\n        if (this.willSelect) {\n            if (this.willSelect === 'first') {\n                this.selectFirstRow();\n            }\n            if (this.willSelect === 'last') {\n                this.selectLastRow();\n            }\n            this.willSelect = '';\n        }\n        else {\n            this.selectRowByIndex(selectedRowIndex);\n        }\n        return this.selectedRow;\n    }\n    createNewRow() {\n        this.newRow = new Row(-1, {}, this);\n        this.newRow.isInEditing = true;\n    }\n    /**\n     * Create columns by mapping from the settings\n     *\n     * @param settings\n     * @private\n     */\n    createColumns(settings) {\n        for (const id in settings) {\n            if (settings.hasOwnProperty(id)) {\n                this.columns.push(new Column(id, settings[id], this));\n            }\n        }\n    }\n    /**\n     * Create rows based on current data prepared in data source\n     *\n     * @private\n     */\n    createRows() {\n        this.rows = [];\n        this.data.forEach((el, index) => {\n            this.rows.push(new Row(index, el, this));\n        });\n    }\n}","originalLength":14435,"removedExports":[],"renderedExports":["DataSet"],"renderedLength":3823},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/helpers.define.mjs":{"code":"/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nconst deepExtend = (...objects) => {\n    if (objects.length < 1 || typeof objects[0] !== 'object') {\n        return false;\n    }\n    if (objects.length < 2) {\n        return objects[0];\n    }\n    const target = objects[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(objects, 1);\n    let val;\n    let src;\n    args.forEach((obj) => {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach((key) => {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = cloneDeep(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nconst getDeepFromObject = (object = {}, name, defaultValue) => {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object);\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n};\nconst getPageForRowIndex = (index, perPage) => \n// we need to add 1 to convert 0-based index to 1-based page number.\nMath.floor(index / perPage) + 1;","originalLength":10026,"removedExports":[],"renderedExports":["deepExtend","Deferred","getDeepFromObject","getPageForRowIndex"],"renderedLength":2831},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/grid.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Grid {\n    constructor(source, settings) {\n        this.createFormShown = false;\n        this.onSelectRowSource = new Subject();\n        this.onDeselectRowSource = new Subject();\n        this.setSettings(settings);\n        this.setSource(source);\n    }\n    detach() {\n        if (this.sourceOnChangedSubscription) {\n            this.sourceOnChangedSubscription.unsubscribe();\n        }\n        if (this.sourceOnUpdatedSubscription) {\n            this.sourceOnUpdatedSubscription.unsubscribe();\n        }\n    }\n    showActionColumn(position) {\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n    }\n    isCurrentActionsPosition(position) {\n        // eslint-disable-next-line eqeqeq\n        return position == this.getSetting('actions.position');\n    }\n    isActionsVisible() {\n        return this\n            .getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n    }\n    isMultiSelectVisible() {\n        return this.getSetting('selectMode') === 'multi';\n    }\n    getNewRow() {\n        return this.dataSet.newRow;\n    }\n    setSettings(settings) {\n        this.settings = settings;\n        this.dataSet = new DataSet([], this.getSetting('columns'));\n        if (this.source) {\n            this.source.refresh();\n        }\n    }\n    getDataSet() {\n        return this.dataSet;\n    }\n    setSource(source) {\n        this.source = this.prepareSource(source);\n        this.detach();\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\n            const changedRow = this.dataSet.findRowByData(data);\n            changedRow.setData(data);\n        });\n    }\n    getSetting(name, defaultValue) {\n        return getDeepFromObject(this.settings, name, defaultValue);\n    }\n    getColumns() {\n        return this.dataSet.getColumns();\n    }\n    getRows() {\n        return this.dataSet.getRows();\n    }\n    selectRow(row) {\n        this.dataSet.selectRow(row);\n    }\n    multipleSelectRow(row) {\n        this.dataSet.multipleSelectRow(row);\n    }\n    onSelectRow() {\n        return this.onSelectRowSource.asObservable();\n    }\n    onDeselectRow() {\n        return this.onDeselectRowSource.asObservable();\n    }\n    edit(row) {\n        row.isInEditing = true;\n    }\n    create(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipAdd) {\n                this.createFormShown = false;\n            }\n            else {\n                this.source.prepend(newData).then(() => {\n                    this.createFormShown = false;\n                    this.dataSet.createNewRow();\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('add.confirmCreate')) {\n            confirmEmitter.emit({\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    save(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipEdit) {\n                row.isInEditing = false;\n            }\n            else {\n                this.source.update(row.getData(), newData).then(() => {\n                    row.isInEditing = false;\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('edit.confirmSave')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    delete(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then(() => {\n            this.source.remove(row.getData());\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('delete.confirmDelete')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    processDataChange(changes) {\n        if (this.shouldProcessChange(changes)) {\n            this.dataSet.setData(changes.elements);\n            if (this.getSetting('selectMode') !== 'multi') {\n                const row = this.determineRowToSelect(changes);\n                if (row) {\n                    this.onSelectRowSource.next(row);\n                }\n                else {\n                    this.onDeselectRowSource.next(null);\n                }\n            }\n        }\n    }\n    shouldProcessChange(changes) {\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes.action) !== -1) {\n            return true;\n        }\n        else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @breaking-change 1.8.0\n     * Need to add `| null` in return type\n     *\n     * TODO: move to selectable? Separate directive\n     */\n    determineRowToSelect(changes) {\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\n            return this.dataSet.select(this.getRowIndexToSelect());\n        }\n        if (this.shouldSkipSelection()) {\n            return null;\n        }\n        if (changes.action === 'remove') {\n            if (changes.elements.length === 0) {\n                // we have to store which one to select as the data will be reloaded\n                this.dataSet.willSelectLastRow();\n            }\n            else {\n                return this.dataSet.selectPreviousRow();\n            }\n        }\n        if (changes.action === 'append') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectLastRow();\n        }\n        if (changes.action === 'add') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'update') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'prepend') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectFirstRow();\n        }\n        return null;\n    }\n    prepareSource(source) {\n        const initialSource = this.getInitialSort();\n        if (initialSource && initialSource.field && initialSource.direction) {\n            source.setSort([initialSource], false);\n        }\n        if (this.getSetting('pager.display') === true) {\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n        }\n        source.refresh();\n        return source;\n    }\n    getInitialSort() {\n        const sortConf = {};\n        this.getColumns().forEach((column) => {\n            if (column.isSortable && column.defaultSortDirection) {\n                sortConf.field = column.id;\n                sortConf.direction = column.defaultSortDirection;\n                sortConf.compare = column.getCompareFunction();\n            }\n        });\n        return sortConf;\n    }\n    getSelectedRows() {\n        return this.dataSet.getRows()\n            .filter(r => r.isSelected);\n    }\n    selectAllRows(status) {\n        this.dataSet.getRows()\n            .forEach(r => r.isSelected = status);\n    }\n    getFirstRow() {\n        return this.dataSet.getFirstRow();\n    }\n    getLastRow() {\n        return this.dataSet.getLastRow();\n    }\n    getSelectionInfo() {\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n        const { perPage, page } = this.getSetting('pager');\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\n    }\n    getRowIndexToSelect() {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\n        const dataAmount = this.source.count();\n        /**\n         * source - contains all table data\n         * dataSet - contains data for current page\n         * selectedRowIndex - contains index for data in all data\n         *\n         * because of that, we need to count index for a specific row in page\n         * if\n         * `switchPageToSelectedRowPage` - we need to change page automatically\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n         *  if we return index witch not points to existing data - no line will be highlighted)\n         */\n        return (switchPageToSelectedRowPage &&\n            selectedRowIndex < dataAmount &&\n            selectedRowIndex >= 0) ?\n            selectedRowIndex % perPage :\n            selectedRowIndex;\n    }\n    getPageToSelect(source) {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\n        let pageToSelect = Math.max(1, page);\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n        }\n        const maxPageAmount = Math.ceil(source.count() / perPage);\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n    }\n    shouldSkipSelection() {\n        /**\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n         *\n         * Therefore, in order to select a row after some changes,\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n         *\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n         *\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n         * because when < 0 all lines must be deselected\n         */\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n        return selectedRowIndex < 0;\n    }\n}","originalLength":37617,"removedExports":[],"renderedExports":["Grid"],"renderedLength":10757},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell-default.mjs":{"code":"class EditCellDefault {\n    constructor() {\n        this.inputClass = '';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    stoppedEditingEvent() {\n        this.cell.getRow().isInEditing = false;\n        return false;\n    }\n    clickedEvent(event) {\n        event.stopPropagation();\n    }\n}\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) { return new (t || EditCellDefault)(); };\nEditCellDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellDefault, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 0, vars: 0, template: function EditCellDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellDefault, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }] }); })();","originalLength":3396,"removedExports":[],"renderedExports":["EditCellDefault"],"renderedLength":1207},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/custom-edit.component.mjs":{"code":"const _c0$c = [\"dynamicTarget\"];\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomEditComponent extends EditCellDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.cell && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.cell = this.cell;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.stoppedEditingEvent.subscribe(() => this.stoppedEditingEvent());\n            this.customComponent.instance.editedEvent.subscribe((event) => this.editedEvent(event));\n            this.customComponent.instance.clickedEvent.subscribe((event) => this.clickedEvent(event));\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) { return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomEditComponent, selectors: [[\"table-cell-custom-editor\"]], viewQuery: function CustomEditComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$c, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomEditComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomEditComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-custom-editor',\n                template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n            }]\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();","originalLength":6939,"removedExports":[],"renderedExports":["CustomEditComponent"],"renderedLength":2574},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/default-editor.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DefaultEditorBase {\n    constructor() {\n        this.stoppedEditingEvent = new EventEmitter();\n        this.editedEvent = new EventEmitter();\n        this.clickedEvent = new EventEmitter();\n    }\n}\nDefaultEditorBase.ɵfac = function DefaultEditorBase_Factory(t) { return new (t || DefaultEditorBase)(); };\nDefaultEditorBase.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditorBase, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { stoppedEditingEvent: \"stoppedEditingEvent\", editedEvent: \"editedEvent\", clickedEvent: \"clickedEvent\" }, decls: 0, vars: 0, template: function DefaultEditorBase_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditorBase, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], stoppedEditingEvent: [{\n            type: Output\n        }], editedEvent: [{\n            type: Output\n        }], clickedEvent: [{\n            type: Output\n        }] }); })();","originalLength":3304,"removedExports":[],"renderedExports":["DefaultEditorBase"],"renderedLength":1235},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/checkbox-editor.component.mjs":{"code":"class CheckboxEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n    onChange(event) {\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n}\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) { return new (t || CheckboxEditorComponent)(); };\nCheckboxEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxEditorComponent, selectors: [[\"checkbox-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 4, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]], template: function CheckboxEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) { return ctx.onChange($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_3_0;\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n    } }, dependencies: [i1.NgClass], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxEditorComponent, [{\n        type: Component,\n        args: [{ selector: 'checkbox-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          type=\"checkbox\"\n          class=\"form-control\"\n          [name]=\"cell.getId()\"\n          [disabled]=\"!cell.isEditable()\"\n          [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n          (click)=\"clickedEvent.emit($event)\"\n          (change)=\"onChange($event)\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n    }], function () { return []; }, null); })();","originalLength":5371,"removedExports":[],"renderedExports":["CheckboxEditorComponent"],"renderedLength":2432},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/completer-editor.component.mjs":{"code":"class CompleterEditorComponent extends DefaultEditorBase {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerStr = '';\n    }\n    ngOnInit() {\n        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\n            const config = this.cell.getColumn().getConfig().completer;\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n            config.dataService.descriptionField(config.descriptionField);\n        }\n    }\n    onEditedCompleter(event) {\n        this.cell.newValue = event.title;\n        return false;\n    }\n}\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) { return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterEditorComponent, selectors: [[\"completer-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.completerStr = $event; })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.onEditedCompleter($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n    } }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'completer-editor',\n                template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                    [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                    [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                    [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                    [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `,\n            }]\n    }], function () { return [{ type: i1$1.CompleterService }]; }, null); })();","originalLength":6878,"removedExports":[],"renderedExports":["CompleterEditorComponent"],"renderedLength":2955},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/input-editor.component.mjs":{"code":"class InputEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) { return new (t || InputEditorComponent)(); };\nInputEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputEditorComponent, selectors: [[\"input-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function InputEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n    } }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEditorComponent, [{\n        type: Component,\n        args: [{ selector: 'input-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          class=\"form-control\"\n          [(ngModel)]=\"cell.newValue\"\n          [name]=\"cell.getId()\"\n          [placeholder]=\"cell.getTitle()\"\n          [disabled]=\"!cell.isEditable()\"\n          (click)=\"clickedEvent.emit($event)\"\n          (keydown.enter)=\"editedEvent.emit($event)\"\n          (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n    }], function () { return []; }, null); })();","originalLength":4452,"removedExports":[],"renderedExports":["InputEditorComponent"],"renderedLength":2407},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/select-editor.component.mjs":{"code":"function SelectEditorComponent_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n} }\nclass SelectEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) { return new (t || SelectEditorComponent)(); };\nSelectEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectEditorComponent, selectors: [[\"select-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function SelectEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n        i0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_4_0;\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'select-editor',\n                template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"clickedEvent.emit($event)\"\n            (keydown.enter)=\"editedEvent.emit($event)\"\n            (keydown.esc)=\"stoppedEditingEvent.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `,\n            }]\n    }], function () { return []; }, null); })();","originalLength":5623,"removedExports":[],"renderedExports":["SelectEditorComponent"],"renderedLength":3178},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/textarea-editor.component.mjs":{"code":"class TextareaEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) { return new (t || TextareaEditorComponent)(); };\nTextareaEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextareaEditorComponent, selectors: [[\"textarea-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function TextareaEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"textarea\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n        i0.ɵɵtext(1, \"    \");\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n    } }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextareaEditorComponent, [{\n        type: Component,\n        args: [{ selector: 'textarea-editor', template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"clickedEvent.emit($event)\"\n              (keydown.enter)=\"editedEvent.emit($event)\"\n              (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    </textarea>\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n    }], function () { return []; }, null); })();","originalLength":4694,"removedExports":[],"renderedExports":["TextareaEditorComponent"],"renderedLength":2545},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/default-edit.component.mjs":{"code":"function DefaultEditComponent_select_editor_1_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select-editor\", 5);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n} }\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"textarea-editor\", 5);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.clickedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n} }\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"completer-editor\", 7);\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r3.cell);\n} }\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input-editor\", 5);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n} }\nclass DefaultEditComponent extends EditCellDefault {\n    constructor() {\n        super();\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) { return new (t || DefaultEditComponent)(); };\nDefaultEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditComponent, selectors: [[\"table-cell-default-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"ngSwitch\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"clickedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchDefault\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\"], [3, \"cell\", \"inputClass\", \"clickedEvent\"], [3, \"cell\"]], template: function DefaultEditComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n        i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n        i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n        i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n        i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    } }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditComponent, [{\n        type: Component,\n        args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n  <select-editor\\n    *ngSwitchCase=\\\"'list'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </select-editor>\\n\\n  <textarea-editor\\n    *ngSwitchCase=\\\"'textarea'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </textarea-editor>\\n\\n  <checkbox-editor\\n    *ngSwitchCase=\\\"'checkbox'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n  >\\n  </checkbox-editor>\\n\\n  <completer-editor *ngSwitchCase=\\\"'completer'\\\" [cell]=\\\"cell\\\">\\n  </completer-editor>\\n\\n  <input-editor\\n    *ngSwitchDefault\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </input-editor>\\n</div>\\n\" }]\n    }], function () { return []; }, null); })();","originalLength":11433,"removedExports":[],"renderedExports":["DefaultEditComponent"],"renderedLength":6957},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell.component.mjs":{"code":"function EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n} }\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nclass EditCellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) { return new (t || EditCellComponent)(); };\nEditCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellComponent, selectors: [[\"table-cell-edit-mode\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 3, vars: 2, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function EditCellComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n        i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n    } }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomEditComponent, DefaultEditComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-edit-mode',\n                template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-default-editor>\n      </div>\n    `,\n            }]\n    }], null, { cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }] }); })();","originalLength":7131,"removedExports":[],"renderedExports":["EditCellComponent"],"renderedLength":3702},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/custom-view.component.mjs":{"code":"const _c0$b = [\"dynamicTarget\"];\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomViewComponent {\n    constructor(resolver) {\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        if (this.cell && !this.customComponent) {\n            this.createCustomComponent();\n            this.callOnComponentInit();\n            this.patchInstance();\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n    createCustomComponent() {\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n    callOnComponentInit() {\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n        // TODO onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\n        onComponentInitFunction && onComponentInitFunction();\n    }\n    patchInstance() {\n        Object.assign(this.customComponent.instance, this.getPatch());\n    }\n    getPatch() {\n        return {\n            value: this.cell.getValue(),\n            rowData: this.cell.getRow().getData()\n        };\n    }\n}\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) { return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomViewComponent, selectors: [[\"custom-view-component\"]], viewQuery: function CustomViewComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$b, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, inputs: { cell: \"cell\" }, decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomViewComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomViewComponent, [{\n        type: Component,\n        args: [{\n                selector: 'custom-view-component',\n                template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n            }]\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { cell: [{\n            type: Input\n        }], dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();","originalLength":7331,"removedExports":[],"renderedExports":["CustomViewComponent"],"renderedLength":2688},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/view-cell.component.mjs":{"code":"function ViewCellComponent_custom_view_component_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"custom-view-component\", 4);\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n} }\nfunction ViewCellComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\n} }\nfunction ViewCellComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n} }\nclass ViewCellComponent {\n}\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) { return new (t || ViewCellComponent)(); };\nViewCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCellComponent, selectors: [[\"table-cell-view-mode\"]], inputs: { cell: \"cell\" }, decls: 4, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]], template: function ViewCellComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n        i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n    } }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomViewComponent], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-view-mode',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `,\n            }]\n    }], null, { cell: [{\n            type: Input\n        }] }); })();","originalLength":4828,"removedExports":[],"renderedExports":["ViewCellComponent"],"renderedLength":2627},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.component.mjs":{"code":"function CellComponent_table_cell_view_mode_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n} }\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n    i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nclass CellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.mode = 'inline';\n        this.isInEditing = false;\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        if (this.isNew) {\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\n        }\n        else {\n            this.grid.save(this.row, this.editConfirm);\n        }\n    }\n}\nCellComponent.ɵfac = function CellComponent_Factory(t) { return new (t || CellComponent)(); };\nCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellComponent, selectors: [[\"smart-intel-table-cell\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\" }, outputs: { edited: \"edited\" }, decls: 2, vars: 2, consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function CellComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n        i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n    } }, dependencies: [i1.NgIf, EditCellComponent, ViewCellComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-intel-table-cell',\n                template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"editedEvent($event)\">\n    </table-cell-edit-mode>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }], isNew: [{\n            type: Input\n        }], cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], isInEditing: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }] }); })();","originalLength":7187,"removedExports":[],"renderedExports":["CellComponent"],"renderedLength":3349},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.module.mjs":{"code":"const CELL_COMPONENTS = [\n    CellComponent,\n    EditCellDefault,\n    DefaultEditorBase,\n    CustomEditComponent,\n    DefaultEditComponent,\n    EditCellComponent,\n    CheckboxEditorComponent,\n    CompleterEditorComponent,\n    InputEditorComponent,\n    SelectEditorComponent,\n    TextareaEditorComponent,\n    CustomViewComponent,\n    ViewCellComponent\n];\nclass CellModule {\n}\nCellModule.ɵfac = function CellModule_Factory(t) { return new (t || CellModule)(); };\nCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellModule });\nCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        Ng2CompleterModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    Ng2CompleterModule\n                ],\n                declarations: [\n                    ...CELL_COMPONENTS\n                ],\n                exports: [\n                    ...CELL_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellModule, { declarations: [CellComponent,\n        EditCellDefault,\n        DefaultEditorBase,\n        CustomEditComponent,\n        DefaultEditComponent,\n        EditCellComponent,\n        CheckboxEditorComponent,\n        CompleterEditorComponent,\n        InputEditorComponent,\n        SelectEditorComponent,\n        TextareaEditorComponent,\n        CustomViewComponent,\n        ViewCellComponent], imports: [CommonModule,\n        FormsModule,\n        Ng2CompleterModule], exports: [CellComponent,\n        EditCellDefault,\n        DefaultEditorBase,\n        CustomEditComponent,\n        DefaultEditComponent,\n        EditCellComponent,\n        CheckboxEditorComponent,\n        CompleterEditorComponent,\n        InputEditorComponent,\n        SelectEditorComponent,\n        TextareaEditorComponent,\n        CustomViewComponent,\n        ViewCellComponent] }); })();","originalLength":8083,"removedExports":[],"renderedExports":["CellModule"],"renderedLength":2129},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/data-source.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DataSource {\n    constructor() {\n        this.onChangedSource = new Subject();\n        this.onAddedSource = new Subject();\n        this.onUpdatedSource = new Subject();\n        this.onRemovedSource = new Subject();\n    }\n    refresh() {\n        this.emitOnChanged('refresh');\n    }\n    load(data) {\n        this.emitOnChanged('load');\n        return Promise.resolve();\n    }\n    onChanged() {\n        return this.onChangedSource.asObservable();\n    }\n    onAdded() {\n        return this.onAddedSource.asObservable();\n    }\n    onUpdated() {\n        return this.onUpdatedSource.asObservable();\n    }\n    onRemoved() {\n        return this.onRemovedSource.asObservable();\n    }\n    prepend(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('prepend');\n        return Promise.resolve();\n    }\n    append(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('append');\n        return Promise.resolve();\n    }\n    add(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('add');\n        return Promise.resolve();\n    }\n    remove(element) {\n        this.emitOnRemoved(element);\n        this.emitOnChanged('remove');\n        return Promise.resolve();\n    }\n    update(element, values) {\n        this.emitOnUpdated(element);\n        this.emitOnChanged('update');\n        return Promise.resolve();\n    }\n    empty() {\n        this.emitOnChanged('empty');\n        return Promise.resolve();\n    }\n    setSort(conf, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('sort');\n        }\n    }\n    setFilter(conf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    addFilter(fieldConf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    setPaging(page, perPage, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('paging');\n        }\n    }\n    setPage(page, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('page');\n        }\n    }\n    emitOnRemoved(element) {\n        this.onRemovedSource.next(element);\n    }\n    emitOnUpdated(element) {\n        this.onUpdatedSource.next(element);\n    }\n    emitOnAdded(element) {\n        this.onAddedSource.next(element);\n    }\n    emitOnChanged(action) {\n        this.getElements().then((elements) => this.onChangedSource.next({\n            action,\n            elements,\n            paging: this.getPaging(),\n            filter: this.getFilter(),\n            sort: this.getSort()\n        }));\n    }\n}","originalLength":10525,"removedExports":[],"renderedExports":["DataSource"],"renderedLength":2599},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-default.mjs":{"code":"class FilterDefault {\n    constructor() {\n        this.inputClass = '';\n        this.filter = new EventEmitter();\n        this.query = '';\n    }\n    onFilter(query) {\n        this.source.addFilter({\n            field: this.column.id,\n            search: query,\n            filter: this.column.getFilterFunction()\n        });\n    }\n}\nFilterDefault.ɵfac = function FilterDefault_Factory(t) { return new (t || FilterDefault)(); };\nFilterDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterDefault, selectors: [[\"ng-component\"]], inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function FilterDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDefault, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], filter: [{\n            type: Output\n        }] }); })();","originalLength":3372,"removedExports":[],"renderedExports":["FilterDefault"],"renderedLength":1147},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/default-filter.mjs":{"code":"class DefaultFilter {\n    constructor() {\n        this.filter = new EventEmitter();\n        this.delay = 300;\n    }\n    ngOnDestroy() {\n        if (this.changesSubscription) {\n            this.changesSubscription.unsubscribe();\n        }\n    }\n    setFilter() {\n        this.filter.emit(this.query);\n    }\n}\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) { return new (t || DefaultFilter)(); };\nDefaultFilter.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilter, selectors: [[\"ng-component\"]], inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function DefaultFilter_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilter, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { query: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], column: [{\n            type: Input\n        }], filter: [{\n            type: Output\n        }] }); })();","originalLength":3504,"removedExports":[],"renderedExports":["DefaultFilter"],"renderedLength":1119},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/checkbox-filter.component.mjs":{"code":"function CheckboxFilterComponent_a_1_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.resetFilter($event)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n} }\nclass CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.filterActive = false;\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        this.changesSubscription = this.inputControl.valueChanges\n            .pipe(debounceTime(this.delay))\n            .subscribe((checked) => {\n            this.filterActive = true;\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n            this.query = checked ? trueVal : falseVal;\n            this.setFilter();\n        });\n    }\n    resetFilter(event) {\n        event.preventDefault();\n        this.query = '';\n        this.inputControl.setValue(false, { emitEvent: false });\n        this.filterActive = false;\n        this.setFilter();\n    }\n}\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) { return new (t || CheckboxFilterComponent)(); };\nCheckboxFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxFilterComponent, selectors: [[\"checkbox-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]], template: function CheckboxFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n        i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n    } }, dependencies: [i1.NgClass, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'checkbox-filter',\n                template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n            }]\n    }], function () { return []; }, null); })();","originalLength":7546,"removedExports":[],"renderedExports":["CheckboxFilterComponent"],"renderedLength":3057},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/completer-filter.component.mjs":{"code":"class CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerContent = new Subject();\n    }\n    ngOnInit() {\n        const config = this.column.getFilterConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n        this.changesSubscription = this.completerContent\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((search) => {\n            this.query = search;\n            this.setFilter();\n        });\n    }\n    inputTextChanged(event) {\n        // workaround to trigger the search event when the home/end buttons are clicked\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n        // so here it gets called manually\n        if (event === '') {\n            this.completerContent.next(event);\n        }\n    }\n}\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) { return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterFilterComponent, selectors: [[\"completer-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.query = $event; })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.inputTextChanged($event); })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.completerContent.next($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n    } }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'completer-filter',\n                template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                    (ngModelChange)=\"inputTextChanged($event)\"\n                    [dataService]=\"column.getFilterConfig().completer.dataService\"\n                    [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                    [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                    [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n            }]\n    }], function () { return [{ type: i1$1.CompleterService }]; }, null); })();","originalLength":8858,"removedExports":[],"renderedExports":["CompleterFilterComponent"],"renderedLength":3545},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/input-filter.component.mjs":{"code":"class InputFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        if (this.query) {\n            this.inputControl.setValue(this.query);\n        }\n        this.inputControl.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => {\n            this.query = this.inputControl.value;\n            this.setFilter();\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.query) {\n            this.inputControl.setValue(this.query);\n        }\n    }\n}\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) { return new (t || InputFilterComponent)(); };\nInputFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputFilterComponent, selectors: [[\"input-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 3, consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]], template: function InputFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n    } if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n    } }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'input-filter',\n                template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.title }}\"/>\n  `,\n            }]\n    }], function () { return []; }, null); })();","originalLength":5411,"removedExports":[],"renderedExports":["InputFilterComponent"],"renderedLength":1900},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/select-filter.component.mjs":{"code":"const _c0$a = [\"inputControl\"];\nfunction SelectFilterComponent_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n} }\nclass SelectFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        this.inputControl.valueChanges\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => this.setFilter());\n    }\n}\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) { return new (t || SelectFilterComponent)(); };\nSelectFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectFilterComponent, selectors: [[\"select-filter\"]], viewQuery: function SelectFilterComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$a, 7, NgControl);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n    } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SelectFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) { return ctx.query = $event; });\n        i0.ɵɵelementStart(2, \"option\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'select-filter',\n                template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `,\n            }]\n    }], function () { return []; }, { inputControl: [{\n            type: ViewChild,\n            args: ['inputControl', { read: NgControl, static: true }]\n        }] }); })();","originalLength":6536,"removedExports":[],"renderedExports":["SelectFilterComponent"],"renderedLength":3085},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/default-filter.component.mjs":{"code":"function DefaultFilterComponent_select_filter_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n} }\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n} }\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"completer-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n} }\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n} }\nclass DefaultFilterComponent extends FilterDefault {\n}\nDefaultFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵDefaultFilterComponent_BaseFactory; return function DefaultFilterComponent_Factory(t) { return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent); }; }();\nDefaultFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilterComponent, selectors: [[\"default-table-filter\"]], inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]], template: function DefaultFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, 0);\n        i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n        i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n        i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n        i0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\n        i0.ɵɵelementContainerEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    } }, dependencies: [i1.NgClass, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'default-table-filter',\n                template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                      [query]=\"query\"\n                      [ngClass]=\"inputClass\"\n                      [column]=\"column\"\n                      (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `,\n            }]\n    }], null, { query: [{\n            type: Input\n        }] }); })();","originalLength":9376,"removedExports":[],"renderedExports":["DefaultFilterComponent"],"renderedLength":5622},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/custom-filter.component.mjs":{"code":"const _c0$9 = [\"dynamicTarget\"];\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomFilterComponent extends FilterDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.column && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.query = this.query;\n            this.customComponent.instance.column = this.column;\n            this.customComponent.instance.source = this.source;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\n        }\n        if (this.customComponent) {\n            this.customComponent.instance.ngOnChanges(changes);\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) { return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomFilterComponent, selectors: [[\"custom-table-filter\"]], viewQuery: function CustomFilterComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$9, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'custom-table-filter',\n                template: `<ng-template #dynamicTarget></ng-template>`,\n            }]\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { query: [{\n            type: Input\n        }], dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();","originalLength":7042,"removedExports":[],"renderedExports":["CustomFilterComponent"],"renderedLength":2664},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.component.mjs":{"code":"function FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r3.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n} }\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"default-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r5.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n} }\nfunction FilterComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n    i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n} }\nclass FilterComponent extends FilterDefault {\n    constructor() {\n        super(...arguments);\n        this.query = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const filterConf = this.source.getFilter();\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n                    this.query = '';\n                    // add a check for existing filters an set the query if one exists for this column\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\n                }\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n                    filterConf.filters.forEach((k, v) => {\n                        if (k.field == this.column.id) {\n                            this.query = k.search;\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\nFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵFilterComponent_BaseFactory; return function FilterComponent_Factory(t) { return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent); }; }();\nFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterComponent, selectors: [[\"smart-intel-table-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"smart-table-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"smart-table-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]], template: function FilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n    } }, dependencies: [i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, DefaultFilterComponent, CustomFilterComponent], styles: [\"[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     a{font-weight:400}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table-filter', template: `\n      <div class=\"smart-table-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `, styles: [\":host .smart-table-filter ::ng-deep input,:host .smart-table-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .smart-table-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .smart-table-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .smart-table-filter ::ng-deep a{font-weight:400}\\n\"] }]\n    }], null, null); })();","originalLength":11368,"removedExports":[],"renderedExports":["FilterComponent"],"renderedLength":6056},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.module.mjs":{"code":"const FILTER_COMPONENTS = [\n    FilterDefault,\n    DefaultFilter,\n    FilterComponent,\n    DefaultFilterComponent,\n    CustomFilterComponent,\n    CheckboxFilterComponent,\n    CompleterFilterComponent,\n    InputFilterComponent,\n    SelectFilterComponent\n];\nclass FilterModule {\n}\nFilterModule.ɵfac = function FilterModule_Factory(t) { return new (t || FilterModule)(); };\nFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FilterModule });\nFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    Ng2CompleterModule\n                ],\n                declarations: [\n                    ...FILTER_COMPONENTS\n                ],\n                exports: [\n                    ...FILTER_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FilterModule, { declarations: [FilterDefault,\n        DefaultFilter,\n        FilterComponent,\n        DefaultFilterComponent,\n        CustomFilterComponent,\n        CheckboxFilterComponent,\n        CompleterFilterComponent,\n        InputFilterComponent,\n        SelectFilterComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule], exports: [FilterDefault,\n        DefaultFilter,\n        FilterComponent,\n        DefaultFilterComponent,\n        CustomFilterComponent,\n        CheckboxFilterComponent,\n        CompleterFilterComponent,\n        InputFilterComponent,\n        SelectFilterComponent] }); })();","originalLength":6639,"removedExports":[],"renderedExports":["FilterModule"],"renderedLength":1920},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.component.mjs":{"code":"function PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵtext(3, \"(current)\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n} }\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 15);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r9); const page_r3 = i0.ɵɵnextContext().$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r7.paginate(page_r3)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(page_r3);\n} }\nconst _c0$8 = function (a0) { return { active: a0 }; };\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n    i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const page_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0$8, ctx_r2.getPage() == page_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n} }\nconst _c1$1 = function (a0) { return { disabled: a0 }; };\nfunction PagerComponent_nav_0_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1)); });\n    i0.ɵɵelementStart(4, \"span\", 6);\n    i0.ɵɵtext(5, \"\\u00AB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 7);\n    i0.ɵɵtext(7, \"First\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.getPage() == 1 ? false : ctx_r13.prev()); });\n    i0.ɵɵelementStart(10, \"span\", 6);\n    i0.ɵɵtext(11, \"<\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 7);\n    i0.ɵɵtext(13, \"Prev\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n    i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next()); });\n    i0.ɵɵelementStart(17, \"span\", 6);\n    i0.ɵɵtext(18, \">\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\", 7);\n    i0.ɵɵtext(20, \"Next\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast())); });\n    i0.ɵɵelementStart(23, \"span\", 6);\n    i0.ɵɵtext(24, \"\\u00BB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"span\", 7);\n    i0.ɵɵtext(26, \"Last\");\n    i0.ɵɵelementEnd()()()()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1$1, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1$1, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n} }\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r17);\n} }\nfunction PagerComponent_nav_1_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\n    i0.ɵɵtext(2, \" Per Page: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 18);\n    i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.onChangePerPage($event)); })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r20 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r20.currentPerPage = $event); });\n    i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n} }\nclass PagerComponent {\n    constructor() {\n        this.perPageSelect = [];\n        this.changePage = new EventEmitter();\n        this.count = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                this.page = this.source.getPaging().page;\n                this.perPage = this.source.getPaging().perPage;\n                this.currentPerPage = this.perPage;\n                this.count = this.source.count();\n                if (this.isPageOutOfBounce()) {\n                    this.source.setPage(--this.page);\n                }\n                this.processPageChange(dataChanges);\n                this.initPages();\n            });\n        }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n    processPageChange(changes) {\n        if (changes['action'] === 'prepend') {\n            this.source.setPage(1);\n        }\n        if (changes['action'] === 'append') {\n            this.source.setPage(this.getLast());\n        }\n    }\n    shouldShow() {\n        return this.source.count() > this.perPage;\n    }\n    paginate(page) {\n        this.source.setPage(page);\n        this.page = page;\n        this.changePage.emit({ page });\n        return false;\n    }\n    next() {\n        return this.paginate(this.getPage() + 1);\n    }\n    prev() {\n        return this.paginate(this.getPage() - 1);\n    }\n    getPage() {\n        return this.page;\n    }\n    getPages() {\n        return this.pages;\n    }\n    getLast() {\n        return Math.ceil(this.count / this.perPage);\n    }\n    isPageOutOfBounce() {\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n    }\n    initPages() {\n        const pagesCount = this.getLast();\n        let showPagesCount = 4;\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n        this.pages = [];\n        if (this.shouldShow()) {\n            let middleOne = Math.ceil(showPagesCount / 2);\n            middleOne = this.page >= middleOne ? this.page : middleOne;\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n            const firstOne = lastOne - showPagesCount + 1;\n            for (let i = firstOne; i <= lastOne; i++) {\n                this.pages.push(i);\n            }\n        }\n    }\n    onChangePerPage(event) {\n        if (this.currentPerPage) {\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n                this.source.getPaging().perPage = null;\n            }\n            else {\n                this.source.getPaging().perPage = this.currentPerPage * 1;\n                this.source.refresh();\n            }\n            this.initPages();\n        }\n    }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(); };\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"smart-intel-table-pager\"]], inputs: { source: \"source\", perPageSelect: \"perPageSelect\" }, outputs: { changePage: \"changePage\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"smart-table-pagination-nav\", 4, \"ngIf\"], [\"class\", \"smart-table-pagination-per-page\", 4, \"ngIf\"], [1, \"smart-table-pagination-nav\"], [1, \"smart-table-pagination\", \"pagination\"], [1, \"smart-table-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"smart-table-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"smart-table-page-link page-link\", 4, \"ngIf\"], [\"class\", \"smart-table-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"smart-table-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [1, \"smart-table-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PagerComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n        i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\".smart-table-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination[_ngcontent-%COMP%]   .smart-table-page-item[_ngcontent-%COMP%]{display:inline}.smart-table-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .smart-table-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table-pager', template: `\n    <nav *ngIf=\"shouldShow()\" class=\"smart-table-pagination-nav\">\n      <ul class=\"smart-table-pagination pagination\">\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"smart-table-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"smart-table-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"smart-table-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `, styles: [\".smart-table-pagination{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination .smart-table-page-item{display:inline}.smart-table-pagination .page-link-next,.smart-table-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"] }]\n    }], null, { source: [{\n            type: Input\n        }], perPageSelect: [{\n            type: Input\n        }], changePage: [{\n            type: Output\n        }] }); })();","originalLength":30379,"removedExports":[],"renderedExports":["PagerComponent"],"renderedLength":15118},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.module.mjs":{"code":"class PagerModule {\n}\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule\n                ],\n                declarations: [\n                    PagerComponent\n                ],\n                exports: [\n                    PagerComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent], imports: [CommonModule,\n        FormsModule], exports: [PagerComponent] }); })();","originalLength":2607,"removedExports":[],"renderedExports":["PagerModule"],"renderedLength":972},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/create-cancel.component.mjs":{"code":"class TbodyCreateCancelComponent {\n    onSave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.grid.save(this.row, this.editConfirm);\n    }\n    onCancelEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.row.isInEditing = false;\n    }\n    ngOnChanges() {\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n}\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) { return new (t || TbodyCreateCancelComponent)(); };\nTbodyCreateCancelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCreateCancelComponent, selectors: [[\"smart-table-body-create-cancel\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-cancel\", 3, \"innerHTML\", \"click\"]], template: function TbodyCreateCancelComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) { return ctx.onSave($event); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) { return ctx.onCancelEdit($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-body-create-cancel',\n                template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }] }); })();","originalLength":6123,"removedExports":[],"renderedExports":["TbodyCreateCancelComponent"],"renderedLength":2571},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/edit-delete.component.mjs":{"code":"function TbodyEditDeleteComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onEdit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\n} }\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onDelete($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\n} }\nclass TbodyEditDeleteComponent {\n    constructor() {\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n    }\n    onEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.editRowSelect.emit(this.row);\n        if (this.grid.getSetting('mode') === 'external') {\n            this.edit.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.edit(this.row);\n        }\n    }\n    onDelete(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.delete.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.delete(this.row, this.deleteConfirm);\n        }\n    }\n    ngOnChanges() {\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n}\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) { return new (t || TbodyEditDeleteComponent)(); };\nTbodyEditDeleteComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyEditDeleteComponent, selectors: [[\"smart-table-body-edit-delete\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\"]], template: function TbodyEditDeleteComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n        i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n    } }, dependencies: [i1.NgIf], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-body-edit-delete',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"smart-table-action smart-table-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"smart-table-action smart-table-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], deleteConfirm: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], edit: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], editRowSelect: [{\n            type: Output\n        }] }); })();","originalLength":11306,"removedExports":[],"renderedExports":["TbodyEditDeleteComponent"],"renderedLength":4832},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/custom.component.mjs":{"code":"function TbodyCustomComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r3); const action_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onCustom(action_r1, $event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\n} }\nclass TbodyCustomComponent {\n    constructor() {\n        this.custom = new EventEmitter();\n    }\n    onCustom(action, event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.custom.emit({\n            action: action.name,\n            data: this.row.getData(),\n            source: this.source\n        });\n    }\n}\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) { return new (t || TbodyCustomComponent)(); };\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCustomComponent, selectors: [[\"smart-table-body-custom\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\"]], template: function TbodyCustomComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n    } }, dependencies: [i1.NgForOf], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-body-custom',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\n        class=\"smart-table-action smart-table-action-custom-custom\" \n        [innerHTML]=\"action.title\"\n        (click)=\"onCustom(action, $event)\"></a>\n        `\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], custom: [{\n            type: Output\n        }] }); })();","originalLength":5691,"removedExports":[],"renderedExports":["TbodyCustomComponent"],"renderedLength":2587},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.component.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0$7 = [\"smart-table-body\", \"\"];\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() { i0.ɵɵrestoreView(_r11); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.multipleSelectRow.emit(row_r2)); });\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r13.custom.emit($event)); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n    i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r17 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r17.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r19 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r19.editRowSelect.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"smart-intel-table-cell\", 12);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const cell_r22 = ctx.$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) { if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r25.custom.emit($event)); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n    i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r27 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r27.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r29 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r29.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r31 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r31.editRowSelect.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n} }\nconst _c1 = function (a0) { return { selected: a0 }; };\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 2);\n    i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r33 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r33.userSelectRow.emit(row_r2)); })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r35 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r35.rowHover.emit(row_r2)); });\n    i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\n    i0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\n    i0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\n    i0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, row_r2.isSelected));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n} }\nclass Ng2SmartTableTbodyComponent {\n    constructor() {\n        this.save = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.edited = new EventEmitter();\n        this.userSelectRow = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n        this.multipleSelectRow = new EventEmitter();\n        this.rowHover = new EventEmitter();\n    }\n    get tableColumnsCount() {\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n        return this.grid.getColumns().length + actionColumns;\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.mode = this.grid.getSetting('mode');\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) { return new (t || Ng2SmartTableTbodyComponent)(); };\nNg2SmartTableTbodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTbodyComponent, selectors: [[\"\", \"smart-table-body\", \"\"]], inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$7, decls: 2, vars: 2, consts: [[\"class\", \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"smart-table-actions smart-table-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\", \"smart-table-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"smart-table-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]], template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\n        i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel, CellComponent, TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent], styles: [\"[_nghost-%COMP%]   .smart-table-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .smart-table-row[_ngcontent-%COMP%]   .smart-table-actions.smart-table-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     smart-table-body-edit-delete a:first-child, [_nghost-%COMP%]     smart-table-body-create-cancel a:first-child{margin-right:.25rem}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\n        type: Component,\n        args: [{ selector: '[smart-table-body]', template: \"<tr\\n  *ngFor=\\\"let row of grid.getRows()\\\"\\n  (click)=\\\"userSelectRow.emit(row)\\\"\\n  (mouseover)=\\\"rowHover.emit(row)\\\"\\n  class=\\\"smart-table-row\\\"\\n  [className]=\\\"rowClassFunction(row)\\\"\\n  [ngClass]=\\\"{ selected: row.isSelected }\\\"\\n>\\n  <td\\n    *ngIf=\\\"isMultiSelectVisible\\\"\\n    class=\\\"smart-table-actions smart-table-action-multiple-select\\\"\\n    (click)=\\\"multipleSelectRow.emit(row)\\\"\\n  >\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\" />\\n  </td>\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <smart-intel-table-cell\\n      [cell]=\\\"cell\\\"\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [isNew]=\\\"false\\\"\\n      [mode]=\\\"mode\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [inputClass]=\\\"editInputClass\\\"\\n      [isInEditing]=\\\"row.isInEditing\\\"\\n    >\\n    </smart-intel-table-cell>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\", styles: [\":host .smart-table-row.selected{background:rgba(0,0,0,.05)}:host .smart-table-row .smart-table-actions.smart-table-action-multiple-select{text-align:center}:host ::ng-deep smart-table-body-edit-delete a:first-child,:host ::ng-deep smart-table-body-create-cancel a:first-child{margin-right:.25rem}\\n\"] }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], deleteConfirm: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], rowClassFunction: [{\n            type: Input\n        }], save: [{\n            type: Output\n        }], cancel: [{\n            type: Output\n        }], edit: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], custom: [{\n            type: Output\n        }], edited: [{\n            type: Output\n        }], userSelectRow: [{\n            type: Output\n        }], editRowSelect: [{\n            type: Output\n        }], multipleSelectRow: [{\n            type: Output\n        }], rowHover: [{\n            type: Output\n        }] }); })();","originalLength":28707,"removedExports":[],"renderedExports":["Ng2SmartTableTbodyComponent"],"renderedLength":16228},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.module.mjs":{"code":"const TBODY_COMPONENTS = [\n    TbodyCreateCancelComponent,\n    TbodyEditDeleteComponent,\n    TbodyCustomComponent,\n    Ng2SmartTableTbodyComponent\n];\nclass TbodyModule {\n}\nTbodyModule.ɵfac = function TbodyModule_Factory(t) { return new (t || TbodyModule)(); };\nTbodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TbodyModule });\nTbodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        CellModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    CellModule\n                ],\n                declarations: [\n                    ...TBODY_COMPONENTS\n                ],\n                exports: [\n                    ...TBODY_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TbodyModule, { declarations: [TbodyCreateCancelComponent,\n        TbodyEditDeleteComponent,\n        TbodyCustomComponent,\n        Ng2SmartTableTbodyComponent], imports: [CommonModule,\n        FormsModule,\n        CellModule], exports: [TbodyCreateCancelComponent,\n        TbodyEditDeleteComponent,\n        TbodyCustomComponent,\n        Ng2SmartTableTbodyComponent] }); })();","originalLength":4489,"removedExports":[],"renderedExports":["TbodyModule"],"renderedLength":1430},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/add-button.component.mjs":{"code":"const _c0$6 = [\"smart-table-add-button\", \"\"];\nfunction AddButtonComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.onAdd($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\n} }\nclass AddButtonComponent {\n    constructor(ref) {\n        this.ref = ref;\n        this.create = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions-title', 'smart-table-actions-title-add');\n    }\n    ngOnChanges() {\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n    onAdd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.create.emit({\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.createFormShown = true;\n        }\n    }\n}\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) { return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nAddButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddButtonComponent, selectors: [[\"\", \"smart-table-add-button\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$6, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-add\", 3, \"innerHTML\", \"click\"]], template: function AddButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n    } }, dependencies: [i1.NgIf], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddButtonComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-add-button]',\n                template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"smart-table-action smart-table-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `,\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }] }); })();","originalLength":6784,"removedExports":[],"renderedExports":["AddButtonComponent"],"renderedLength":2831},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-filters-row.component.mjs":{"code":"const _c0$5 = [\"smart-table-thead-filters-row\", \"\"];\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"th\");\n} }\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.create.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\")(1, \"smart-intel-table-filter\", 5);\n    i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_smart_intel_table_filter_filter_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.filter.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n} }\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 6);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.create.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n} }\nclass TheadFitlersRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) { return new (t || TheadFitlersRowComponent)(); };\nTheadFitlersRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFitlersRowComponent, selectors: [[\"\", \"smart-table-thead-filters-row\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$5, decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]], template: function TheadFitlersRowComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n        i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n        i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, dependencies: [i1.NgForOf, i1.NgIf, FilterComponent, AddButtonComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-thead-filters-row]',\n                template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th smart-table-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"smart-table-th {{ column.id }}\">\n      <smart-intel-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </smart-intel-table-filter>\n    </th>\n    <th smart-table-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }], filter: [{\n            type: Output\n        }] }); })();","originalLength":10668,"removedExports":[],"renderedExports":["TheadFitlersRowComponent"],"renderedLength":5403},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions.component.mjs":{"code":"class ActionsComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n}\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) { return new (t || ActionsComponent)(); };\nActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsComponent, selectors: [[\"ng2-st-actions\"]], inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-cancel\", 3, \"innerHTML\", \"click\"]], template: function ActionsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) { $event.preventDefault(); return ctx.create.emit($event); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) { $event.preventDefault(); return ctx.grid.createFormShown = false; });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-st-actions',\n                template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }] }); })();","originalLength":5047,"removedExports":[],"renderedExports":["ActionsComponent"],"renderedLength":2319},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-form-row.component.mjs":{"code":"const _c0$4 = [\"smart-table-thead-form-row\", \"\"];\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n} }\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onCreate($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"smart-intel-table-cell\", 5);\n    i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_smart_intel_table_cell_edited_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.onCreate($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const cell_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n} }\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.onCreate($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n} }\nclass TheadFormRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    onCreate(event) {\n        event.stopPropagation();\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) { return new (t || TheadFormRowComponent)(); };\nTheadFormRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFormRowComponent, selectors: [[\"\", \"smart-table-thead-form-row\", \"\"]], inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$4, decls: 4, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]], template: function TheadFormRowComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n        i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n        i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n        i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, dependencies: [i1.NgForOf, i1.NgIf, CellComponent, ActionsComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFormRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-thead-form-row]',\n                template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <smart-intel-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </smart-intel-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }] }); })();","originalLength":11068,"removedExports":[],"renderedExports":["TheadFormRowComponent"],"renderedLength":5424},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions-title.component.mjs":{"code":"const _c0$3 = [\"ng2-st-actions-title\", \"\"];\nclass ActionsTitleComponent {\n    constructor(ref) {\n        this.ref = ref;\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions');\n    }\n    ngOnChanges() {\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n}\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) { return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nActionsTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsTitleComponent, selectors: [[\"\", \"ng2-st-actions-title\", \"\"]], inputs: { grid: \"grid\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$3, decls: 2, vars: 1, consts: [[1, \"smart-table-title\"]], template: function ActionsTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-actions-title]',\n                template: `\n    <div class=\"smart-table-title\">{{ actionsColumnTitle }}</div>\n  `,\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n            type: Input\n        }] }); })();","originalLength":3647,"removedExports":[],"renderedExports":["ActionsTitleComponent"],"renderedLength":1489},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/checkbox-select-all.component.mjs":{"code":"const _c0$2 = [\"smart-table-checkbox-select-all\", \"\"];\nclass CheckboxSelectAllComponent {\n}\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) { return new (t || CheckboxSelectAllComponent)(); };\nCheckboxSelectAllComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxSelectAllComponent, selectors: [[\"\", \"smart-table-checkbox-select-all\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, attrs: _c0$2, decls: 1, vars: 1, consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]], template: function CheckboxSelectAllComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n    } }, dependencies: [i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-checkbox-select-all]',\n                template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }] }); })();","originalLength":3090,"removedExports":[],"renderedExports":["CheckboxSelectAllComponent"],"renderedLength":1340},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/title/title.component.mjs":{"code":"function TitleComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2._sort($event)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n} }\nfunction TitleComponent_span_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.column.title);\n} }\nclass TitleComponent {\n    constructor() {\n        this.currentDirection = '';\n        this.sort = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const sortConf = this.source.getSort();\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n                    this.currentDirection = sortConf[0]['direction'];\n                }\n                else {\n                    this.currentDirection = '';\n                }\n                sortConf.forEach((fieldConf) => {\n                });\n            });\n        }\n    }\n    _sort(event) {\n        event.preventDefault();\n        this.changeSortDirection();\n        this.source.setSort([\n            {\n                field: this.column.id,\n                direction: this.currentDirection,\n                compare: this.column.getCompareFunction(),\n            },\n        ]);\n        this.sort.emit(null);\n    }\n    changeSortDirection() {\n        if (this.currentDirection) {\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n            this.currentDirection = newDirection;\n        }\n        else {\n            this.currentDirection = this.column.sortDirection;\n        }\n        return this.currentDirection;\n    }\n}\nTitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(); };\nTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TitleComponent, selectors: [[\"smart-intel-table-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"smart-table-sort\"]], template: function TitleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n        i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n    } }, dependencies: [i1.NgClass, i1.NgIf], styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table-title', template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"smart-table-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"smart-table-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\n    }], null, { column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }] }); })();","originalLength":10881,"removedExports":[],"renderedExports":["TitleComponent"],"renderedLength":4821},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/column-title.component.mjs":{"code":"class ColumnTitleComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n    }\n}\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) { return new (t || ColumnTitleComponent)(); };\nColumnTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnTitleComponent, selectors: [[\"smart-table-column-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, decls: 2, vars: 2, consts: [[1, \"smart-table-title\"], [3, \"source\", \"column\", \"sort\"]], template: function ColumnTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"smart-intel-table-title\", 1);\n        i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_smart_intel_table_title_sort_1_listener($event) { return ctx.sort.emit($event); });\n        i0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\n    } }, dependencies: [TitleComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-column-title',\n                template: `\n    <div class=\"smart-table-title\">\n      <smart-intel-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-intel-table-title>\n    </div>\n  `,\n            }]\n    }], null, { column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }] }); })();","originalLength":3768,"removedExports":[],"renderedExports":["ColumnTitleComponent"],"renderedLength":1603},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-titles-row.component.mjs":{"code":"const _c0$1 = [\"smart-table-thead-titles-row\", \"\"];\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.selectAllRows.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n} }\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 5)(1, \"smart-table-column-title\", 6);\n    i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_smart_table_column_title_sort_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.sort.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n    i0.ɵɵstyleProp(\"width\", column_r6.width);\n    i0.ɵɵproperty(\"ngClass\", column_r6.class);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\n} }\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n} }\nclass TheadTitlesRowComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) { return new (t || TheadTitlesRowComponent)(); };\nTheadTitlesRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadTitlesRowComponent, selectors: [[\"\", \"smart-table-thead-titles-row\", \"\"]], inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$1, decls: 4, vars: 4, consts: [[\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]], template: function TheadTitlesRowComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n        i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\n        i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, ActionsTitleComponent, CheckboxSelectAllComponent, ColumnTitleComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-thead-titles-row]',\n                template: `\n    <th smart-table-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                  [grid]=\"grid\"\n                                  [source]=\"source\"\n                                  [isAllSelected]=\"isAllSelected\"\n                                  (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"smart-table-th {{ column.id }}\"\n        [ngClass]=\"column.class\"\n        [style.width]=\"column.width\">\n      <smart-table-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-table-column-title>\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }], selectAllRows: [{\n            type: Output\n        }] }); })();","originalLength":10556,"removedExports":[],"renderedExports":["TheadTitlesRowComponent"],"renderedLength":5393},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.component.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0 = [\"smart-table-thead\", \"\"];\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.sort.emit($event)); })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.selectAllRows.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n} }\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.create.emit($event)); })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.filter.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n} }\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 5);\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n} }\nclass Ng2SmartTableTheadComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n}\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) { return new (t || Ng2SmartTableTheadComponent)(); };\nNg2SmartTableTheadComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTheadComponent, selectors: [[\"\", \"smart-table-thead\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 3, vars: 3, consts: [[\"smart-table-thead-titles-row\", \"\", \"class\", \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"smart-table-thead-filters-row\", \"\", \"class\", \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"smart-table-thead-titles-row\", \"\", 1, \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"smart-table-thead-filters-row\", \"\", 1, \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]], template: function Ng2SmartTableTheadComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n        i0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n        i0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n    } }, dependencies: [i1.NgIf, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\n        type: Component,\n        args: [{ selector: '[smart-table-thead]', template: \"<tr\\n  smart-table-thead-titles-row\\n  *ngIf=\\\"!isHideHeader\\\"\\n  class=\\\"smart-table-titles\\\"\\n  [grid]=\\\"grid\\\"\\n  [isAllSelected]=\\\"isAllSelected\\\"\\n  [source]=\\\"source\\\"\\n  (sort)=\\\"sort.emit($event)\\\"\\n  (selectAllRows)=\\\"selectAllRows.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-filters-row\\n  *ngIf=\\\"!isHideSubHeader\\\"\\n  class=\\\"smart-table-filters\\\"\\n  [grid]=\\\"grid\\\"\\n  [source]=\\\"source\\\"\\n  (create)=\\\"create.emit($event)\\\"\\n  (filter)=\\\"filter.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-form-row\\n  *ngIf=\\\"grid.createFormShown\\\"\\n  [grid]=\\\"grid\\\"\\n  [createConfirm]=\\\"createConfirm\\\"\\n></tr>\\n\" }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }], selectAllRows: [{\n            type: Output\n        }], create: [{\n            type: Output\n        }], filter: [{\n            type: Output\n        }] }); })();","originalLength":9950,"removedExports":[],"renderedExports":["Ng2SmartTableTheadComponent"],"renderedLength":5392},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.module.mjs":{"code":"const THEAD_COMPONENTS = [\n    ActionsComponent,\n    ActionsTitleComponent,\n    AddButtonComponent,\n    CheckboxSelectAllComponent,\n    ColumnTitleComponent,\n    TitleComponent,\n    TheadFitlersRowComponent,\n    TheadFormRowComponent,\n    TheadTitlesRowComponent,\n    Ng2SmartTableTheadComponent\n];\nclass TheadModule {\n}\nTheadModule.ɵfac = function TheadModule_Factory(t) { return new (t || TheadModule)(); };\nTheadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TheadModule });\nTheadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    FilterModule,\n                    CellModule\n                ],\n                declarations: [\n                    ...THEAD_COMPONENTS\n                ],\n                exports: [\n                    ...THEAD_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TheadModule, { declarations: [ActionsComponent,\n        ActionsTitleComponent,\n        AddButtonComponent,\n        CheckboxSelectAllComponent,\n        ColumnTitleComponent,\n        TitleComponent,\n        TheadFitlersRowComponent,\n        TheadFormRowComponent,\n        TheadTitlesRowComponent,\n        Ng2SmartTableTheadComponent], imports: [CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule], exports: [ActionsComponent,\n        ActionsTitleComponent,\n        AddButtonComponent,\n        CheckboxSelectAllComponent,\n        ColumnTitleComponent,\n        TitleComponent,\n        TheadFitlersRowComponent,\n        TheadFormRowComponent,\n        TheadTitlesRowComponent,\n        Ng2SmartTableTheadComponent] }); })();","originalLength":7187,"removedExports":[],"renderedExports":["TheadModule"],"renderedLength":2003},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/loca-data-filter.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nconst filterValues = (value, search) => value.toString().toLowerCase().includes(search.toString().toLowerCase());\nclass LocalFilter {\n    static filter(data, field, search, customFilter) {\n        const filter = customFilter ? customFilter : filterValues;\n        return data.filter((el) => {\n            const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n            // return filter.call(null, value, search); // FIXME just fallback dis in case direct call not working\n            return filter(null, value, search);\n        });\n    }\n}","originalLength":2835,"removedExports":[],"renderedExports":["filterValues","LocalFilter"],"renderedLength":630},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-pager.define.mjs":{"code":"class LocalPager {\n    static paginate(data, page, perPage) {\n        return data.slice(perPage * (page - 1), perPage * page);\n    }\n}","originalLength":1000,"removedExports":[],"renderedExports":["LocalPager"],"renderedLength":134},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-sorter.define.mjs":{"code":"const compareValues = (direction, a, b) => {\n    if (a < b) {\n        return -1 * direction;\n    }\n    if (a > b) {\n        return direction;\n    }\n    return 0;\n};\nclass LocalSorter {\n    static sort(data, field, direction, customCompare) {\n        const dir = (direction === 'asc') ? 1 : -1;\n        const compare = customCompare ? customCompare : compareValues;\n        // return data.sort((a, b) => compare.call(null, dir, a[field], b[field])); // FIXME fallback to dis in cas direct call fails\n        return data.sort((a, b) => compare(null, dir, a[field], b[field]));\n    }\n}","originalLength":2795,"removedExports":[],"renderedExports":["compareValues","LocalSorter"],"renderedLength":582},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-source.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-unsafe-return */\nclass LocalDataSource extends DataSource {\n    constructor(data = []) {\n        super();\n        this.data = [];\n        this.filteredAndSorted = [];\n        this.sortConf = [];\n        this.filterConf = {\n            filters: [],\n            andOperator: true\n        };\n        this.pagingConf = {};\n        this.data = data;\n    }\n    load(data) {\n        this.data = data;\n        return super.load(data);\n    }\n    prepend(element) {\n        this.reset(true);\n        this.data.unshift(element);\n        return super.prepend(element);\n    }\n    append(element) {\n        this.reset(true);\n        this.data.push(element);\n        return super.append(element);\n    }\n    add(element) {\n        this.data.push(element);\n        return super.add(element);\n    }\n    remove(element) {\n        this.data = this.data.filter(el => el !== element);\n        return super.remove(element);\n    }\n    update(element, values) {\n        return new Promise((resolve, reject) => {\n            this.find(element).then((found) => {\n                found = deepExtend(found, values);\n                super.update(found, values).then(resolve).catch(reject);\n            }).catch(reject);\n        });\n    }\n    find(element) {\n        const found = this.data.find(el => el === element);\n        if (found) {\n            return Promise.resolve(found);\n        }\n        return Promise.reject(new Error('Element was not found in the dataset'));\n    }\n    getElements() {\n        const data = this.data.slice(0);\n        return Promise.resolve(this.prepareData(data));\n    }\n    getFilteredAndSorted() {\n        const data = this.data.slice(0);\n        this.prepareData(data);\n        return Promise.resolve(this.filteredAndSorted);\n    }\n    getAll() {\n        const data = this.data.slice(0);\n        return Promise.resolve(data);\n    }\n    reset(silent = false) {\n        if (silent) {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n            this.sortConf = [];\n            this.pagingConf.page = 1;\n        }\n        else {\n            this.setFilter([], true, false);\n            this.setSort([], false);\n            this.setPage(1);\n        }\n    }\n    empty() {\n        this.data = [];\n        return super.empty();\n    }\n    count() {\n        return this.filteredAndSorted.length;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param doEmit\n     * @returns\n     */\n    setSort(conf, doEmit = true) {\n        if (conf !== null) {\n            conf.forEach((fieldConf) => {\n                if (!fieldConf.field || typeof fieldConf.direction === 'undefined') {\n                    throw new Error('Sort configuration object is not valid');\n                }\n            });\n            this.sortConf = conf;\n        }\n        super.setSort(conf, doEmit);\n        return this;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, search: string, filter: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param andOperator\n     * @param doEmit\n     * @returns\n     */\n    setFilter(conf, andOperator = true, doEmit = true) {\n        if (conf && conf.length > 0) {\n            conf.forEach((fieldConf) => {\n                this.addFilter(fieldConf, andOperator, false);\n            });\n        }\n        else {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n        }\n        this.filterConf.andOperator = andOperator;\n        this.pagingConf.page = 1;\n        super.setFilter(conf, andOperator, doEmit);\n        return this;\n    }\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\n        if (!fieldConf.field || typeof fieldConf.search === 'undefined') {\n            throw new Error('Filter configuration object is not valid');\n        }\n        let found = false;\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\n            if (currentFieldConf.field === fieldConf.field) {\n                this.filterConf.filters[index] = fieldConf;\n                found = true;\n            }\n        });\n        if (!found) {\n            this.filterConf.filters.push(fieldConf);\n        }\n        this.filterConf.andOperator = andOperator;\n        super.addFilter(fieldConf, andOperator, doEmit);\n        return this;\n    }\n    setPaging(page, perPage, doEmit = true) {\n        this.pagingConf.page = page;\n        this.pagingConf.perPage = perPage;\n        super.setPaging(page, perPage, doEmit);\n        return this;\n    }\n    setPage(page, doEmit = true) {\n        this.pagingConf.page = page;\n        super.setPage(page, doEmit);\n        return this;\n    }\n    getSort() {\n        return this.sortConf;\n    }\n    getFilter() {\n        return this.filterConf;\n    }\n    getPaging() {\n        return this.pagingConf;\n    }\n    prepareData(data) {\n        data = this.filter(data);\n        data = this.sort(data);\n        this.filteredAndSorted = data.slice(0);\n        return this.paginate(data);\n    }\n    sort(data) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                data = LocalSorter\n                    .sort(data, fieldConf.field, fieldConf.direction, fieldConf.compare);\n            });\n        }\n        return data;\n    }\n    // TODO: refactor?\n    filter(data) {\n        if (this.filterConf.filters) {\n            if (this.filterConf.andOperator) {\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        data = LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter);\n                    }\n                });\n            }\n            else {\n                let mergedData = [];\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        mergedData = mergedData.concat(LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter));\n                    }\n                });\n                // remove non unique items\n                data = mergedData.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n            }\n        }\n        return data;\n    }\n    paginate(data) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            data = LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\n        }\n        return data;\n    }\n}","originalLength":25195,"removedExports":[],"renderedExports":["LocalDataSource"],"renderedLength":6683},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.component.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction SmartIntelTableComponent_thead_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"thead\", 4);\n    i0.ɵɵlistener(\"create\", function SmartIntelTableComponent_thead_1_Template_thead_create_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.create.emit($event)); })(\"selectAllRows\", function SmartIntelTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onSelectAllRows($event)); })(\"sort\", function SmartIntelTableComponent_thead_1_Template_thead_sort_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.sort($event)); })(\"filter\", function SmartIntelTableComponent_thead_1_Template_thead_filter_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.filter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n} }\nfunction SmartIntelTableComponent_smart_intel_table_pager_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"smart-intel-table-pager\", 5);\n    i0.ɵɵlistener(\"changePage\", function SmartIntelTableComponent_smart_intel_table_pager_3_Template_smart_intel_table_pager_changePage_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.changePage($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n} }\nclass SmartIntelTableComponent {\n    constructor() {\n        this.settings = {};\n        this.rowSelect = new EventEmitter();\n        this.rowDeselect = new EventEmitter();\n        this.userRowSelect = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.create = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.deleteConfirm = new EventEmitter();\n        this.editConfirm = new EventEmitter();\n        this.createConfirm = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.defaultSettings = {\n            mode: 'inline',\n            selectMode: 'single',\n            /**\n             * Points to an element in all data\n             *\n             * when < 0 all lines must be deselected\n             */\n            selectedRowIndex: 0,\n            switchPageToSelectedRowPage: false,\n            hideHeader: false,\n            hideSubHeader: false,\n            actions: {\n                columnTitle: 'Actions',\n                add: true,\n                edit: true,\n                delete: true,\n                custom: [],\n                position: 'left' // left|right\n            },\n            filter: {\n                inputClass: ''\n            },\n            edit: {\n                inputClass: '',\n                editButtonContent: 'Edit',\n                saveButtonContent: 'Update',\n                cancelButtonContent: 'Cancel',\n                confirmSave: false\n            },\n            add: {\n                inputClass: '',\n                addButtonContent: 'Add New',\n                createButtonContent: 'Create',\n                cancelButtonContent: 'Cancel',\n                confirmCreate: false\n            },\n            delete: {\n                deleteButtonContent: 'Delete',\n                confirmDelete: false\n            },\n            attr: {\n                id: '',\n                class: ''\n            },\n            noDataMessage: 'No data found',\n            columns: {},\n            pager: {\n                display: true,\n                page: 1,\n                perPage: 10\n            },\n            rowClassFunction: () => ''\n        };\n        this.isAllSelected = false;\n        this.destroyed$ = new Subject();\n    }\n    ngOnChanges(changes) {\n        if (this.grid) {\n            if (changes.settings) {\n                this.grid.setSettings(this.prepareSettings());\n            }\n            if (changes.source) {\n                this.source = this.prepareSource();\n                this.grid.setSource(this.source);\n            }\n        }\n        else {\n            this.initGrid();\n        }\n        this.tableId = this.grid.getSetting('attr.id');\n        this.tableClass = this.grid.getSetting('attr.class');\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n        if (!this.grid) {\n            return;\n        }\n        this.grid.settings.selectedRowIndex = index;\n        if (this.isIndexOutOfRange(index)) {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n            return;\n        }\n        if (switchPageToSelectedRowPage) {\n            const source = this.source;\n            const paging = source.getPaging();\n            const page = getPageForRowIndex(index, paging.perPage);\n            index %= paging.perPage;\n            this.grid.settings.selectedRowIndex = index;\n            if (page !== paging.page) {\n                source.setPage(page);\n                return;\n            }\n        }\n        const row = this.grid.getRows()[index];\n        if (row) {\n            this.onSelectRow(row);\n        }\n        else {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n        }\n    }\n    editRowSelect(row) {\n        if (this.grid.getSetting('selectMode') === 'multi') {\n            this.onMultipleSelectRow(row);\n        }\n        else {\n            this.onSelectRow(row);\n        }\n    }\n    onUserSelectRow(row) {\n        if (this.grid.getSetting('selectMode') !== 'multi') {\n            this.grid.selectRow(row);\n            this.emitUserSelectRow(row);\n            this.emitSelectRow(row);\n        }\n    }\n    onRowHover(row) {\n        this.rowHover.emit(row);\n    }\n    multipleSelectRow(row) {\n        this.grid.multipleSelectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n    }\n    onSelectAllRows($event) {\n        this.isAllSelected = !this.isAllSelected;\n        this.grid.selectAllRows(this.isAllSelected);\n        this.emitUserSelectRow(null);\n        this.emitSelectRow(null);\n    }\n    onSelectRow(row) {\n        this.grid.selectRow(row);\n        this.emitSelectRow(row);\n    }\n    onMultipleSelectRow(row) {\n        this.emitSelectRow(row);\n    }\n    initGrid() {\n        this.source = this.prepareSource();\n        this.grid = new Grid(this.source, this.prepareSettings());\n        this.subscribeToOnSelectRow();\n        this.subscribeToOnDeselectRow();\n    }\n    prepareSource() {\n        if (this.source instanceof DataSource) {\n            return this.source;\n        }\n        else if (this.source instanceof Array) {\n            return new LocalDataSource(this.source);\n        }\n        return new LocalDataSource();\n    }\n    prepareSettings() {\n        return deepExtend({}, this.defaultSettings, this.settings);\n    }\n    changePage($event) {\n        this.resetAllSelector();\n    }\n    sort($event) {\n        this.resetAllSelector();\n    }\n    filter($event) {\n        this.resetAllSelector();\n    }\n    deselectAllRows() {\n        this.grid.dataSet.deselectAll();\n        this.emitDeselectRow(null);\n    }\n    resetAllSelector() {\n        this.isAllSelected = false;\n    }\n    emitUserSelectRow(row) {\n        const selectedRows = this.grid.getSelectedRows();\n        this.userRowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : []\n        });\n    }\n    emitSelectRow(row) {\n        const data = {\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        };\n        this.rowSelect.emit(data);\n        if (!row?.isSelected) {\n            this.rowDeselect.emit(data);\n        }\n    }\n    emitDeselectRow(row) {\n        this.rowDeselect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        });\n    }\n    isIndexOutOfRange(index) {\n        const dataAmount = this.source?.count();\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n    }\n    subscribeToOnSelectRow() {\n        if (this.onSelectRowSubscription) {\n            this.onSelectRowSubscription.unsubscribe();\n        }\n        this.onSelectRowSubscription = this.grid.onSelectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitSelectRow(row);\n        });\n    }\n    subscribeToOnDeselectRow() {\n        if (this.onDeselectRowSubscription) {\n            this.onDeselectRowSubscription.unsubscribe();\n        }\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitDeselectRow(row);\n        });\n    }\n}\nSmartIntelTableComponent.ɵfac = function SmartIntelTableComponent_Factory(t) { return new (t || SmartIntelTableComponent)(); };\nSmartIntelTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SmartIntelTableComponent, selectors: [[\"smart-intel-table\"]], inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 4, vars: 9, consts: [[3, \"id\", \"ngClass\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"smart-table-body\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]], template: function SmartIntelTableComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵtemplate(1, SmartIntelTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\n        i0.ɵɵelementStart(2, \"tbody\", 2);\n        i0.ɵɵlistener(\"edit\", function SmartIntelTableComponent_Template_tbody_edit_2_listener($event) { return ctx.edit.emit($event); })(\"delete\", function SmartIntelTableComponent_Template_tbody_delete_2_listener($event) { return ctx.delete.emit($event); })(\"custom\", function SmartIntelTableComponent_Template_tbody_custom_2_listener($event) { return ctx.custom.emit($event); })(\"userSelectRow\", function SmartIntelTableComponent_Template_tbody_userSelectRow_2_listener($event) { return ctx.onUserSelectRow($event); })(\"editRowSelect\", function SmartIntelTableComponent_Template_tbody_editRowSelect_2_listener($event) { return ctx.editRowSelect($event); })(\"multipleSelectRow\", function SmartIntelTableComponent_Template_tbody_multipleSelectRow_2_listener($event) { return ctx.multipleSelectRow($event); })(\"rowHover\", function SmartIntelTableComponent_Template_tbody_rowHover_2_listener($event) { return ctx.onRowHover($event); });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, SmartIntelTableComponent_smart_intel_table_pager_3_Template, 1, 2, \"smart-intel-table-pager\", 3);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n    } }, dependencies: [i1.NgClass, i1.NgIf, PagerComponent, Ng2SmartTableTbodyComponent, Ng2SmartTableTheadComponent], styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table', template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n  <thead\\n    smart-table-thead\\n    *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n    [grid]=\\\"grid\\\"\\n    [isAllSelected]=\\\"isAllSelected\\\"\\n    [source]=\\\"source\\\"\\n    [createConfirm]=\\\"createConfirm\\\"\\n    (create)=\\\"create.emit($event)\\\"\\n    (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n    (sort)=\\\"sort($event)\\\"\\n    (filter)=\\\"filter($event)\\\"\\n  ></thead>\\n\\n  <tbody\\n    smart-table-body\\n    [grid]=\\\"grid\\\"\\n    [source]=\\\"source\\\"\\n    [deleteConfirm]=\\\"deleteConfirm\\\"\\n    [editConfirm]=\\\"editConfirm\\\"\\n    [rowClassFunction]=\\\"rowClassFunction\\\"\\n    (edit)=\\\"edit.emit($event)\\\"\\n    (delete)=\\\"delete.emit($event)\\\"\\n    (custom)=\\\"custom.emit($event)\\\"\\n    (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n    (editRowSelect)=\\\"editRowSelect($event)\\\"\\n    (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n    (rowHover)=\\\"onRowHover($event)\\\"\\n  ></tbody>\\n</table>\\n\\n<smart-intel-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</smart-intel-table-pager>\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"] }]\n    }], null, { source: [{\n            type: Input\n        }], settings: [{\n            type: Input\n        }], rowSelect: [{\n            type: Output\n        }], rowDeselect: [{\n            type: Output\n        }], userRowSelect: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], edit: [{\n            type: Output\n        }], create: [{\n            type: Output\n        }], custom: [{\n            type: Output\n        }], deleteConfirm: [{\n            type: Output\n        }], editConfirm: [{\n            type: Output\n        }], createConfirm: [{\n            type: Output\n        }], rowHover: [{\n            type: Output\n        }] }); })();","originalLength":42396,"removedExports":[],"renderedExports":["SmartIntelTableComponent"],"renderedLength":16650},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.module.mjs":{"code":"class SmartIntelTableModule {\n}\nSmartIntelTableModule.ɵfac = function SmartIntelTableModule_Factory(t) { return new (t || SmartIntelTableModule)(); };\nSmartIntelTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: SmartIntelTableModule });\nSmartIntelTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CellModule,\n        FilterModule,\n        PagerModule,\n        TbodyModule,\n        TheadModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    CellModule,\n                    FilterModule,\n                    PagerModule,\n                    TbodyModule,\n                    TheadModule\n                ],\n                declarations: [\n                    SmartIntelTableComponent\n                ],\n                exports: [\n                    SmartIntelTableComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SmartIntelTableModule, { declarations: [SmartIntelTableComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CellModule,\n        FilterModule,\n        PagerModule,\n        TbodyModule,\n        TheadModule], exports: [SmartIntelTableComponent] }); })();","originalLength":4849,"removedExports":[],"renderedExports":["SmartIntelTableModule"],"renderedLength":1576},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.conf.mjs":{"code":"class ServerSourceConf {\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n        this.endPoint = endPoint ? endPoint : '';\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.sortFieldKey;\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.sortDirKey;\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.pagerPageKey;\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.pagerLimitKey;\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.filterFieldKey;\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.totalKey;\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.dataKey;\n    }\n}\nServerSourceConf.sortFieldKey = '_sort';\nServerSourceConf.sortDirKey = '_order';\nServerSourceConf.pagerPageKey = '_page';\nServerSourceConf.pagerLimitKey = '_limit';\nServerSourceConf.filterFieldKey = '#field#_like';\nServerSourceConf.totalKey = 'x-total-count';\nServerSourceConf.dataKey = '';","originalLength":4901,"removedExports":[],"renderedExports":["ServerSourceConf"],"renderedLength":1131},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.define.mjs":{"code":"class ServerDataSource extends LocalDataSource {\n    constructor(http, conf = {}) {\n        super();\n        this.http = http;\n        this.lastRequestCount = 0;\n        this.conf = new ServerSourceConf(conf);\n        if (!this.conf.endPoint) {\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n        }\n    }\n    count() {\n        return this.lastRequestCount;\n    }\n    getElements() {\n        /** const observer$ = this.requestElements()\n        .pipe(map(res => {\n          this.lastRequestCount = this.extractTotalFromResponse(res);\n          this.data = this.extractDataFromResponse(res);\n          return this.data;\n        }));\n        return lastValueFrom(observer$);*/\n        return this.requestElements()\n            .pipe(map(res => {\n            this.lastRequestCount = this.extractTotalFromResponse(res);\n            this.data = this.extractDataFromResponse(res);\n            return this.data;\n        })).toPromise(); // TODO dis is deprecated\n    }\n    /**\n     * Extracts array of data from server response\n     *\n     * @param res\n     * @returns\n     */\n    extractDataFromResponse(res) {\n        const rawData = res.body;\n        const data = Boolean(this.conf.dataKey) ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n        if (data instanceof Array) {\n            return data;\n        }\n        throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n    }\n    /**\n     * Extracts total rows count from the server response\n     * Looks for the count in the heders first, then in the response body\n     *\n     * @param res\n     * @returns\n     */\n    extractTotalFromResponse(res) {\n        if (res.headers.has(this.conf.totalKey)) {\n            return Number(res.headers.get(this.conf.totalKey));\n        }\n        else {\n            const rawData = res.body;\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\n        }\n    }\n    requestElements() {\n        const httpParams = this.createRequesParams();\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n    }\n    createRequesParams() {\n        let httpParams = new HttpParams();\n        httpParams = this.addSortRequestParams(httpParams);\n        httpParams = this.addFilterRequestParams(httpParams);\n        return this.addPagerRequestParams(httpParams);\n    }\n    addSortRequestParams(httpParams) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n            });\n        }\n        return httpParams;\n    }\n    addFilterRequestParams(httpParams) {\n        if (this.filterConf.filters) {\n            this.filterConf.filters.forEach((fieldConf) => {\n                if (fieldConf.search) {\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf.field), fieldConf.search);\n                }\n            });\n        }\n        return httpParams;\n    }\n    addPagerRequestParams(httpParams) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\n        }\n        return httpParams;\n    }\n}","originalLength":13787,"removedExports":[],"renderedExports":["ServerDataSource"],"renderedLength":3583},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/public-api.mjs":{"code":"","originalLength":2023,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/smart-intel-table.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":524,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewContainerRef, ViewChild, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule, UntypedFormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport * as i1$1 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport { Subject } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { debounceTime, map, distinctUntilChanged, skip, takeUntil } from 'rxjs/operators';\nimport { HttpParams } from '@angular/common/http';\n\nconst prepareValue = (value) => value;\n// @dynamic\nclass Cell {\n    constructor(value, row, column, dataSet) {\n        this.value = value;\n        this.row = row;\n        this.column = column;\n        this.dataSet = dataSet;\n        this.newValue = '';\n        this.newValue = value;\n    }\n    getColumn() {\n        return this.column;\n    }\n    getRow() {\n        return this.row;\n    }\n    getValue() {\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.prepareVal;\n        // eslint-disable-next-line no-useless-call\n        return prepare.call(null, this.value, this.row.getData(), this);\n    }\n    setValue(value) {\n        this.newValue = value;\n    }\n    getId() {\n        return this.getColumn().id;\n    }\n    getTitle() {\n        return this.getColumn().title;\n    }\n    isEditable() {\n        if (this.getRow().index === -1) {\n            return this.getColumn().isAddable;\n        }\n        else {\n            return this.getColumn().isEditable;\n        }\n    }\n}\nCell.prepareVal = prepareValue;\n\nclass Row {\n    constructor(index, data, dataSet) {\n        this.index = index;\n        this.data = data;\n        this.dataSet = dataSet;\n        this.isSelected = false;\n        this.isInEditing = false;\n        this.cells = [];\n        this.process();\n    }\n    getCell(column) {\n        return this.cells.find(el => el.getColumn() === column);\n    }\n    getCells() {\n        return this.cells;\n    }\n    getData() {\n        return this.data;\n    }\n    getIsSelected() {\n        return this.isSelected;\n    }\n    getNewData() {\n        const values = Object.assign({}, this.data);\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n        return values;\n    }\n    setData(data) {\n        this.data = data;\n        this.process();\n    }\n    process() {\n        this.cells = [];\n        this.dataSet.getColumns().forEach((column) => {\n            const cell = this.createCell(column);\n            this.cells.push(cell);\n        });\n    }\n    createCell(column) {\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n        return new Cell(value, this, column, this.dataSet);\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Column {\n    constructor(id, settings, dataSet) {\n        this.id = id;\n        this.settings = settings;\n        this.dataSet = dataSet;\n        this.title = '';\n        this.type = '';\n        this.class = '';\n        this.width = '';\n        this.hide = false;\n        this.isSortable = false;\n        this.isEditable = true;\n        this.isAddable = true;\n        this.isFilterable = false;\n        this.sortDirection = '';\n        this.defaultSortDirection = '';\n        this.editor = { type: '', config: {}, component: null };\n        this.filter = { type: '', config: {}, component: null };\n        this.renderComponent = null;\n        this.process();\n    }\n    getOnComponentInitFunction() {\n        return this.onComponentInitFunction;\n    }\n    getCompareFunction() {\n        return this.compareFunction;\n    }\n    getValuePrepareFunction() {\n        return this.valuePrepareFunction;\n    }\n    getFilterFunction() {\n        return this.filterFunction;\n    }\n    getConfig() {\n        return this.editor && this.editor.config;\n    }\n    getFilterType() {\n        return this.filter && this.filter.type;\n    }\n    getFilterConfig() {\n        return this.filter && this.filter.config;\n    }\n    prepareType() {\n        return this.settings.type || this.determineType();\n    }\n    prepareSortDirection() {\n        return this.settings.sort === 'desc' ? 'desc' : 'asc';\n    }\n    determineType() {\n        // TODO: determine type by data\n        return 'text';\n    }\n    process() {\n        this.title = this.settings.title;\n        this.class = this.settings.class;\n        this.width = this.settings.width;\n        this.hide = Boolean(this.settings.hide);\n        this.type = this.prepareType();\n        this.editor = this.settings.editor;\n        this.filter = this.settings.filter;\n        this.renderComponent = this.settings.renderComponent;\n        this.isFilterable = typeof this.settings.filter === 'undefined' ? true : Boolean(this.settings.filter);\n        this.defaultSortDirection = ['asc', 'desc']\n            .indexOf(this.settings.sortDirection) !== -1 ? this.settings.sortDirection : '';\n        this.isSortable = typeof this.settings.sort === 'undefined' ? true : Boolean(this.settings.sort);\n        this.isEditable = typeof this.settings.editable === 'undefined' ? true : Boolean(this.settings.editable);\n        this.isAddable = typeof this.settings.addable === 'undefined' ? true : Boolean(this.settings.addable);\n        this.sortDirection = this.prepareSortDirection();\n        this.compareFunction = this.settings.compareFunction;\n        this.valuePrepareFunction = this.settings.valuePrepareFunction;\n        this.filterFunction = this.settings.filterFunction;\n        this.onComponentInitFunction = this.settings.onComponentInitFunction;\n    }\n}\n\nclass DataSet {\n    constructor(data = [], \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    columnSettings) {\n        this.columnSettings = columnSettings;\n        this.data = [];\n        this.columns = [];\n        this.rows = [];\n        this.createColumns(columnSettings);\n        this.setData(data);\n        this.createNewRow();\n    }\n    setData(data) {\n        this.data = data;\n        this.createRows();\n    }\n    getColumns() {\n        return this.columns;\n    }\n    getRows() {\n        return this.rows;\n    }\n    getFirstRow() {\n        return this.rows[0];\n    }\n    getLastRow() {\n        return this.rows[this.rows.length - 1];\n    }\n    findRowByData(data) {\n        return this.rows.find((row) => row.getData() === data);\n    }\n    deselectAll() {\n        this.rows.forEach((row) => {\n            row.isSelected = false;\n        });\n        // we need to clear selectedRow field because no one row selected\n        this.selectedRow = undefined;\n    }\n    selectRow(row) {\n        const previousIsSelected = row.isSelected;\n        this.deselectAll();\n        row.isSelected = !previousIsSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    multipleSelectRow(row) {\n        row.isSelected = !row.isSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    selectPreviousRow() {\n        if (this.rows.length > 0) {\n            let index = this.selectedRow ? this.selectedRow.index : 0;\n            if (index > this.rows.length - 1) {\n                index = this.rows.length - 1;\n            }\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n    }\n    selectFirstRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[0]);\n            return this.selectedRow;\n        }\n    }\n    selectLastRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[this.rows.length - 1]);\n            return this.selectedRow;\n        }\n    }\n    selectRowByIndex(index) {\n        const rowsLength = this.rows.length;\n        if (rowsLength === 0) {\n            return;\n        }\n        if (!index) {\n            this.selectFirstRow();\n            return this.selectedRow;\n        }\n        if (index > 0 && index < rowsLength) {\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAll();\n    }\n    willSelectFirstRow() {\n        this.willSelect = 'first';\n    }\n    willSelectLastRow() {\n        this.willSelect = 'last';\n    }\n    select(selectedRowIndex) {\n        if (this.getRows().length === 0) {\n            return;\n        }\n        if (this.willSelect) {\n            if (this.willSelect === 'first') {\n                this.selectFirstRow();\n            }\n            if (this.willSelect === 'last') {\n                this.selectLastRow();\n            }\n            this.willSelect = '';\n        }\n        else {\n            this.selectRowByIndex(selectedRowIndex);\n        }\n        return this.selectedRow;\n    }\n    createNewRow() {\n        this.newRow = new Row(-1, {}, this);\n        this.newRow.isInEditing = true;\n    }\n    /**\n     * Create columns by mapping from the settings\n     *\n     * @param settings\n     * @private\n     */\n    createColumns(settings) {\n        for (const id in settings) {\n            if (settings.hasOwnProperty(id)) {\n                this.columns.push(new Column(id, settings[id], this));\n            }\n        }\n    }\n    /**\n     * Create rows based on current data prepared in data source\n     *\n     * @private\n     */\n    createRows() {\n        this.rows = [];\n        this.data.forEach((el, index) => {\n            this.rows.push(new Row(index, el, this));\n        });\n    }\n}\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nconst deepExtend = (...objects) => {\n    if (objects.length < 1 || typeof objects[0] !== 'object') {\n        return false;\n    }\n    if (objects.length < 2) {\n        return objects[0];\n    }\n    const target = objects[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(objects, 1);\n    let val;\n    let src;\n    args.forEach((obj) => {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach((key) => {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = cloneDeep(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nconst getDeepFromObject = (object = {}, name, defaultValue) => {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object);\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n};\nconst getPageForRowIndex = (index, perPage) => \n// we need to add 1 to convert 0-based index to 1-based page number.\nMath.floor(index / perPage) + 1;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Grid {\n    constructor(source, settings) {\n        this.createFormShown = false;\n        this.onSelectRowSource = new Subject();\n        this.onDeselectRowSource = new Subject();\n        this.setSettings(settings);\n        this.setSource(source);\n    }\n    detach() {\n        if (this.sourceOnChangedSubscription) {\n            this.sourceOnChangedSubscription.unsubscribe();\n        }\n        if (this.sourceOnUpdatedSubscription) {\n            this.sourceOnUpdatedSubscription.unsubscribe();\n        }\n    }\n    showActionColumn(position) {\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n    }\n    isCurrentActionsPosition(position) {\n        // eslint-disable-next-line eqeqeq\n        return position == this.getSetting('actions.position');\n    }\n    isActionsVisible() {\n        return this\n            .getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n    }\n    isMultiSelectVisible() {\n        return this.getSetting('selectMode') === 'multi';\n    }\n    getNewRow() {\n        return this.dataSet.newRow;\n    }\n    setSettings(settings) {\n        this.settings = settings;\n        this.dataSet = new DataSet([], this.getSetting('columns'));\n        if (this.source) {\n            this.source.refresh();\n        }\n    }\n    getDataSet() {\n        return this.dataSet;\n    }\n    setSource(source) {\n        this.source = this.prepareSource(source);\n        this.detach();\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\n            const changedRow = this.dataSet.findRowByData(data);\n            changedRow.setData(data);\n        });\n    }\n    getSetting(name, defaultValue) {\n        return getDeepFromObject(this.settings, name, defaultValue);\n    }\n    getColumns() {\n        return this.dataSet.getColumns();\n    }\n    getRows() {\n        return this.dataSet.getRows();\n    }\n    selectRow(row) {\n        this.dataSet.selectRow(row);\n    }\n    multipleSelectRow(row) {\n        this.dataSet.multipleSelectRow(row);\n    }\n    onSelectRow() {\n        return this.onSelectRowSource.asObservable();\n    }\n    onDeselectRow() {\n        return this.onDeselectRowSource.asObservable();\n    }\n    edit(row) {\n        row.isInEditing = true;\n    }\n    create(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipAdd) {\n                this.createFormShown = false;\n            }\n            else {\n                this.source.prepend(newData).then(() => {\n                    this.createFormShown = false;\n                    this.dataSet.createNewRow();\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('add.confirmCreate')) {\n            confirmEmitter.emit({\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    save(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipEdit) {\n                row.isInEditing = false;\n            }\n            else {\n                this.source.update(row.getData(), newData).then(() => {\n                    row.isInEditing = false;\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('edit.confirmSave')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    delete(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then(() => {\n            this.source.remove(row.getData());\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('delete.confirmDelete')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    processDataChange(changes) {\n        if (this.shouldProcessChange(changes)) {\n            this.dataSet.setData(changes.elements);\n            if (this.getSetting('selectMode') !== 'multi') {\n                const row = this.determineRowToSelect(changes);\n                if (row) {\n                    this.onSelectRowSource.next(row);\n                }\n                else {\n                    this.onDeselectRowSource.next(null);\n                }\n            }\n        }\n    }\n    shouldProcessChange(changes) {\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes.action) !== -1) {\n            return true;\n        }\n        else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @breaking-change 1.8.0\n     * Need to add `| null` in return type\n     *\n     * TODO: move to selectable? Separate directive\n     */\n    determineRowToSelect(changes) {\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\n            return this.dataSet.select(this.getRowIndexToSelect());\n        }\n        if (this.shouldSkipSelection()) {\n            return null;\n        }\n        if (changes.action === 'remove') {\n            if (changes.elements.length === 0) {\n                // we have to store which one to select as the data will be reloaded\n                this.dataSet.willSelectLastRow();\n            }\n            else {\n                return this.dataSet.selectPreviousRow();\n            }\n        }\n        if (changes.action === 'append') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectLastRow();\n        }\n        if (changes.action === 'add') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'update') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'prepend') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectFirstRow();\n        }\n        return null;\n    }\n    prepareSource(source) {\n        const initialSource = this.getInitialSort();\n        if (initialSource && initialSource.field && initialSource.direction) {\n            source.setSort([initialSource], false);\n        }\n        if (this.getSetting('pager.display') === true) {\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n        }\n        source.refresh();\n        return source;\n    }\n    getInitialSort() {\n        const sortConf = {};\n        this.getColumns().forEach((column) => {\n            if (column.isSortable && column.defaultSortDirection) {\n                sortConf.field = column.id;\n                sortConf.direction = column.defaultSortDirection;\n                sortConf.compare = column.getCompareFunction();\n            }\n        });\n        return sortConf;\n    }\n    getSelectedRows() {\n        return this.dataSet.getRows()\n            .filter(r => r.isSelected);\n    }\n    selectAllRows(status) {\n        this.dataSet.getRows()\n            .forEach(r => r.isSelected = status);\n    }\n    getFirstRow() {\n        return this.dataSet.getFirstRow();\n    }\n    getLastRow() {\n        return this.dataSet.getLastRow();\n    }\n    getSelectionInfo() {\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n        const { perPage, page } = this.getSetting('pager');\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\n    }\n    getRowIndexToSelect() {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\n        const dataAmount = this.source.count();\n        /**\n         * source - contains all table data\n         * dataSet - contains data for current page\n         * selectedRowIndex - contains index for data in all data\n         *\n         * because of that, we need to count index for a specific row in page\n         * if\n         * `switchPageToSelectedRowPage` - we need to change page automatically\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n         *  if we return index witch not points to existing data - no line will be highlighted)\n         */\n        return (switchPageToSelectedRowPage &&\n            selectedRowIndex < dataAmount &&\n            selectedRowIndex >= 0) ?\n            selectedRowIndex % perPage :\n            selectedRowIndex;\n    }\n    getPageToSelect(source) {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\n        let pageToSelect = Math.max(1, page);\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n        }\n        const maxPageAmount = Math.ceil(source.count() / perPage);\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n    }\n    shouldSkipSelection() {\n        /**\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n         *\n         * Therefore, in order to select a row after some changes,\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n         *\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n         *\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n         * because when < 0 all lines must be deselected\n         */\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n        return selectedRowIndex < 0;\n    }\n}\n\nclass EditCellDefault {\n    constructor() {\n        this.inputClass = '';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    stoppedEditingEvent() {\n        this.cell.getRow().isInEditing = false;\n        return false;\n    }\n    clickedEvent(event) {\n        event.stopPropagation();\n    }\n}\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) { return new (t || EditCellDefault)(); };\nEditCellDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellDefault, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 0, vars: 0, template: function EditCellDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellDefault, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }] }); })();\n\nconst _c0$c = [\"dynamicTarget\"];\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomEditComponent extends EditCellDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.cell && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.cell = this.cell;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.stoppedEditingEvent.subscribe(() => this.stoppedEditingEvent());\n            this.customComponent.instance.editedEvent.subscribe((event) => this.editedEvent(event));\n            this.customComponent.instance.clickedEvent.subscribe((event) => this.clickedEvent(event));\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) { return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomEditComponent, selectors: [[\"table-cell-custom-editor\"]], viewQuery: function CustomEditComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$c, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomEditComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomEditComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-custom-editor',\n                template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n            }]\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DefaultEditorBase {\n    constructor() {\n        this.stoppedEditingEvent = new EventEmitter();\n        this.editedEvent = new EventEmitter();\n        this.clickedEvent = new EventEmitter();\n    }\n}\nDefaultEditorBase.ɵfac = function DefaultEditorBase_Factory(t) { return new (t || DefaultEditorBase)(); };\nDefaultEditorBase.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditorBase, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { stoppedEditingEvent: \"stoppedEditingEvent\", editedEvent: \"editedEvent\", clickedEvent: \"clickedEvent\" }, decls: 0, vars: 0, template: function DefaultEditorBase_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditorBase, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], stoppedEditingEvent: [{\n            type: Output\n        }], editedEvent: [{\n            type: Output\n        }], clickedEvent: [{\n            type: Output\n        }] }); })();\n\nclass CheckboxEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n    onChange(event) {\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n}\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) { return new (t || CheckboxEditorComponent)(); };\nCheckboxEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxEditorComponent, selectors: [[\"checkbox-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 4, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]], template: function CheckboxEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) { return ctx.onChange($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_3_0;\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n    } }, dependencies: [i1.NgClass], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxEditorComponent, [{\n        type: Component,\n        args: [{ selector: 'checkbox-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          type=\"checkbox\"\n          class=\"form-control\"\n          [name]=\"cell.getId()\"\n          [disabled]=\"!cell.isEditable()\"\n          [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n          (click)=\"clickedEvent.emit($event)\"\n          (change)=\"onChange($event)\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n    }], function () { return []; }, null); })();\n\nclass CompleterEditorComponent extends DefaultEditorBase {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerStr = '';\n    }\n    ngOnInit() {\n        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\n            const config = this.cell.getColumn().getConfig().completer;\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n            config.dataService.descriptionField(config.descriptionField);\n        }\n    }\n    onEditedCompleter(event) {\n        this.cell.newValue = event.title;\n        return false;\n    }\n}\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) { return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterEditorComponent, selectors: [[\"completer-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.completerStr = $event; })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.onEditedCompleter($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n    } }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'completer-editor',\n                template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                    [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                    [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                    [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                    [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `,\n            }]\n    }], function () { return [{ type: i1$1.CompleterService }]; }, null); })();\n\nclass InputEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) { return new (t || InputEditorComponent)(); };\nInputEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputEditorComponent, selectors: [[\"input-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function InputEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n    } }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEditorComponent, [{\n        type: Component,\n        args: [{ selector: 'input-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          class=\"form-control\"\n          [(ngModel)]=\"cell.newValue\"\n          [name]=\"cell.getId()\"\n          [placeholder]=\"cell.getTitle()\"\n          [disabled]=\"!cell.isEditable()\"\n          (click)=\"clickedEvent.emit($event)\"\n          (keydown.enter)=\"editedEvent.emit($event)\"\n          (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n    }], function () { return []; }, null); })();\n\nfunction SelectEditorComponent_option_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n} }\nclass SelectEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) { return new (t || SelectEditorComponent)(); };\nSelectEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectEditorComponent, selectors: [[\"select-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function SelectEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n        i0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_4_0;\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectEditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'select-editor',\n                template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"clickedEvent.emit($event)\"\n            (keydown.enter)=\"editedEvent.emit($event)\"\n            (keydown.esc)=\"stoppedEditingEvent.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `,\n            }]\n    }], function () { return []; }, null); })();\n\nclass TextareaEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) { return new (t || TextareaEditorComponent)(); };\nTextareaEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextareaEditorComponent, selectors: [[\"textarea-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function TextareaEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"textarea\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n        i0.ɵɵtext(1, \"    \");\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n    } }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextareaEditorComponent, [{\n        type: Component,\n        args: [{ selector: 'textarea-editor', template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"clickedEvent.emit($event)\"\n              (keydown.enter)=\"editedEvent.emit($event)\"\n              (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    </textarea>\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n    }], function () { return []; }, null); })();\n\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select-editor\", 5);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n} }\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"textarea-editor\", 5);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.clickedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n} }\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"completer-editor\", 7);\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r3.cell);\n} }\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input-editor\", 5);\n    i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n} }\nclass DefaultEditComponent extends EditCellDefault {\n    constructor() {\n        super();\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) { return new (t || DefaultEditComponent)(); };\nDefaultEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditComponent, selectors: [[\"table-cell-default-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"ngSwitch\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"clickedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchDefault\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\"], [3, \"cell\", \"inputClass\", \"clickedEvent\"], [3, \"cell\"]], template: function DefaultEditComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n        i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n        i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n        i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n        i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    } }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditComponent, [{\n        type: Component,\n        args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n  <select-editor\\n    *ngSwitchCase=\\\"'list'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </select-editor>\\n\\n  <textarea-editor\\n    *ngSwitchCase=\\\"'textarea'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </textarea-editor>\\n\\n  <checkbox-editor\\n    *ngSwitchCase=\\\"'checkbox'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n  >\\n  </checkbox-editor>\\n\\n  <completer-editor *ngSwitchCase=\\\"'completer'\\\" [cell]=\\\"cell\\\">\\n  </completer-editor>\\n\\n  <input-editor\\n    *ngSwitchDefault\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </input-editor>\\n</div>\\n\" }]\n    }], function () { return []; }, null); })();\n\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n} }\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nclass EditCellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) { return new (t || EditCellComponent)(); };\nEditCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellComponent, selectors: [[\"table-cell-edit-mode\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 3, vars: 2, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function EditCellComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n        i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n    } }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomEditComponent, DefaultEditComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-edit-mode',\n                template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-default-editor>\n      </div>\n    `,\n            }]\n    }], null, { cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }] }); })();\n\nconst _c0$b = [\"dynamicTarget\"];\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomViewComponent {\n    constructor(resolver) {\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        if (this.cell && !this.customComponent) {\n            this.createCustomComponent();\n            this.callOnComponentInit();\n            this.patchInstance();\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n    createCustomComponent() {\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n    callOnComponentInit() {\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n        // TODO onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\n        onComponentInitFunction && onComponentInitFunction();\n    }\n    patchInstance() {\n        Object.assign(this.customComponent.instance, this.getPatch());\n    }\n    getPatch() {\n        return {\n            value: this.cell.getValue(),\n            rowData: this.cell.getRow().getData()\n        };\n    }\n}\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) { return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomViewComponent, selectors: [[\"custom-view-component\"]], viewQuery: function CustomViewComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$b, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, inputs: { cell: \"cell\" }, decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomViewComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomViewComponent, [{\n        type: Component,\n        args: [{\n                selector: 'custom-view-component',\n                template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n            }]\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { cell: [{\n            type: Input\n        }], dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();\n\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"custom-view-component\", 4);\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n} }\nfunction ViewCellComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\n} }\nfunction ViewCellComponent_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n} }\nclass ViewCellComponent {\n}\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) { return new (t || ViewCellComponent)(); };\nViewCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCellComponent, selectors: [[\"table-cell-view-mode\"]], inputs: { cell: \"cell\" }, decls: 4, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]], template: function ViewCellComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n        i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n    } }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomViewComponent], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'table-cell-view-mode',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `,\n            }]\n    }], null, { cell: [{\n            type: Input\n        }] }); })();\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n} }\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n    i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n} }\nclass CellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.mode = 'inline';\n        this.isInEditing = false;\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        if (this.isNew) {\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\n        }\n        else {\n            this.grid.save(this.row, this.editConfirm);\n        }\n    }\n}\nCellComponent.ɵfac = function CellComponent_Factory(t) { return new (t || CellComponent)(); };\nCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellComponent, selectors: [[\"smart-intel-table-cell\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\" }, outputs: { edited: \"edited\" }, decls: 2, vars: 2, consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function CellComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n        i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n    } }, dependencies: [i1.NgIf, EditCellComponent, ViewCellComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-intel-table-cell',\n                template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"editedEvent($event)\">\n    </table-cell-edit-mode>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }], isNew: [{\n            type: Input\n        }], cell: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], isInEditing: [{\n            type: Input\n        }], edited: [{\n            type: Output\n        }] }); })();\n\nconst CELL_COMPONENTS = [\n    CellComponent,\n    EditCellDefault,\n    DefaultEditorBase,\n    CustomEditComponent,\n    DefaultEditComponent,\n    EditCellComponent,\n    CheckboxEditorComponent,\n    CompleterEditorComponent,\n    InputEditorComponent,\n    SelectEditorComponent,\n    TextareaEditorComponent,\n    CustomViewComponent,\n    ViewCellComponent\n];\nclass CellModule {\n}\nCellModule.ɵfac = function CellModule_Factory(t) { return new (t || CellModule)(); };\nCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellModule });\nCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        Ng2CompleterModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    Ng2CompleterModule\n                ],\n                declarations: [\n                    ...CELL_COMPONENTS\n                ],\n                exports: [\n                    ...CELL_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellModule, { declarations: [CellComponent,\n        EditCellDefault,\n        DefaultEditorBase,\n        CustomEditComponent,\n        DefaultEditComponent,\n        EditCellComponent,\n        CheckboxEditorComponent,\n        CompleterEditorComponent,\n        InputEditorComponent,\n        SelectEditorComponent,\n        TextareaEditorComponent,\n        CustomViewComponent,\n        ViewCellComponent], imports: [CommonModule,\n        FormsModule,\n        Ng2CompleterModule], exports: [CellComponent,\n        EditCellDefault,\n        DefaultEditorBase,\n        CustomEditComponent,\n        DefaultEditComponent,\n        EditCellComponent,\n        CheckboxEditorComponent,\n        CompleterEditorComponent,\n        InputEditorComponent,\n        SelectEditorComponent,\n        TextareaEditorComponent,\n        CustomViewComponent,\n        ViewCellComponent] }); })();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DataSource {\n    constructor() {\n        this.onChangedSource = new Subject();\n        this.onAddedSource = new Subject();\n        this.onUpdatedSource = new Subject();\n        this.onRemovedSource = new Subject();\n    }\n    refresh() {\n        this.emitOnChanged('refresh');\n    }\n    load(data) {\n        this.emitOnChanged('load');\n        return Promise.resolve();\n    }\n    onChanged() {\n        return this.onChangedSource.asObservable();\n    }\n    onAdded() {\n        return this.onAddedSource.asObservable();\n    }\n    onUpdated() {\n        return this.onUpdatedSource.asObservable();\n    }\n    onRemoved() {\n        return this.onRemovedSource.asObservable();\n    }\n    prepend(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('prepend');\n        return Promise.resolve();\n    }\n    append(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('append');\n        return Promise.resolve();\n    }\n    add(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('add');\n        return Promise.resolve();\n    }\n    remove(element) {\n        this.emitOnRemoved(element);\n        this.emitOnChanged('remove');\n        return Promise.resolve();\n    }\n    update(element, values) {\n        this.emitOnUpdated(element);\n        this.emitOnChanged('update');\n        return Promise.resolve();\n    }\n    empty() {\n        this.emitOnChanged('empty');\n        return Promise.resolve();\n    }\n    setSort(conf, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('sort');\n        }\n    }\n    setFilter(conf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    addFilter(fieldConf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    setPaging(page, perPage, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('paging');\n        }\n    }\n    setPage(page, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('page');\n        }\n    }\n    emitOnRemoved(element) {\n        this.onRemovedSource.next(element);\n    }\n    emitOnUpdated(element) {\n        this.onUpdatedSource.next(element);\n    }\n    emitOnAdded(element) {\n        this.onAddedSource.next(element);\n    }\n    emitOnChanged(action) {\n        this.getElements().then((elements) => this.onChangedSource.next({\n            action,\n            elements,\n            paging: this.getPaging(),\n            filter: this.getFilter(),\n            sort: this.getSort()\n        }));\n    }\n}\n\nclass FilterDefault {\n    constructor() {\n        this.inputClass = '';\n        this.filter = new EventEmitter();\n        this.query = '';\n    }\n    onFilter(query) {\n        this.source.addFilter({\n            field: this.column.id,\n            search: query,\n            filter: this.column.getFilterFunction()\n        });\n    }\n}\nFilterDefault.ɵfac = function FilterDefault_Factory(t) { return new (t || FilterDefault)(); };\nFilterDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterDefault, selectors: [[\"ng-component\"]], inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function FilterDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDefault, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], filter: [{\n            type: Output\n        }] }); })();\n\nclass DefaultFilter {\n    constructor() {\n        this.filter = new EventEmitter();\n        this.delay = 300;\n    }\n    ngOnDestroy() {\n        if (this.changesSubscription) {\n            this.changesSubscription.unsubscribe();\n        }\n    }\n    setFilter() {\n        this.filter.emit(this.query);\n    }\n}\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) { return new (t || DefaultFilter)(); };\nDefaultFilter.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilter, selectors: [[\"ng-component\"]], inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function DefaultFilter_Template(rf, ctx) { }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilter, [{\n        type: Component,\n        args: [{\n                template: ''\n            }]\n    }], null, { query: [{\n            type: Input\n        }], inputClass: [{\n            type: Input\n        }], column: [{\n            type: Input\n        }], filter: [{\n            type: Output\n        }] }); })();\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.resetFilter($event)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n} }\nclass CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.filterActive = false;\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        this.changesSubscription = this.inputControl.valueChanges\n            .pipe(debounceTime(this.delay))\n            .subscribe((checked) => {\n            this.filterActive = true;\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n            this.query = checked ? trueVal : falseVal;\n            this.setFilter();\n        });\n    }\n    resetFilter(event) {\n        event.preventDefault();\n        this.query = '';\n        this.inputControl.setValue(false, { emitEvent: false });\n        this.filterActive = false;\n        this.setFilter();\n    }\n}\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) { return new (t || CheckboxFilterComponent)(); };\nCheckboxFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxFilterComponent, selectors: [[\"checkbox-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]], template: function CheckboxFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n        i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n    } }, dependencies: [i1.NgClass, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'checkbox-filter',\n                template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n            }]\n    }], function () { return []; }, null); })();\n\nclass CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerContent = new Subject();\n    }\n    ngOnInit() {\n        const config = this.column.getFilterConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n        this.changesSubscription = this.completerContent\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((search) => {\n            this.query = search;\n            this.setFilter();\n        });\n    }\n    inputTextChanged(event) {\n        // workaround to trigger the search event when the home/end buttons are clicked\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n        // so here it gets called manually\n        if (event === '') {\n            this.completerContent.next(event);\n        }\n    }\n}\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) { return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterFilterComponent, selectors: [[\"completer-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.query = $event; })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.inputTextChanged($event); })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.completerContent.next($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n    } }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'completer-filter',\n                template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                    (ngModelChange)=\"inputTextChanged($event)\"\n                    [dataService]=\"column.getFilterConfig().completer.dataService\"\n                    [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                    [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                    [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n            }]\n    }], function () { return [{ type: i1$1.CompleterService }]; }, null); })();\n\nclass InputFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        if (this.query) {\n            this.inputControl.setValue(this.query);\n        }\n        this.inputControl.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => {\n            this.query = this.inputControl.value;\n            this.setFilter();\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.query) {\n            this.inputControl.setValue(this.query);\n        }\n    }\n}\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) { return new (t || InputFilterComponent)(); };\nInputFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputFilterComponent, selectors: [[\"input-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 3, consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]], template: function InputFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n    } if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n    } }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'input-filter',\n                template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.title }}\"/>\n  `,\n            }]\n    }], function () { return []; }, null); })();\n\nconst _c0$a = [\"inputControl\"];\nfunction SelectFilterComponent_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n} }\nclass SelectFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        this.inputControl.valueChanges\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => this.setFilter());\n    }\n}\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) { return new (t || SelectFilterComponent)(); };\nSelectFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectFilterComponent, selectors: [[\"select-filter\"]], viewQuery: function SelectFilterComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$a, 7, NgControl);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n    } }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SelectFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) { return ctx.query = $event; });\n        i0.ɵɵelementStart(2, \"option\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'select-filter',\n                template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `,\n            }]\n    }], function () { return []; }, { inputControl: [{\n            type: ViewChild,\n            args: ['inputControl', { read: NgControl, static: true }]\n        }] }); })();\n\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"select-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n} }\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n} }\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"completer-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n} }\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n} }\nclass DefaultFilterComponent extends FilterDefault {\n}\nDefaultFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵDefaultFilterComponent_BaseFactory; return function DefaultFilterComponent_Factory(t) { return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent); }; }();\nDefaultFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilterComponent, selectors: [[\"default-table-filter\"]], inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]], template: function DefaultFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, 0);\n        i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n        i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n        i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n        i0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\n        i0.ɵɵelementContainerEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    } }, dependencies: [i1.NgClass, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'default-table-filter',\n                template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                      [query]=\"query\"\n                      [ngClass]=\"inputClass\"\n                      [column]=\"column\"\n                      (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `,\n            }]\n    }], null, { query: [{\n            type: Input\n        }] }); })();\n\nconst _c0$9 = [\"dynamicTarget\"];\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomFilterComponent extends FilterDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.column && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.query = this.query;\n            this.customComponent.instance.column = this.column;\n            this.customComponent.instance.source = this.source;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\n        }\n        if (this.customComponent) {\n            this.customComponent.instance.ngOnChanges(changes);\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) { return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomFilterComponent, selectors: [[\"custom-table-filter\"]], viewQuery: function CustomFilterComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0$9, 7, ViewContainerRef);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    } }, inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomFilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomFilterComponent, [{\n        type: Component,\n        args: [{\n                selector: 'custom-table-filter',\n                template: `<ng-template #dynamicTarget></ng-template>`,\n            }]\n    }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { query: [{\n            type: Input\n        }], dynamicTarget: [{\n            type: ViewChild,\n            args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n        }] }); })();\n\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r3.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n} }\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"default-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r5.onFilter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n} }\nfunction FilterComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n    i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n} }\nclass FilterComponent extends FilterDefault {\n    constructor() {\n        super(...arguments);\n        this.query = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const filterConf = this.source.getFilter();\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n                    this.query = '';\n                    // add a check for existing filters an set the query if one exists for this column\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\n                }\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n                    filterConf.filters.forEach((k, v) => {\n                        if (k.field == this.column.id) {\n                            this.query = k.search;\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\nFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵFilterComponent_BaseFactory; return function FilterComponent_Factory(t) { return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent); }; }();\nFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterComponent, selectors: [[\"smart-intel-table-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"smart-table-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"smart-table-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]], template: function FilterComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n    } }, dependencies: [i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, DefaultFilterComponent, CustomFilterComponent], styles: [\"[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     a{font-weight:400}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table-filter', template: `\n      <div class=\"smart-table-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `, styles: [\":host .smart-table-filter ::ng-deep input,:host .smart-table-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .smart-table-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .smart-table-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .smart-table-filter ::ng-deep a{font-weight:400}\\n\"] }]\n    }], null, null); })();\n\nconst FILTER_COMPONENTS = [\n    FilterDefault,\n    DefaultFilter,\n    FilterComponent,\n    DefaultFilterComponent,\n    CustomFilterComponent,\n    CheckboxFilterComponent,\n    CompleterFilterComponent,\n    InputFilterComponent,\n    SelectFilterComponent\n];\nclass FilterModule {\n}\nFilterModule.ɵfac = function FilterModule_Factory(t) { return new (t || FilterModule)(); };\nFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FilterModule });\nFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    Ng2CompleterModule\n                ],\n                declarations: [\n                    ...FILTER_COMPONENTS\n                ],\n                exports: [\n                    ...FILTER_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FilterModule, { declarations: [FilterDefault,\n        DefaultFilter,\n        FilterComponent,\n        DefaultFilterComponent,\n        CustomFilterComponent,\n        CheckboxFilterComponent,\n        CompleterFilterComponent,\n        InputFilterComponent,\n        SelectFilterComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule], exports: [FilterDefault,\n        DefaultFilter,\n        FilterComponent,\n        DefaultFilterComponent,\n        CustomFilterComponent,\n        CheckboxFilterComponent,\n        CompleterFilterComponent,\n        InputFilterComponent,\n        SelectFilterComponent] }); })();\n\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵtext(3, \"(current)\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n} }\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 15);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r9); const page_r3 = i0.ɵɵnextContext().$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r7.paginate(page_r3)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(page_r3);\n} }\nconst _c0$8 = function (a0) { return { active: a0 }; };\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n    i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const page_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0$8, ctx_r2.getPage() == page_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n} }\nconst _c1$1 = function (a0) { return { disabled: a0 }; };\nfunction PagerComponent_nav_0_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1)); });\n    i0.ɵɵelementStart(4, \"span\", 6);\n    i0.ɵɵtext(5, \"\\u00AB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 7);\n    i0.ɵɵtext(7, \"First\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.getPage() == 1 ? false : ctx_r13.prev()); });\n    i0.ɵɵelementStart(10, \"span\", 6);\n    i0.ɵɵtext(11, \"<\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 7);\n    i0.ɵɵtext(13, \"Prev\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n    i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next()); });\n    i0.ɵɵelementStart(17, \"span\", 6);\n    i0.ɵɵtext(18, \">\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\", 7);\n    i0.ɵɵtext(20, \"Next\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast())); });\n    i0.ɵɵelementStart(23, \"span\", 6);\n    i0.ɵɵtext(24, \"\\u00BB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"span\", 7);\n    i0.ɵɵtext(26, \"Last\");\n    i0.ɵɵelementEnd()()()()();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1$1, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1$1, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n} }\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r17);\n} }\nfunction PagerComponent_nav_1_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\n    i0.ɵɵtext(2, \" Per Page: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 18);\n    i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.onChangePerPage($event)); })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r20 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r20.currentPerPage = $event); });\n    i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n} }\nclass PagerComponent {\n    constructor() {\n        this.perPageSelect = [];\n        this.changePage = new EventEmitter();\n        this.count = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                this.page = this.source.getPaging().page;\n                this.perPage = this.source.getPaging().perPage;\n                this.currentPerPage = this.perPage;\n                this.count = this.source.count();\n                if (this.isPageOutOfBounce()) {\n                    this.source.setPage(--this.page);\n                }\n                this.processPageChange(dataChanges);\n                this.initPages();\n            });\n        }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n    processPageChange(changes) {\n        if (changes['action'] === 'prepend') {\n            this.source.setPage(1);\n        }\n        if (changes['action'] === 'append') {\n            this.source.setPage(this.getLast());\n        }\n    }\n    shouldShow() {\n        return this.source.count() > this.perPage;\n    }\n    paginate(page) {\n        this.source.setPage(page);\n        this.page = page;\n        this.changePage.emit({ page });\n        return false;\n    }\n    next() {\n        return this.paginate(this.getPage() + 1);\n    }\n    prev() {\n        return this.paginate(this.getPage() - 1);\n    }\n    getPage() {\n        return this.page;\n    }\n    getPages() {\n        return this.pages;\n    }\n    getLast() {\n        return Math.ceil(this.count / this.perPage);\n    }\n    isPageOutOfBounce() {\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n    }\n    initPages() {\n        const pagesCount = this.getLast();\n        let showPagesCount = 4;\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n        this.pages = [];\n        if (this.shouldShow()) {\n            let middleOne = Math.ceil(showPagesCount / 2);\n            middleOne = this.page >= middleOne ? this.page : middleOne;\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n            const firstOne = lastOne - showPagesCount + 1;\n            for (let i = firstOne; i <= lastOne; i++) {\n                this.pages.push(i);\n            }\n        }\n    }\n    onChangePerPage(event) {\n        if (this.currentPerPage) {\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n                this.source.getPaging().perPage = null;\n            }\n            else {\n                this.source.getPaging().perPage = this.currentPerPage * 1;\n                this.source.refresh();\n            }\n            this.initPages();\n        }\n    }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(); };\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"smart-intel-table-pager\"]], inputs: { source: \"source\", perPageSelect: \"perPageSelect\" }, outputs: { changePage: \"changePage\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"smart-table-pagination-nav\", 4, \"ngIf\"], [\"class\", \"smart-table-pagination-per-page\", 4, \"ngIf\"], [1, \"smart-table-pagination-nav\"], [1, \"smart-table-pagination\", \"pagination\"], [1, \"smart-table-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"smart-table-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"smart-table-page-link page-link\", 4, \"ngIf\"], [\"class\", \"smart-table-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"smart-table-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [1, \"smart-table-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PagerComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n        i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\".smart-table-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination[_ngcontent-%COMP%]   .smart-table-page-item[_ngcontent-%COMP%]{display:inline}.smart-table-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .smart-table-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table-pager', template: `\n    <nav *ngIf=\"shouldShow()\" class=\"smart-table-pagination-nav\">\n      <ul class=\"smart-table-pagination pagination\">\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"smart-table-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"smart-table-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"smart-table-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `, styles: [\".smart-table-pagination{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination .smart-table-page-item{display:inline}.smart-table-pagination .page-link-next,.smart-table-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"] }]\n    }], null, { source: [{\n            type: Input\n        }], perPageSelect: [{\n            type: Input\n        }], changePage: [{\n            type: Output\n        }] }); })();\n\nclass PagerModule {\n}\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule\n                ],\n                declarations: [\n                    PagerComponent\n                ],\n                exports: [\n                    PagerComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent], imports: [CommonModule,\n        FormsModule], exports: [PagerComponent] }); })();\n\nclass TbodyCreateCancelComponent {\n    onSave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.grid.save(this.row, this.editConfirm);\n    }\n    onCancelEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.row.isInEditing = false;\n    }\n    ngOnChanges() {\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n}\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) { return new (t || TbodyCreateCancelComponent)(); };\nTbodyCreateCancelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCreateCancelComponent, selectors: [[\"smart-table-body-create-cancel\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-cancel\", 3, \"innerHTML\", \"click\"]], template: function TbodyCreateCancelComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) { return ctx.onSave($event); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) { return ctx.onCancelEdit($event); });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-body-create-cancel',\n                template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }] }); })();\n\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onEdit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\n} }\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onDelete($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\n} }\nclass TbodyEditDeleteComponent {\n    constructor() {\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n    }\n    onEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.editRowSelect.emit(this.row);\n        if (this.grid.getSetting('mode') === 'external') {\n            this.edit.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.edit(this.row);\n        }\n    }\n    onDelete(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.delete.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.delete(this.row, this.deleteConfirm);\n        }\n    }\n    ngOnChanges() {\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n}\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) { return new (t || TbodyEditDeleteComponent)(); };\nTbodyEditDeleteComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyEditDeleteComponent, selectors: [[\"smart-table-body-edit-delete\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\"]], template: function TbodyEditDeleteComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n        i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n    } }, dependencies: [i1.NgIf], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-body-edit-delete',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"smart-table-action smart-table-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"smart-table-action smart-table-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], deleteConfirm: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], edit: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], editRowSelect: [{\n            type: Output\n        }] }); })();\n\nfunction TbodyCustomComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r3); const action_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onCustom(action_r1, $event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\n} }\nclass TbodyCustomComponent {\n    constructor() {\n        this.custom = new EventEmitter();\n    }\n    onCustom(action, event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.custom.emit({\n            action: action.name,\n            data: this.row.getData(),\n            source: this.source\n        });\n    }\n}\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) { return new (t || TbodyCustomComponent)(); };\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCustomComponent, selectors: [[\"smart-table-body-custom\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\"]], template: function TbodyCustomComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n    } }, dependencies: [i1.NgForOf], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-body-custom',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\n        class=\"smart-table-action smart-table-action-custom-custom\" \n        [innerHTML]=\"action.title\"\n        (click)=\"onCustom(action, $event)\"></a>\n        `\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], custom: [{\n            type: Output\n        }] }); })();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0$7 = [\"smart-table-body\", \"\"];\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() { i0.ɵɵrestoreView(_r11); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.multipleSelectRow.emit(row_r2)); });\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r13.custom.emit($event)); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n    i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r17 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r17.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r19 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r19.editRowSelect.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"smart-intel-table-cell\", 12);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const cell_r22 = ctx.$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) { if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r25.custom.emit($event)); });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n    i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r27 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r27.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r29 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r29.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r31 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r31.editRowSelect.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n} }\nconst _c1 = function (a0) { return { selected: a0 }; };\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 2);\n    i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r33 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r33.userSelectRow.emit(row_r2)); })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r35 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r35.rowHover.emit(row_r2)); });\n    i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\n    i0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\n    i0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\n    i0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, row_r2.isSelected));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n} }\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n} }\nclass Ng2SmartTableTbodyComponent {\n    constructor() {\n        this.save = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.edited = new EventEmitter();\n        this.userSelectRow = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n        this.multipleSelectRow = new EventEmitter();\n        this.rowHover = new EventEmitter();\n    }\n    get tableColumnsCount() {\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n        return this.grid.getColumns().length + actionColumns;\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.mode = this.grid.getSetting('mode');\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) { return new (t || Ng2SmartTableTbodyComponent)(); };\nNg2SmartTableTbodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTbodyComponent, selectors: [[\"\", \"smart-table-body\", \"\"]], inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$7, decls: 2, vars: 2, consts: [[\"class\", \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"smart-table-actions smart-table-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\", \"smart-table-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"smart-table-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]], template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\n        i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel, CellComponent, TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent], styles: [\"[_nghost-%COMP%]   .smart-table-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .smart-table-row[_ngcontent-%COMP%]   .smart-table-actions.smart-table-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     smart-table-body-edit-delete a:first-child, [_nghost-%COMP%]     smart-table-body-create-cancel a:first-child{margin-right:.25rem}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\n        type: Component,\n        args: [{ selector: '[smart-table-body]', template: \"<tr\\n  *ngFor=\\\"let row of grid.getRows()\\\"\\n  (click)=\\\"userSelectRow.emit(row)\\\"\\n  (mouseover)=\\\"rowHover.emit(row)\\\"\\n  class=\\\"smart-table-row\\\"\\n  [className]=\\\"rowClassFunction(row)\\\"\\n  [ngClass]=\\\"{ selected: row.isSelected }\\\"\\n>\\n  <td\\n    *ngIf=\\\"isMultiSelectVisible\\\"\\n    class=\\\"smart-table-actions smart-table-action-multiple-select\\\"\\n    (click)=\\\"multipleSelectRow.emit(row)\\\"\\n  >\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\" />\\n  </td>\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <smart-intel-table-cell\\n      [cell]=\\\"cell\\\"\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [isNew]=\\\"false\\\"\\n      [mode]=\\\"mode\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [inputClass]=\\\"editInputClass\\\"\\n      [isInEditing]=\\\"row.isInEditing\\\"\\n    >\\n    </smart-intel-table-cell>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\", styles: [\":host .smart-table-row.selected{background:rgba(0,0,0,.05)}:host .smart-table-row .smart-table-actions.smart-table-action-multiple-select{text-align:center}:host ::ng-deep smart-table-body-edit-delete a:first-child,:host ::ng-deep smart-table-body-create-cancel a:first-child{margin-right:.25rem}\\n\"] }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], deleteConfirm: [{\n            type: Input\n        }], editConfirm: [{\n            type: Input\n        }], rowClassFunction: [{\n            type: Input\n        }], save: [{\n            type: Output\n        }], cancel: [{\n            type: Output\n        }], edit: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], custom: [{\n            type: Output\n        }], edited: [{\n            type: Output\n        }], userSelectRow: [{\n            type: Output\n        }], editRowSelect: [{\n            type: Output\n        }], multipleSelectRow: [{\n            type: Output\n        }], rowHover: [{\n            type: Output\n        }] }); })();\n\nconst TBODY_COMPONENTS = [\n    TbodyCreateCancelComponent,\n    TbodyEditDeleteComponent,\n    TbodyCustomComponent,\n    Ng2SmartTableTbodyComponent\n];\nclass TbodyModule {\n}\nTbodyModule.ɵfac = function TbodyModule_Factory(t) { return new (t || TbodyModule)(); };\nTbodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TbodyModule });\nTbodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        CellModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    CellModule\n                ],\n                declarations: [\n                    ...TBODY_COMPONENTS\n                ],\n                exports: [\n                    ...TBODY_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TbodyModule, { declarations: [TbodyCreateCancelComponent,\n        TbodyEditDeleteComponent,\n        TbodyCustomComponent,\n        Ng2SmartTableTbodyComponent], imports: [CommonModule,\n        FormsModule,\n        CellModule], exports: [TbodyCreateCancelComponent,\n        TbodyEditDeleteComponent,\n        TbodyCustomComponent,\n        Ng2SmartTableTbodyComponent] }); })();\n\nconst _c0$6 = [\"smart-table-add-button\", \"\"];\nfunction AddButtonComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.onAdd($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\n} }\nclass AddButtonComponent {\n    constructor(ref) {\n        this.ref = ref;\n        this.create = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions-title', 'smart-table-actions-title-add');\n    }\n    ngOnChanges() {\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n    onAdd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.create.emit({\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.createFormShown = true;\n        }\n    }\n}\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) { return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nAddButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddButtonComponent, selectors: [[\"\", \"smart-table-add-button\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$6, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-add\", 3, \"innerHTML\", \"click\"]], template: function AddButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n    } }, dependencies: [i1.NgIf], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddButtonComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-add-button]',\n                template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"smart-table-action smart-table-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `,\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }] }); })();\n\nconst _c0$5 = [\"smart-table-thead-filters-row\", \"\"];\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"th\");\n} }\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.create.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\")(1, \"smart-intel-table-filter\", 5);\n    i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_smart_intel_table_filter_filter_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.filter.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n} }\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 6);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.create.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n} }\nclass TheadFitlersRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) { return new (t || TheadFitlersRowComponent)(); };\nTheadFitlersRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFitlersRowComponent, selectors: [[\"\", \"smart-table-thead-filters-row\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$5, decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]], template: function TheadFitlersRowComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n        i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n        i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, dependencies: [i1.NgForOf, i1.NgIf, FilterComponent, AddButtonComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-thead-filters-row]',\n                template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th smart-table-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"smart-table-th {{ column.id }}\">\n      <smart-intel-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </smart-intel-table-filter>\n    </th>\n    <th smart-table-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }], filter: [{\n            type: Output\n        }] }); })();\n\nclass ActionsComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n}\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) { return new (t || ActionsComponent)(); };\nActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsComponent, selectors: [[\"ng2-st-actions\"]], inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-cancel\", 3, \"innerHTML\", \"click\"]], template: function ActionsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) { $event.preventDefault(); return ctx.create.emit($event); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) { $event.preventDefault(); return ctx.grid.createFormShown = false; });\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng2-st-actions',\n                template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }] }); })();\n\nconst _c0$4 = [\"smart-table-thead-form-row\", \"\"];\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n} }\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onCreate($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"smart-intel-table-cell\", 5);\n    i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_smart_intel_table_cell_edited_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.onCreate($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const cell_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n} }\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.onCreate($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n} }\nclass TheadFormRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    onCreate(event) {\n        event.stopPropagation();\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) { return new (t || TheadFormRowComponent)(); };\nTheadFormRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFormRowComponent, selectors: [[\"\", \"smart-table-thead-form-row\", \"\"]], inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$4, decls: 4, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]], template: function TheadFormRowComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n        i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n        i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n        i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, dependencies: [i1.NgForOf, i1.NgIf, CellComponent, ActionsComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFormRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-thead-form-row]',\n                template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <smart-intel-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </smart-intel-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], row: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }], create: [{\n            type: Output\n        }] }); })();\n\nconst _c0$3 = [\"ng2-st-actions-title\", \"\"];\nclass ActionsTitleComponent {\n    constructor(ref) {\n        this.ref = ref;\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions');\n    }\n    ngOnChanges() {\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n}\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) { return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nActionsTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsTitleComponent, selectors: [[\"\", \"ng2-st-actions-title\", \"\"]], inputs: { grid: \"grid\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$3, decls: 2, vars: 1, consts: [[1, \"smart-table-title\"]], template: function ActionsTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n    } }, encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: '[ng2-st-actions-title]',\n                template: `\n    <div class=\"smart-table-title\">{{ actionsColumnTitle }}</div>\n  `,\n            }]\n    }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n            type: Input\n        }] }); })();\n\nconst _c0$2 = [\"smart-table-checkbox-select-all\", \"\"];\nclass CheckboxSelectAllComponent {\n}\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) { return new (t || CheckboxSelectAllComponent)(); };\nCheckboxSelectAllComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxSelectAllComponent, selectors: [[\"\", \"smart-table-checkbox-select-all\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, attrs: _c0$2, decls: 1, vars: 1, consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]], template: function CheckboxSelectAllComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n    } }, dependencies: [i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-checkbox-select-all]',\n                template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }] }); })();\n\nfunction TitleComponent_a_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2._sort($event)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n} }\nfunction TitleComponent_span_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.column.title);\n} }\nclass TitleComponent {\n    constructor() {\n        this.currentDirection = '';\n        this.sort = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const sortConf = this.source.getSort();\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n                    this.currentDirection = sortConf[0]['direction'];\n                }\n                else {\n                    this.currentDirection = '';\n                }\n                sortConf.forEach((fieldConf) => {\n                });\n            });\n        }\n    }\n    _sort(event) {\n        event.preventDefault();\n        this.changeSortDirection();\n        this.source.setSort([\n            {\n                field: this.column.id,\n                direction: this.currentDirection,\n                compare: this.column.getCompareFunction(),\n            },\n        ]);\n        this.sort.emit(null);\n    }\n    changeSortDirection() {\n        if (this.currentDirection) {\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n            this.currentDirection = newDirection;\n        }\n        else {\n            this.currentDirection = this.column.sortDirection;\n        }\n        return this.currentDirection;\n    }\n}\nTitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(); };\nTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TitleComponent, selectors: [[\"smart-intel-table-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"smart-table-sort\"]], template: function TitleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n        i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n    } }, dependencies: [i1.NgClass, i1.NgIf], styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table-title', template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"smart-table-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"smart-table-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\n    }], null, { column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }] }); })();\n\nclass ColumnTitleComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n    }\n}\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) { return new (t || ColumnTitleComponent)(); };\nColumnTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnTitleComponent, selectors: [[\"smart-table-column-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, decls: 2, vars: 2, consts: [[1, \"smart-table-title\"], [3, \"source\", \"column\", \"sort\"]], template: function ColumnTitleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"smart-intel-table-title\", 1);\n        i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_smart_intel_table_title_sort_1_listener($event) { return ctx.sort.emit($event); });\n        i0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\n    } }, dependencies: [TitleComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnTitleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'smart-table-column-title',\n                template: `\n    <div class=\"smart-table-title\">\n      <smart-intel-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-intel-table-title>\n    </div>\n  `,\n            }]\n    }], null, { column: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }] }); })();\n\nconst _c0$1 = [\"smart-table-thead-titles-row\", \"\"];\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.selectAllRows.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n} }\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n} }\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 5)(1, \"smart-table-column-title\", 6);\n    i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_smart_table_column_title_sort_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.sort.emit($event)); });\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n    i0.ɵɵstyleProp(\"width\", column_r6.width);\n    i0.ɵɵproperty(\"ngClass\", column_r6.class);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\n} }\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n} }\nclass TheadTitlesRowComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) { return new (t || TheadTitlesRowComponent)(); };\nTheadTitlesRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadTitlesRowComponent, selectors: [[\"\", \"smart-table-thead-titles-row\", \"\"]], inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$1, decls: 4, vars: 4, consts: [[\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]], template: function TheadTitlesRowComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n        i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\n        i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, ActionsTitleComponent, CheckboxSelectAllComponent, ColumnTitleComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\n        type: Component,\n        args: [{\n                selector: '[smart-table-thead-titles-row]',\n                template: `\n    <th smart-table-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                  [grid]=\"grid\"\n                                  [source]=\"source\"\n                                  [isAllSelected]=\"isAllSelected\"\n                                  (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"smart-table-th {{ column.id }}\"\n        [ngClass]=\"column.class\"\n        [style.width]=\"column.width\">\n      <smart-table-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-table-column-title>\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `,\n            }]\n    }], null, { grid: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }], selectAllRows: [{\n            type: Output\n        }] }); })();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0 = [\"smart-table-thead\", \"\"];\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) { if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.sort.emit($event)); })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.selectAllRows.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n} }\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.create.emit($event)); })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.filter.emit($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n} }\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 5);\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n} }\nclass Ng2SmartTableTheadComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n}\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) { return new (t || Ng2SmartTableTheadComponent)(); };\nNg2SmartTableTheadComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTheadComponent, selectors: [[\"\", \"smart-table-thead\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 3, vars: 3, consts: [[\"smart-table-thead-titles-row\", \"\", \"class\", \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"smart-table-thead-filters-row\", \"\", \"class\", \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"smart-table-thead-titles-row\", \"\", 1, \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"smart-table-thead-filters-row\", \"\", 1, \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]], template: function Ng2SmartTableTheadComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n        i0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n        i0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n    } }, dependencies: [i1.NgIf, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent], encapsulation: 2 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\n        type: Component,\n        args: [{ selector: '[smart-table-thead]', template: \"<tr\\n  smart-table-thead-titles-row\\n  *ngIf=\\\"!isHideHeader\\\"\\n  class=\\\"smart-table-titles\\\"\\n  [grid]=\\\"grid\\\"\\n  [isAllSelected]=\\\"isAllSelected\\\"\\n  [source]=\\\"source\\\"\\n  (sort)=\\\"sort.emit($event)\\\"\\n  (selectAllRows)=\\\"selectAllRows.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-filters-row\\n  *ngIf=\\\"!isHideSubHeader\\\"\\n  class=\\\"smart-table-filters\\\"\\n  [grid]=\\\"grid\\\"\\n  [source]=\\\"source\\\"\\n  (create)=\\\"create.emit($event)\\\"\\n  (filter)=\\\"filter.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-form-row\\n  *ngIf=\\\"grid.createFormShown\\\"\\n  [grid]=\\\"grid\\\"\\n  [createConfirm]=\\\"createConfirm\\\"\\n></tr>\\n\" }]\n    }], null, { grid: [{\n            type: Input\n        }], source: [{\n            type: Input\n        }], isAllSelected: [{\n            type: Input\n        }], createConfirm: [{\n            type: Input\n        }], sort: [{\n            type: Output\n        }], selectAllRows: [{\n            type: Output\n        }], create: [{\n            type: Output\n        }], filter: [{\n            type: Output\n        }] }); })();\n\nconst THEAD_COMPONENTS = [\n    ActionsComponent,\n    ActionsTitleComponent,\n    AddButtonComponent,\n    CheckboxSelectAllComponent,\n    ColumnTitleComponent,\n    TitleComponent,\n    TheadFitlersRowComponent,\n    TheadFormRowComponent,\n    TheadTitlesRowComponent,\n    Ng2SmartTableTheadComponent\n];\nclass TheadModule {\n}\nTheadModule.ɵfac = function TheadModule_Factory(t) { return new (t || TheadModule)(); };\nTheadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TheadModule });\nTheadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    FilterModule,\n                    CellModule\n                ],\n                declarations: [\n                    ...THEAD_COMPONENTS\n                ],\n                exports: [\n                    ...THEAD_COMPONENTS\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TheadModule, { declarations: [ActionsComponent,\n        ActionsTitleComponent,\n        AddButtonComponent,\n        CheckboxSelectAllComponent,\n        ColumnTitleComponent,\n        TitleComponent,\n        TheadFitlersRowComponent,\n        TheadFormRowComponent,\n        TheadTitlesRowComponent,\n        Ng2SmartTableTheadComponent], imports: [CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule], exports: [ActionsComponent,\n        ActionsTitleComponent,\n        AddButtonComponent,\n        CheckboxSelectAllComponent,\n        ColumnTitleComponent,\n        TitleComponent,\n        TheadFitlersRowComponent,\n        TheadFormRowComponent,\n        TheadTitlesRowComponent,\n        Ng2SmartTableTheadComponent] }); })();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst filterValues = (value, search) => value.toString().toLowerCase().includes(search.toString().toLowerCase());\nclass LocalFilter {\n    static filter(data, field, search, customFilter) {\n        const filter = customFilter ? customFilter : filterValues;\n        return data.filter((el) => {\n            const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n            // return filter.call(null, value, search); // FIXME just fallback dis in case direct call not working\n            return filter(null, value, search);\n        });\n    }\n}\n\nclass LocalPager {\n    static paginate(data, page, perPage) {\n        return data.slice(perPage * (page - 1), perPage * page);\n    }\n}\n\nconst compareValues = (direction, a, b) => {\n    if (a < b) {\n        return -1 * direction;\n    }\n    if (a > b) {\n        return direction;\n    }\n    return 0;\n};\nclass LocalSorter {\n    static sort(data, field, direction, customCompare) {\n        const dir = (direction === 'asc') ? 1 : -1;\n        const compare = customCompare ? customCompare : compareValues;\n        // return data.sort((a, b) => compare.call(null, dir, a[field], b[field])); // FIXME fallback to dis in cas direct call fails\n        return data.sort((a, b) => compare(null, dir, a[field], b[field]));\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-return */\nclass LocalDataSource extends DataSource {\n    constructor(data = []) {\n        super();\n        this.data = [];\n        this.filteredAndSorted = [];\n        this.sortConf = [];\n        this.filterConf = {\n            filters: [],\n            andOperator: true\n        };\n        this.pagingConf = {};\n        this.data = data;\n    }\n    load(data) {\n        this.data = data;\n        return super.load(data);\n    }\n    prepend(element) {\n        this.reset(true);\n        this.data.unshift(element);\n        return super.prepend(element);\n    }\n    append(element) {\n        this.reset(true);\n        this.data.push(element);\n        return super.append(element);\n    }\n    add(element) {\n        this.data.push(element);\n        return super.add(element);\n    }\n    remove(element) {\n        this.data = this.data.filter(el => el !== element);\n        return super.remove(element);\n    }\n    update(element, values) {\n        return new Promise((resolve, reject) => {\n            this.find(element).then((found) => {\n                found = deepExtend(found, values);\n                super.update(found, values).then(resolve).catch(reject);\n            }).catch(reject);\n        });\n    }\n    find(element) {\n        const found = this.data.find(el => el === element);\n        if (found) {\n            return Promise.resolve(found);\n        }\n        return Promise.reject(new Error('Element was not found in the dataset'));\n    }\n    getElements() {\n        const data = this.data.slice(0);\n        return Promise.resolve(this.prepareData(data));\n    }\n    getFilteredAndSorted() {\n        const data = this.data.slice(0);\n        this.prepareData(data);\n        return Promise.resolve(this.filteredAndSorted);\n    }\n    getAll() {\n        const data = this.data.slice(0);\n        return Promise.resolve(data);\n    }\n    reset(silent = false) {\n        if (silent) {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n            this.sortConf = [];\n            this.pagingConf.page = 1;\n        }\n        else {\n            this.setFilter([], true, false);\n            this.setSort([], false);\n            this.setPage(1);\n        }\n    }\n    empty() {\n        this.data = [];\n        return super.empty();\n    }\n    count() {\n        return this.filteredAndSorted.length;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param doEmit\n     * @returns\n     */\n    setSort(conf, doEmit = true) {\n        if (conf !== null) {\n            conf.forEach((fieldConf) => {\n                if (!fieldConf.field || typeof fieldConf.direction === 'undefined') {\n                    throw new Error('Sort configuration object is not valid');\n                }\n            });\n            this.sortConf = conf;\n        }\n        super.setSort(conf, doEmit);\n        return this;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, search: string, filter: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param andOperator\n     * @param doEmit\n     * @returns\n     */\n    setFilter(conf, andOperator = true, doEmit = true) {\n        if (conf && conf.length > 0) {\n            conf.forEach((fieldConf) => {\n                this.addFilter(fieldConf, andOperator, false);\n            });\n        }\n        else {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n        }\n        this.filterConf.andOperator = andOperator;\n        this.pagingConf.page = 1;\n        super.setFilter(conf, andOperator, doEmit);\n        return this;\n    }\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\n        if (!fieldConf.field || typeof fieldConf.search === 'undefined') {\n            throw new Error('Filter configuration object is not valid');\n        }\n        let found = false;\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\n            if (currentFieldConf.field === fieldConf.field) {\n                this.filterConf.filters[index] = fieldConf;\n                found = true;\n            }\n        });\n        if (!found) {\n            this.filterConf.filters.push(fieldConf);\n        }\n        this.filterConf.andOperator = andOperator;\n        super.addFilter(fieldConf, andOperator, doEmit);\n        return this;\n    }\n    setPaging(page, perPage, doEmit = true) {\n        this.pagingConf.page = page;\n        this.pagingConf.perPage = perPage;\n        super.setPaging(page, perPage, doEmit);\n        return this;\n    }\n    setPage(page, doEmit = true) {\n        this.pagingConf.page = page;\n        super.setPage(page, doEmit);\n        return this;\n    }\n    getSort() {\n        return this.sortConf;\n    }\n    getFilter() {\n        return this.filterConf;\n    }\n    getPaging() {\n        return this.pagingConf;\n    }\n    prepareData(data) {\n        data = this.filter(data);\n        data = this.sort(data);\n        this.filteredAndSorted = data.slice(0);\n        return this.paginate(data);\n    }\n    sort(data) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                data = LocalSorter\n                    .sort(data, fieldConf.field, fieldConf.direction, fieldConf.compare);\n            });\n        }\n        return data;\n    }\n    // TODO: refactor?\n    filter(data) {\n        if (this.filterConf.filters) {\n            if (this.filterConf.andOperator) {\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        data = LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter);\n                    }\n                });\n            }\n            else {\n                let mergedData = [];\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        mergedData = mergedData.concat(LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter));\n                    }\n                });\n                // remove non unique items\n                data = mergedData.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n            }\n        }\n        return data;\n    }\n    paginate(data) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            data = LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\n        }\n        return data;\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction SmartIntelTableComponent_thead_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"thead\", 4);\n    i0.ɵɵlistener(\"create\", function SmartIntelTableComponent_thead_1_Template_thead_create_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.create.emit($event)); })(\"selectAllRows\", function SmartIntelTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onSelectAllRows($event)); })(\"sort\", function SmartIntelTableComponent_thead_1_Template_thead_sort_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.sort($event)); })(\"filter\", function SmartIntelTableComponent_thead_1_Template_thead_filter_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.filter($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n} }\nfunction SmartIntelTableComponent_smart_intel_table_pager_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"smart-intel-table-pager\", 5);\n    i0.ɵɵlistener(\"changePage\", function SmartIntelTableComponent_smart_intel_table_pager_3_Template_smart_intel_table_pager_changePage_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.changePage($event)); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n} }\nclass SmartIntelTableComponent {\n    constructor() {\n        this.settings = {};\n        this.rowSelect = new EventEmitter();\n        this.rowDeselect = new EventEmitter();\n        this.userRowSelect = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.create = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.deleteConfirm = new EventEmitter();\n        this.editConfirm = new EventEmitter();\n        this.createConfirm = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.defaultSettings = {\n            mode: 'inline',\n            selectMode: 'single',\n            /**\n             * Points to an element in all data\n             *\n             * when < 0 all lines must be deselected\n             */\n            selectedRowIndex: 0,\n            switchPageToSelectedRowPage: false,\n            hideHeader: false,\n            hideSubHeader: false,\n            actions: {\n                columnTitle: 'Actions',\n                add: true,\n                edit: true,\n                delete: true,\n                custom: [],\n                position: 'left' // left|right\n            },\n            filter: {\n                inputClass: ''\n            },\n            edit: {\n                inputClass: '',\n                editButtonContent: 'Edit',\n                saveButtonContent: 'Update',\n                cancelButtonContent: 'Cancel',\n                confirmSave: false\n            },\n            add: {\n                inputClass: '',\n                addButtonContent: 'Add New',\n                createButtonContent: 'Create',\n                cancelButtonContent: 'Cancel',\n                confirmCreate: false\n            },\n            delete: {\n                deleteButtonContent: 'Delete',\n                confirmDelete: false\n            },\n            attr: {\n                id: '',\n                class: ''\n            },\n            noDataMessage: 'No data found',\n            columns: {},\n            pager: {\n                display: true,\n                page: 1,\n                perPage: 10\n            },\n            rowClassFunction: () => ''\n        };\n        this.isAllSelected = false;\n        this.destroyed$ = new Subject();\n    }\n    ngOnChanges(changes) {\n        if (this.grid) {\n            if (changes.settings) {\n                this.grid.setSettings(this.prepareSettings());\n            }\n            if (changes.source) {\n                this.source = this.prepareSource();\n                this.grid.setSource(this.source);\n            }\n        }\n        else {\n            this.initGrid();\n        }\n        this.tableId = this.grid.getSetting('attr.id');\n        this.tableClass = this.grid.getSetting('attr.class');\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n        if (!this.grid) {\n            return;\n        }\n        this.grid.settings.selectedRowIndex = index;\n        if (this.isIndexOutOfRange(index)) {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n            return;\n        }\n        if (switchPageToSelectedRowPage) {\n            const source = this.source;\n            const paging = source.getPaging();\n            const page = getPageForRowIndex(index, paging.perPage);\n            index %= paging.perPage;\n            this.grid.settings.selectedRowIndex = index;\n            if (page !== paging.page) {\n                source.setPage(page);\n                return;\n            }\n        }\n        const row = this.grid.getRows()[index];\n        if (row) {\n            this.onSelectRow(row);\n        }\n        else {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n        }\n    }\n    editRowSelect(row) {\n        if (this.grid.getSetting('selectMode') === 'multi') {\n            this.onMultipleSelectRow(row);\n        }\n        else {\n            this.onSelectRow(row);\n        }\n    }\n    onUserSelectRow(row) {\n        if (this.grid.getSetting('selectMode') !== 'multi') {\n            this.grid.selectRow(row);\n            this.emitUserSelectRow(row);\n            this.emitSelectRow(row);\n        }\n    }\n    onRowHover(row) {\n        this.rowHover.emit(row);\n    }\n    multipleSelectRow(row) {\n        this.grid.multipleSelectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n    }\n    onSelectAllRows($event) {\n        this.isAllSelected = !this.isAllSelected;\n        this.grid.selectAllRows(this.isAllSelected);\n        this.emitUserSelectRow(null);\n        this.emitSelectRow(null);\n    }\n    onSelectRow(row) {\n        this.grid.selectRow(row);\n        this.emitSelectRow(row);\n    }\n    onMultipleSelectRow(row) {\n        this.emitSelectRow(row);\n    }\n    initGrid() {\n        this.source = this.prepareSource();\n        this.grid = new Grid(this.source, this.prepareSettings());\n        this.subscribeToOnSelectRow();\n        this.subscribeToOnDeselectRow();\n    }\n    prepareSource() {\n        if (this.source instanceof DataSource) {\n            return this.source;\n        }\n        else if (this.source instanceof Array) {\n            return new LocalDataSource(this.source);\n        }\n        return new LocalDataSource();\n    }\n    prepareSettings() {\n        return deepExtend({}, this.defaultSettings, this.settings);\n    }\n    changePage($event) {\n        this.resetAllSelector();\n    }\n    sort($event) {\n        this.resetAllSelector();\n    }\n    filter($event) {\n        this.resetAllSelector();\n    }\n    deselectAllRows() {\n        this.grid.dataSet.deselectAll();\n        this.emitDeselectRow(null);\n    }\n    resetAllSelector() {\n        this.isAllSelected = false;\n    }\n    emitUserSelectRow(row) {\n        const selectedRows = this.grid.getSelectedRows();\n        this.userRowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : []\n        });\n    }\n    emitSelectRow(row) {\n        const data = {\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        };\n        this.rowSelect.emit(data);\n        if (!row?.isSelected) {\n            this.rowDeselect.emit(data);\n        }\n    }\n    emitDeselectRow(row) {\n        this.rowDeselect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        });\n    }\n    isIndexOutOfRange(index) {\n        const dataAmount = this.source?.count();\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n    }\n    subscribeToOnSelectRow() {\n        if (this.onSelectRowSubscription) {\n            this.onSelectRowSubscription.unsubscribe();\n        }\n        this.onSelectRowSubscription = this.grid.onSelectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitSelectRow(row);\n        });\n    }\n    subscribeToOnDeselectRow() {\n        if (this.onDeselectRowSubscription) {\n            this.onDeselectRowSubscription.unsubscribe();\n        }\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitDeselectRow(row);\n        });\n    }\n}\nSmartIntelTableComponent.ɵfac = function SmartIntelTableComponent_Factory(t) { return new (t || SmartIntelTableComponent)(); };\nSmartIntelTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SmartIntelTableComponent, selectors: [[\"smart-intel-table\"]], inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 4, vars: 9, consts: [[3, \"id\", \"ngClass\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"smart-table-body\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]], template: function SmartIntelTableComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵtemplate(1, SmartIntelTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\n        i0.ɵɵelementStart(2, \"tbody\", 2);\n        i0.ɵɵlistener(\"edit\", function SmartIntelTableComponent_Template_tbody_edit_2_listener($event) { return ctx.edit.emit($event); })(\"delete\", function SmartIntelTableComponent_Template_tbody_delete_2_listener($event) { return ctx.delete.emit($event); })(\"custom\", function SmartIntelTableComponent_Template_tbody_custom_2_listener($event) { return ctx.custom.emit($event); })(\"userSelectRow\", function SmartIntelTableComponent_Template_tbody_userSelectRow_2_listener($event) { return ctx.onUserSelectRow($event); })(\"editRowSelect\", function SmartIntelTableComponent_Template_tbody_editRowSelect_2_listener($event) { return ctx.editRowSelect($event); })(\"multipleSelectRow\", function SmartIntelTableComponent_Template_tbody_multipleSelectRow_2_listener($event) { return ctx.multipleSelectRow($event); })(\"rowHover\", function SmartIntelTableComponent_Template_tbody_rowHover_2_listener($event) { return ctx.onRowHover($event); });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, SmartIntelTableComponent_smart_intel_table_pager_3_Template, 1, 2, \"smart-intel-table-pager\", 3);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n    } }, dependencies: [i1.NgClass, i1.NgIf, PagerComponent, Ng2SmartTableTbodyComponent, Ng2SmartTableTheadComponent], styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableComponent, [{\n        type: Component,\n        args: [{ selector: 'smart-intel-table', template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n  <thead\\n    smart-table-thead\\n    *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n    [grid]=\\\"grid\\\"\\n    [isAllSelected]=\\\"isAllSelected\\\"\\n    [source]=\\\"source\\\"\\n    [createConfirm]=\\\"createConfirm\\\"\\n    (create)=\\\"create.emit($event)\\\"\\n    (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n    (sort)=\\\"sort($event)\\\"\\n    (filter)=\\\"filter($event)\\\"\\n  ></thead>\\n\\n  <tbody\\n    smart-table-body\\n    [grid]=\\\"grid\\\"\\n    [source]=\\\"source\\\"\\n    [deleteConfirm]=\\\"deleteConfirm\\\"\\n    [editConfirm]=\\\"editConfirm\\\"\\n    [rowClassFunction]=\\\"rowClassFunction\\\"\\n    (edit)=\\\"edit.emit($event)\\\"\\n    (delete)=\\\"delete.emit($event)\\\"\\n    (custom)=\\\"custom.emit($event)\\\"\\n    (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n    (editRowSelect)=\\\"editRowSelect($event)\\\"\\n    (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n    (rowHover)=\\\"onRowHover($event)\\\"\\n  ></tbody>\\n</table>\\n\\n<smart-intel-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</smart-intel-table-pager>\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"] }]\n    }], null, { source: [{\n            type: Input\n        }], settings: [{\n            type: Input\n        }], rowSelect: [{\n            type: Output\n        }], rowDeselect: [{\n            type: Output\n        }], userRowSelect: [{\n            type: Output\n        }], delete: [{\n            type: Output\n        }], edit: [{\n            type: Output\n        }], create: [{\n            type: Output\n        }], custom: [{\n            type: Output\n        }], deleteConfirm: [{\n            type: Output\n        }], editConfirm: [{\n            type: Output\n        }], createConfirm: [{\n            type: Output\n        }], rowHover: [{\n            type: Output\n        }] }); })();\n\nclass SmartIntelTableModule {\n}\nSmartIntelTableModule.ɵfac = function SmartIntelTableModule_Factory(t) { return new (t || SmartIntelTableModule)(); };\nSmartIntelTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: SmartIntelTableModule });\nSmartIntelTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CellModule,\n        FilterModule,\n        PagerModule,\n        TbodyModule,\n        TheadModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    CellModule,\n                    FilterModule,\n                    PagerModule,\n                    TbodyModule,\n                    TheadModule\n                ],\n                declarations: [\n                    SmartIntelTableComponent\n                ],\n                exports: [\n                    SmartIntelTableComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SmartIntelTableModule, { declarations: [SmartIntelTableComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CellModule,\n        FilterModule,\n        PagerModule,\n        TbodyModule,\n        TheadModule], exports: [SmartIntelTableComponent] }); })();\n\nclass ServerSourceConf {\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n        this.endPoint = endPoint ? endPoint : '';\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.sortFieldKey;\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.sortDirKey;\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.pagerPageKey;\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.pagerLimitKey;\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.filterFieldKey;\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.totalKey;\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.dataKey;\n    }\n}\nServerSourceConf.sortFieldKey = '_sort';\nServerSourceConf.sortDirKey = '_order';\nServerSourceConf.pagerPageKey = '_page';\nServerSourceConf.pagerLimitKey = '_limit';\nServerSourceConf.filterFieldKey = '#field#_like';\nServerSourceConf.totalKey = 'x-total-count';\nServerSourceConf.dataKey = '';\n\nclass ServerDataSource extends LocalDataSource {\n    constructor(http, conf = {}) {\n        super();\n        this.http = http;\n        this.lastRequestCount = 0;\n        this.conf = new ServerSourceConf(conf);\n        if (!this.conf.endPoint) {\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n        }\n    }\n    count() {\n        return this.lastRequestCount;\n    }\n    getElements() {\n        /** const observer$ = this.requestElements()\n        .pipe(map(res => {\n          this.lastRequestCount = this.extractTotalFromResponse(res);\n          this.data = this.extractDataFromResponse(res);\n          return this.data;\n        }));\n        return lastValueFrom(observer$);*/\n        return this.requestElements()\n            .pipe(map(res => {\n            this.lastRequestCount = this.extractTotalFromResponse(res);\n            this.data = this.extractDataFromResponse(res);\n            return this.data;\n        })).toPromise(); // TODO dis is deprecated\n    }\n    /**\n     * Extracts array of data from server response\n     *\n     * @param res\n     * @returns\n     */\n    extractDataFromResponse(res) {\n        const rawData = res.body;\n        const data = Boolean(this.conf.dataKey) ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n        if (data instanceof Array) {\n            return data;\n        }\n        throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n    }\n    /**\n     * Extracts total rows count from the server response\n     * Looks for the count in the heders first, then in the response body\n     *\n     * @param res\n     * @returns\n     */\n    extractTotalFromResponse(res) {\n        if (res.headers.has(this.conf.totalKey)) {\n            return Number(res.headers.get(this.conf.totalKey));\n        }\n        else {\n            const rawData = res.body;\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\n        }\n    }\n    requestElements() {\n        const httpParams = this.createRequesParams();\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n    }\n    createRequesParams() {\n        let httpParams = new HttpParams();\n        httpParams = this.addSortRequestParams(httpParams);\n        httpParams = this.addFilterRequestParams(httpParams);\n        return this.addPagerRequestParams(httpParams);\n    }\n    addSortRequestParams(httpParams) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n            });\n        }\n        return httpParams;\n    }\n    addFilterRequestParams(httpParams) {\n        if (this.filterConf.filters) {\n            this.filterConf.filters.forEach((fieldConf) => {\n                if (fieldConf.search) {\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf.field), fieldConf.search);\n                }\n            });\n        }\n        return httpParams;\n    }\n    addPagerRequestParams(httpParams) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\n        }\n        return httpParams;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Cell, DefaultEditorBase, DefaultFilter, LocalDataSource, ServerDataSource, SmartIntelTableComponent, SmartIntelTableModule };\n//# sourceMappingURL=smart-intel-table.mjs.map\n","map":null},{"fileName":"smart-intel-table.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"smart-intel-table.mjs\",\"sources\":[\"../../../projects/smart-intel-table/src/lib/defines/data-set/cell.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-set/row.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-set/column.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-set/data-set.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/helpers.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/grid.define.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/edit-cell-default.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/custom-edit.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/default-editor.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/checkbox-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/completer-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/input-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/select-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/textarea-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/default-edit.component.html\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/default-edit.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/edit-cell.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-view-mode/custom-view.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-view-mode/view-cell.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell.module.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/data-source.define.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-default.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/default-filter.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/checkbox-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/completer-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/input-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/select-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/default-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/custom-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter.module.ts\",\"../../../projects/smart-intel-table/src/lib/components/pager/pager.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/pager/pager.module.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/cells/create-cancel.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/cells/edit-delete.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/cells/custom.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/tbody.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/tbody.component.html\",\"../../../projects/smart-intel-table/src/lib/components/tbody/tbody.module.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/add-button.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/rows/thead-filters-row.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/actions.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/rows/thead-form-row.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/actions-title.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/checkbox-select-all.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/title/title.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/column-title.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/rows/thead-titles-row.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/thead.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/thead.component.html\",\"../../../projects/smart-intel-table/src/lib/components/thead/thead.module.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/loca-data-filter.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/local-data-pager.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/local-data-sorter.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/local-data-source.define.ts\",\"../../../projects/smart-intel-table/src/lib/smart-intel-table.component.ts\",\"../../../projects/smart-intel-table/src/lib/smart-intel-table.component.html\",\"../../../projects/smart-intel-table/src/lib/smart-intel-table.module.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/server-data-source/server-data-source.conf.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/server-data-source/server-data-source.define.ts\",\"../../../projects/smart-intel-table/src/smart-intel-table.ts\"],\"sourcesContent\":[\"import { Column } from './column.define';\\nimport { DataSet } from './data-set.define';\\nimport { Row } from './row.define';\\n\\nexport const prepareValue = (value) => value;\\n\\n// @dynamic\\nexport class Cell {\\n  protected static prepareVal = prepareValue;\\n  newValue = '';\\n\\n  constructor(\\n    protected value,\\n    protected row: Row,\\n    protected column,\\n    protected dataSet: DataSet\\n  ) {\\n    this.newValue = value;\\n  }\\n\\n  getColumn(): Column {\\n    return this.column;\\n  }\\n\\n  getRow(): Row {\\n    return this.row;\\n  }\\n\\n  getValue() {\\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.prepareVal;\\n    // eslint-disable-next-line no-useless-call\\n    return prepare.call(null, this.value, this.row.getData(), this);\\n  }\\n\\n  setValue(value) {\\n    this.newValue = value;\\n  }\\n\\n  getId(): string {\\n    return this.getColumn().id;\\n  }\\n\\n  getTitle(): string {\\n    return this.getColumn().title;\\n  }\\n\\n  isEditable(): boolean {\\n    if (this.getRow().index === -1) {\\n      return this.getColumn().isAddable;\\n    }\\n    else {\\n      return this.getColumn().isEditable;\\n    }\\n  }\\n}\\n\",\"import { Cell } from './cell.define';\\nimport { Column } from './column.define';\\nimport { DataSet } from './data-set.define';\\n\\nexport class Row {\\n  isSelected = false;\\n  isInEditing = false;\\n  cells: Cell[] = [];\\n\\n  constructor(\\n    public index: number,\\n    protected data,\\n    protected dataSet: DataSet\\n  ) {\\n    this.process();\\n  }\\n\\n  getCell(column: Column): Cell {\\n    return this.cells.find(el => el.getColumn() === column);\\n  }\\n\\n  getCells() {\\n    return this.cells;\\n  }\\n\\n  getData() {\\n    return this.data;\\n  }\\n\\n  getIsSelected(): boolean {\\n    return this.isSelected;\\n  }\\n\\n  getNewData() {\\n    const values = Object.assign({}, this.data);\\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\\n    return values;\\n  }\\n\\n  setData(data) {\\n    this.data = data;\\n    this.process();\\n  }\\n\\n  process() {\\n    this.cells = [];\\n    this.dataSet.getColumns().forEach((column: Column) => {\\n      const cell = this.createCell(column);\\n      this.cells.push(cell);\\n    });\\n  }\\n\\n  createCell(column: Column): Cell {\\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\\n    return new Cell(value, this, column, this.dataSet);\\n  }\\n}\\n\",\"import { DataSet } from './data-set.define';\\n\\n/* eslint-disable @typescript-eslint/no-explicit-any */\\nexport class Column {\\n  title = '';\\n  type = '';\\n  class = '';\\n  width = '';\\n  hide = false;\\n  isSortable = false;\\n  isEditable = true;\\n  isAddable = true;\\n  isFilterable = false;\\n  sortDirection = '';\\n  defaultSortDirection = '';\\n  editor: { type: string; config; component } = { type: '', config: {}, component: null };\\n  filter: { type: string; config; component } = { type: '', config: {}, component: null };\\n  renderComponent = null;\\n  compareFunction: () => any;\\n  valuePrepareFunction: () => any;\\n  filterFunction: () => any;\\n  onComponentInitFunction: () => any;\\n\\n  constructor(\\n    public id: string,\\n    protected settings,\\n    protected dataSet: DataSet\\n  ) {\\n    this.process();\\n  }\\n\\n  getOnComponentInitFunction() {\\n    return this.onComponentInitFunction;\\n  }\\n\\n  getCompareFunction() {\\n    return this.compareFunction;\\n  }\\n\\n  getValuePrepareFunction() {\\n    return this.valuePrepareFunction;\\n  }\\n\\n  getFilterFunction() {\\n    return this.filterFunction;\\n  }\\n\\n  getConfig() {\\n    return this.editor && this.editor.config;\\n  }\\n\\n  getFilterType() {\\n    return this.filter && this.filter.type;\\n  }\\n\\n  getFilterConfig() {\\n    return this.filter && this.filter.config;\\n  }\\n\\n  prepareType(): string {\\n    return this.settings.type || this.determineType();\\n  }\\n\\n  prepareSortDirection(): string {\\n    return this.settings.sort === 'desc' ? 'desc' : 'asc';\\n  }\\n\\n  determineType(): string {\\n    // TODO: determine type by data\\n    return 'text';\\n  }\\n\\n  protected process() {\\n    this.title = this.settings.title;\\n    this.class = this.settings.class;\\n    this.width = this.settings.width;\\n    this.hide = Boolean(this.settings.hide);\\n    this.type = this.prepareType();\\n    this.editor = this.settings.editor;\\n    this.filter = this.settings.filter;\\n    this.renderComponent = this.settings.renderComponent;\\n\\n    this.isFilterable = typeof this.settings.filter === 'undefined' ? true : Boolean(this.settings.filter);\\n    this.defaultSortDirection = ['asc', 'desc']\\n      .indexOf(this.settings.sortDirection) !== -1 ? this.settings.sortDirection : '';\\n    this.isSortable = typeof this.settings.sort === 'undefined' ? true : Boolean(this.settings.sort);\\n    this.isEditable = typeof this.settings.editable === 'undefined' ? true : Boolean(this.settings.editable);\\n    this.isAddable = typeof this.settings.addable === 'undefined' ? true : Boolean(this.settings.addable);\\n    this.sortDirection = this.prepareSortDirection();\\n\\n    this.compareFunction = this.settings.compareFunction;\\n    this.valuePrepareFunction = this.settings.valuePrepareFunction;\\n    this.filterFunction = this.settings.filterFunction;\\n    this.onComponentInitFunction = this.settings.onComponentInitFunction;\\n  }\\n}\\n\",\"import { Column } from './column.define';\\nimport { Row } from './row.define';\\n\\nexport class DataSet {\\n  newRow: Row;\\n  protected data = [];\\n  protected columns: Column[] = [];\\n  protected rows: Row[] = [];\\n  protected selectedRow: Row;\\n  protected willSelect: string;\\n\\n  constructor(\\n    data = [],\\n    // eslint-disable-next-line @typescript-eslint/ban-types\\n    protected columnSettings: Object\\n  ) {\\n    this.createColumns(columnSettings);\\n    this.setData(data);\\n    this.createNewRow();\\n  }\\n\\n  setData(data: unknown[]) {\\n    this.data = data;\\n    this.createRows();\\n  }\\n\\n  getColumns(): Column[] {\\n    return this.columns;\\n  }\\n\\n  getRows(): Row[] {\\n    return this.rows;\\n  }\\n\\n  getFirstRow(): Row {\\n    return this.rows[0];\\n  }\\n\\n  getLastRow(): Row {\\n    return this.rows[this.rows.length - 1];\\n  }\\n\\n  findRowByData(data): Row {\\n    return this.rows.find((row: Row) => row.getData() === data);\\n  }\\n\\n  deselectAll() {\\n    this.rows.forEach((row) => {\\n      row.isSelected = false;\\n    });\\n    // we need to clear selectedRow field because no one row selected\\n    this.selectedRow = undefined;\\n  }\\n\\n  selectRow(row: Row): Row | undefined {\\n    const previousIsSelected = row.isSelected;\\n    this.deselectAll();\\n\\n    row.isSelected = !previousIsSelected;\\n    this.selectedRow = row;\\n\\n    return this.selectedRow;\\n  }\\n\\n  multipleSelectRow(row: Row): Row {\\n    row.isSelected = !row.isSelected;\\n    this.selectedRow = row;\\n\\n    return this.selectedRow;\\n  }\\n\\n  selectPreviousRow(): Row {\\n    if (this.rows.length > 0) {\\n      let index = this.selectedRow ? this.selectedRow.index : 0;\\n      if (index > this.rows.length - 1) {\\n        index = this.rows.length - 1;\\n      }\\n      this.selectRow(this.rows[index]);\\n      return this.selectedRow;\\n    }\\n  }\\n\\n  selectFirstRow(): Row | undefined {\\n    if (this.rows.length > 0) {\\n      this.selectRow(this.rows[0]);\\n      return this.selectedRow;\\n    }\\n  }\\n\\n  selectLastRow(): Row | undefined {\\n    if (this.rows.length > 0) {\\n      this.selectRow(this.rows[this.rows.length - 1]);\\n      return this.selectedRow;\\n    }\\n  }\\n\\n  selectRowByIndex(index: number): Row | undefined {\\n    const rowsLength: number = this.rows.length;\\n    if (rowsLength === 0) {\\n      return;\\n    }\\n    if (!index) {\\n      this.selectFirstRow();\\n      return this.selectedRow;\\n    }\\n    if (index > 0 && index < rowsLength) {\\n      this.selectRow(this.rows[index]);\\n      return this.selectedRow;\\n    }\\n    // we need to deselect all rows if we got an incorrect index\\n    this.deselectAll();\\n  }\\n\\n  willSelectFirstRow() {\\n    this.willSelect = 'first';\\n  }\\n\\n  willSelectLastRow() {\\n    this.willSelect = 'last';\\n  }\\n\\n  select(selectedRowIndex?: number): Row | undefined {\\n    if (this.getRows().length === 0) {\\n      return;\\n    }\\n    if (this.willSelect) {\\n      if (this.willSelect === 'first') {\\n        this.selectFirstRow();\\n      }\\n      if (this.willSelect === 'last') {\\n        this.selectLastRow();\\n      }\\n      this.willSelect = '';\\n    } else {\\n      this.selectRowByIndex(selectedRowIndex);\\n    }\\n\\n    return this.selectedRow;\\n  }\\n\\n  createNewRow() {\\n    this.newRow = new Row(-1, {}, this);\\n    this.newRow.isInEditing = true;\\n  }\\n\\n  /**\\n   * Create columns by mapping from the settings\\n   *\\n   * @param settings\\n   * @private\\n   */\\n  createColumns(settings) {\\n    for (const id in settings) {\\n      if (settings.hasOwnProperty(id)) {\\n        this.columns.push(new Column(id, settings[id], this));\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Create rows based on current data prepared in data source\\n   *\\n   * @private\\n   */\\n  createRows() {\\n    this.rows = [];\\n    this.data.forEach((el, index) => {\\n      this.rows.push(new Row(index, el, this));\\n    });\\n  }\\n}\\n\",\"import { cloneDeep } from 'lodash';\\n\\n/**\\n * Extending object that entered in first argument.\\n *\\n * Returns extended object or false if have no target object or incorrect type.\\n *\\n * If you wish to clone source object (without modify it), just use empty new\\n * object as first argument, like this:\\n *   deepExtend({}, yourObj_1, [yourObj_N]);\\n */\\nexport const deepExtend = (...objects: any[]): any => {\\n  if (objects.length < 1 || typeof objects[0] !== 'object') {\\n    return false;\\n  }\\n\\n  if (objects.length < 2) {\\n    return objects[0];\\n  }\\n\\n  const target = objects[0];\\n\\n  // convert arguments to array and cut off target object\\n  const args = Array.prototype.slice.call(objects, 1);\\n\\n  let val;\\n  let src;\\n\\n  args.forEach((obj: any) => {\\n    // skip argument if it is array or isn't object\\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\\n      return;\\n    }\\n\\n    Object.keys(obj).forEach((key) => {\\n      src = target[key]; // source value\\n      val = obj[key]; // new value\\n\\n      // recursion prevention\\n      if (val === target) {\\n        return;\\n\\n        /**\\n         * if new value isn't object then just overwrite by new value\\n         * instead of extending.\\n         */\\n      } else if (typeof val !== 'object' || val === null) {\\n        target[key] = val;\\n        return;\\n\\n        // just clone arrays (and recursive clone objects inside)\\n      } else if (Array.isArray(val)) {\\n        target[key] = cloneDeep(val);\\n        return;\\n\\n        // overwrite by new value if source isn't object or array\\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\\n        target[key] = deepExtend({}, val);\\n        return;\\n\\n        // source value and new value is objects both, extending...\\n      } else {\\n        target[key] = deepExtend(src, val);\\n        return;\\n      }\\n    });\\n  });\\n\\n  return target;\\n};\\n\\nexport class Deferred {\\n  promise: Promise<any>;\\n  resolve: any;\\n  reject: any;\\n\\n  constructor() {\\n    this.promise = new Promise((resolve, reject) => {\\n      this.resolve = resolve;\\n      this.reject = reject;\\n    });\\n  }\\n}\\n\\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\\nexport const getDeepFromObject = (object = {}, name: string, defaultValue?: any) => {\\n  const keys = name.split('.');\\n  // clone the object\\n  let level = deepExtend({}, object);\\n  keys.forEach((k) => {\\n    if (level && typeof level[k] !== 'undefined') {\\n      level = level[k];\\n    }\\n  });\\n\\n  return typeof level === 'undefined' ? defaultValue : level;\\n};\\n\\nexport const getPageForRowIndex = (index: number, perPage: number): number =>\\n  // we need to add 1 to convert 0-based index to 1-based page number.\\n  Math.floor(index / perPage) + 1\\n;\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Subject, Subscription } from 'rxjs';\\nimport { Observable } from 'rxjs';\\nimport { EventEmitter } from '@angular/core';\\nimport { DataSource } from './data-source/data-source.define';\\nimport { DataSet } from './data-set/data-set.define';\\nimport { Deferred, getDeepFromObject, getPageForRowIndex } from './helpers.define';\\nimport { Column } from './data-set/column.define';\\nimport { Row } from './data-set/row.define';\\n\\nexport class Grid {\\n  createFormShown = false;\\n  source: DataSource;\\n  settings;\\n  dataSet: DataSet;\\n  onSelectRowSource = new Subject<any>();\\n  onDeselectRowSource = new Subject<any>();\\n  private sourceOnChangedSubscription: Subscription;\\n  private sourceOnUpdatedSubscription: Subscription;\\n\\n  constructor(source: DataSource, settings) {\\n    this.setSettings(settings);\\n    this.setSource(source);\\n  }\\n\\n  detach(): void {\\n    if (this.sourceOnChangedSubscription) {\\n      this.sourceOnChangedSubscription.unsubscribe();\\n    }\\n    if (this.sourceOnUpdatedSubscription) {\\n      this.sourceOnUpdatedSubscription.unsubscribe();\\n    }\\n  }\\n\\n  showActionColumn(position: string): boolean {\\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\\n  }\\n\\n  isCurrentActionsPosition(position: string): boolean {\\n    // eslint-disable-next-line eqeqeq\\n    return position == this.getSetting('actions.position');\\n  }\\n\\n  isActionsVisible(): boolean {\\n    return this\\n      .getSetting(\\n        'actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\\n  }\\n\\n  isMultiSelectVisible(): boolean {\\n    return this.getSetting('selectMode') === 'multi';\\n  }\\n\\n  getNewRow(): Row {\\n    return this.dataSet.newRow;\\n  }\\n\\n  setSettings(settings: object) {\\n    this.settings = settings;\\n    this.dataSet = new DataSet([], this.getSetting('columns'));\\n\\n    if (this.source) {\\n      this.source.refresh();\\n    }\\n  }\\n\\n  getDataSet(): DataSet {\\n    return this.dataSet;\\n  }\\n\\n  setSource(source: DataSource) {\\n    this.source = this.prepareSource(source);\\n    this.detach();\\n\\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\\n\\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data: any) => {\\n      const changedRow = this.dataSet.findRowByData(data);\\n      changedRow.setData(data);\\n    });\\n  }\\n\\n  getSetting(name: string, defaultValue?) {\\n    return getDeepFromObject(this.settings, name, defaultValue);\\n  }\\n\\n  getColumns(): Column[] {\\n    return this.dataSet.getColumns();\\n  }\\n\\n  getRows(): Row[] {\\n    return this.dataSet.getRows();\\n  }\\n\\n  selectRow(row: Row) {\\n    this.dataSet.selectRow(row);\\n  }\\n\\n  multipleSelectRow(row: Row) {\\n    this.dataSet.multipleSelectRow(row);\\n  }\\n\\n  onSelectRow(): Observable<any> {\\n    return this.onSelectRowSource.asObservable();\\n  }\\n\\n  onDeselectRow(): Observable<any> {\\n    return this.onDeselectRowSource.asObservable();\\n  }\\n\\n  edit(row: Row) {\\n    row.isInEditing = true;\\n  }\\n\\n  create(row: Row, confirmEmitter: EventEmitter<any>) {\\n    const deferred = new Deferred();\\n    deferred.promise.then((newData) => {\\n      newData = newData ? newData : row.getNewData();\\n      if (deferred.resolve.skipAdd) {\\n        this.createFormShown = false;\\n      } else {\\n        this.source.prepend(newData).then(() => {\\n          this.createFormShown = false;\\n          this.dataSet.createNewRow();\\n        });\\n      }\\n    }).catch((err) => {\\n      // doing nothing\\n    });\\n\\n    if (this.getSetting('add.confirmCreate')) {\\n      confirmEmitter.emit({\\n        newData: row.getNewData(),\\n        source: this.source,\\n        confirm: deferred\\n      });\\n    } else {\\n      deferred.resolve();\\n    }\\n  }\\n\\n  save(row: Row, confirmEmitter: EventEmitter<any>) {\\n    const deferred = new Deferred();\\n    deferred.promise.then((newData) => {\\n      newData = newData ? newData : row.getNewData();\\n      if (deferred.resolve.skipEdit) {\\n        row.isInEditing = false;\\n      } else {\\n        this.source.update(row.getData(), newData).then(() => {\\n          row.isInEditing = false;\\n        });\\n      }\\n    }).catch((err) => {\\n      // doing nothing\\n    });\\n\\n    if (this.getSetting('edit.confirmSave')) {\\n      confirmEmitter.emit({\\n        data: row.getData(),\\n        newData: row.getNewData(),\\n        source: this.source,\\n        confirm: deferred\\n      });\\n    } else {\\n      deferred.resolve();\\n    }\\n  }\\n\\n  delete(row: Row, confirmEmitter: EventEmitter<any>) {\\n    const deferred = new Deferred();\\n    deferred.promise.then(() => {\\n      this.source.remove(row.getData());\\n    }).catch((err) => {\\n      // doing nothing\\n    });\\n\\n    if (this.getSetting('delete.confirmDelete')) {\\n      confirmEmitter.emit({\\n        data: row.getData(),\\n        source: this.source,\\n        confirm: deferred\\n      });\\n    } else {\\n      deferred.resolve();\\n    }\\n  }\\n\\n  processDataChange(changes) {\\n    if (this.shouldProcessChange(changes)) {\\n      this.dataSet.setData(changes.elements);\\n      if (this.getSetting('selectMode') !== 'multi') {\\n        const row = this.determineRowToSelect(changes);\\n\\n        if (row) {\\n          this.onSelectRowSource.next(row);\\n        } else {\\n          this.onDeselectRowSource.next(null);\\n        }\\n      }\\n    }\\n  }\\n\\n  shouldProcessChange(changes): boolean {\\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes.action) !== -1) {\\n      return true;\\n    } else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\\n      return true;\\n    }\\n\\n    return false;\\n  }\\n\\n  /**\\n   * @breaking-change 1.8.0\\n   * Need to add `| null` in return type\\n   *\\n   * TODO: move to selectable? Separate directive\\n   */\\n  determineRowToSelect(changes): Row {\\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\\n      return this.dataSet.select(this.getRowIndexToSelect());\\n    }\\n\\n    if (this.shouldSkipSelection()) {\\n      return null;\\n    }\\n\\n    if (changes.action === 'remove') {\\n      if (changes.elements.length === 0) {\\n        // we have to store which one to select as the data will be reloaded\\n        this.dataSet.willSelectLastRow();\\n      } else {\\n        return this.dataSet.selectPreviousRow();\\n      }\\n    }\\n    if (changes.action === 'append') {\\n      // we have to store which one to select as the data will be reloaded\\n      this.dataSet.willSelectLastRow();\\n    }\\n    if (changes.action === 'add') {\\n      return this.dataSet.selectFirstRow();\\n    }\\n    if (changes.action === 'update') {\\n      return this.dataSet.selectFirstRow();\\n    }\\n    if (changes.action === 'prepend') {\\n      // we have to store which one to select as the data will be reloaded\\n      this.dataSet.willSelectFirstRow();\\n    }\\n    return null;\\n  }\\n\\n  prepareSource(source): DataSource {\\n    const initialSource = this.getInitialSort();\\n    if (initialSource && initialSource.field && initialSource.direction) {\\n      source.setSort([initialSource], false);\\n    }\\n    if (this.getSetting('pager.display') === true) {\\n      source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\\n    }\\n\\n    source.refresh();\\n    return source;\\n  }\\n\\n  getInitialSort() {\\n    const sortConf: any = {};\\n    this.getColumns().forEach((column: Column) => {\\n      if (column.isSortable && column.defaultSortDirection) {\\n        sortConf.field = column.id;\\n        sortConf.direction = column.defaultSortDirection;\\n        sortConf.compare = column.getCompareFunction();\\n      }\\n    });\\n    return sortConf;\\n  }\\n\\n  getSelectedRows(): any[] {\\n    return this.dataSet.getRows()\\n      .filter(r => r.isSelected);\\n  }\\n\\n  selectAllRows(status) {\\n    this.dataSet.getRows()\\n      .forEach(r => r.isSelected = status);\\n  }\\n\\n  getFirstRow(): Row {\\n    return this.dataSet.getFirstRow();\\n  }\\n\\n  getLastRow(): Row {\\n    return this.dataSet.getLastRow();\\n  }\\n\\n  private getSelectionInfo(): { perPage: number; page: number; selectedRowIndex: number; switchPageToSelectedRowPage: boolean } {\\n    const switchPageToSelectedRowPage: boolean = this.getSetting('switchPageToSelectedRowPage');\\n    const selectedRowIndex: number = Number(this.getSetting('selectedRowIndex', 0)) || 0;\\n    const { perPage, page }: { perPage: number; page: number } = this.getSetting('pager');\\n    return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\\n  }\\n\\n  private getRowIndexToSelect(): number {\\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\\n    const dataAmount: number = this.source.count();\\n    /**\\n     * source - contains all table data\\n     * dataSet - contains data for current page\\n     * selectedRowIndex - contains index for data in all data\\n     *\\n     * because of that, we need to count index for a specific row in page\\n     * if\\n     * `switchPageToSelectedRowPage` - we need to change page automatically\\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\\n     *  if we return index witch not points to existing data - no line will be highlighted)\\n     */\\n    return (\\n      switchPageToSelectedRowPage &&\\n      selectedRowIndex < dataAmount &&\\n      selectedRowIndex >= 0\\n    ) ?\\n      selectedRowIndex % perPage :\\n      selectedRowIndex;\\n  }\\n\\n  private getPageToSelect(source: DataSource): number {\\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\\n    let pageToSelect: number = Math.max(1, page);\\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\\n    }\\n    const maxPageAmount: number = Math.ceil(source.count() / perPage);\\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\\n  }\\n\\n  private shouldSkipSelection(): boolean {\\n    /**\\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\\n     *\\n     * Therefore, in order to select a row after some changes,\\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\\n     *\\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\\n     *\\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\\n     * because when < 0 all lines must be deselected\\n     */\\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\\n    return selectedRowIndex < 0;\\n  }\\n}\\n\",\"import { Component, Output, EventEmitter, Input } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class EditCellDefault {\\n  @Input() cell: Cell;\\n  @Input() inputClass = '';\\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\\n  @Output() edited = new EventEmitter<any>();\\n\\n  editedEvent(event) {\\n    this.edited.next(event);\\n    return false;\\n  }\\n\\n  stoppedEditingEvent() {\\n    this.cell.getRow().isInEditing = false;\\n    return false;\\n  }\\n\\n  clickedEvent(event) {\\n    event.stopPropagation();\\n  }\\n}\\n\",\"import {\\n  Component,\\n  ComponentFactoryResolver,\\n  ViewChild,\\n  ViewContainerRef,\\n  SimpleChanges,\\n  OnChanges,\\n  OnDestroy,\\n} from '@angular/core';\\nimport { EditCellDefault } from './edit-cell-default';\\n\\n@Component({\\n  selector: 'table-cell-custom-editor',\\n  template: `\\n    <ng-template #dynamicTarget></ng-template>\\n  `,\\n})\\nexport class CustomEditComponent \\n  extends EditCellDefault \\n  implements OnChanges, OnDestroy {\\n  customComponent;\\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget;\\n\\n  constructor(private resolver: ComponentFactoryResolver) {\\n    super();\\n  }\\n\\n  ngOnChanges(\\n    changes: SimpleChanges\\n  ) {\\n    if (this.cell && !this.customComponent) {\\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\\n\\n      // set @Inputs and @Outputs of custom component\\n      this.customComponent.instance.cell = this.cell;\\n      this.customComponent.instance.inputClass = this.inputClass;\\n      this.customComponent.instance.stoppedEditingEvent.subscribe(() => this.stoppedEditingEvent());\\n      this.customComponent.instance.editedEvent.subscribe((event) => this.editedEvent(event));\\n      this.customComponent.instance.clickedEvent.subscribe((event) => this.clickedEvent(event));\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.customComponent) {\\n      this.customComponent.destroy();\\n    }\\n  }\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Component, Output, EventEmitter, Input } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class DefaultEditorBase implements Ieditor {\\n  @Input() cell: Cell;\\n  @Input() inputClass: string;\\n  @Output() stoppedEditingEvent = new EventEmitter<any>();\\n  @Output() editedEvent = new EventEmitter<any>();\\n  @Output() clickedEvent = new EventEmitter<any>();\\n}\\n\\nexport interface Ieditor {\\n  cell: Cell;\\n  inputClass: string;\\n  stoppedEditingEvent: EventEmitter<any>;\\n  editedEvent: EventEmitter<any>;\\n  clickedEvent: EventEmitter<any>;\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'checkbox-editor',\\n  styleUrls: ['./editor.component.scss'],\\n  template: `\\n    <input [ngClass]=\\\"inputClass\\\"\\n          type=\\\"checkbox\\\"\\n          class=\\\"form-control\\\"\\n          [name]=\\\"cell.getId()\\\"\\n          [disabled]=\\\"!cell.isEditable()\\\"\\n          [checked]=\\\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\\\"\\n          (click)=\\\"clickedEvent.emit($event)\\\"\\n          (change)=\\\"onChange($event)\\\">\\n    `,\\n})\\nexport class CheckboxEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  onChange(event) {\\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\\n  }\\n}\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { CompleterService } from 'ng2-completer';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'completer-editor',\\n  template: `\\n    <ng2-completer [(ngModel)]=\\\"completerStr\\\"\\n                    [dataService]=\\\"cell.getColumn().getConfig().completer.dataService\\\"\\n                    [minSearchLength]=\\\"cell.getColumn().getConfig().completer.minSearchLength || 0\\\"\\n                    [pause]=\\\"cell.getColumn().getConfig().completer.pause || 0\\\"\\n                    [placeholder]=\\\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\\\"\\n                    (selected)=\\\"onEditedCompleter($event)\\\">\\n    </ng2-completer>\\n    `,\\n})\\nexport class CompleterEditorComponent \\nextends DefaultEditorBase implements OnInit {\\n  completerStr: string = '';\\n\\n  constructor(\\n    private completerService: CompleterService\\n  ) {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\\n      const config = this.cell.getColumn().getConfig().completer;\\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\\n      config.dataService.descriptionField(config.descriptionField);\\n    }\\n  }\\n\\n  onEditedCompleter(event: { title: '' }): boolean {\\n    this.cell.newValue = event.title;\\n    return false;\\n  }\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'input-editor',\\n  styleUrls: ['./editor.component.scss'],\\n  template: `\\n    <input [ngClass]=\\\"inputClass\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"cell.newValue\\\"\\n          [name]=\\\"cell.getId()\\\"\\n          [placeholder]=\\\"cell.getTitle()\\\"\\n          [disabled]=\\\"!cell.isEditable()\\\"\\n          (click)=\\\"clickedEvent.emit($event)\\\"\\n          (keydown.enter)=\\\"editedEvent.emit($event)\\\"\\n          (keydown.esc)=\\\"stoppedEditingEvent.emit()\\\">\\n    `,\\n})\\nexport class InputEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'select-editor',\\n  template: `\\n    <select [ngClass]=\\\"inputClass\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"cell.newValue\\\"\\n            [name]=\\\"cell.getId()\\\"\\n            [disabled]=\\\"!cell.isEditable()\\\"\\n            (click)=\\\"clickedEvent.emit($event)\\\"\\n            (keydown.enter)=\\\"editedEvent.emit($event)\\\"\\n            (keydown.esc)=\\\"stoppedEditingEvent.emit()\\\">\\n\\n        <option *ngFor=\\\"let option of cell.getColumn().getConfig()?.list\\\" [value]=\\\"option.value\\\"\\n                [selected]=\\\"option.value === cell.getValue()\\\">{{ option.title }}\\n        </option>\\n    </select>\\n    `,\\n})\\nexport class SelectEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'textarea-editor',\\n  styleUrls: ['./editor.component.scss'],\\n  template: `\\n    <textarea [ngClass]=\\\"inputClass\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"cell.newValue\\\"\\n              [name]=\\\"cell.getId()\\\"\\n              [disabled]=\\\"!cell.isEditable()\\\"\\n              [placeholder]=\\\"cell.getTitle()\\\"\\n              (click)=\\\"clickedEvent.emit($event)\\\"\\n              (keydown.enter)=\\\"editedEvent.emit($event)\\\"\\n              (keydown.esc)=\\\"stoppedEditingEvent.emit()\\\">\\n    </textarea>\\n    `,\\n})\\nexport class TextareaEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n}\\n\",\"<div [ngSwitch]=\\\"getEditorType()\\\">\\n  <select-editor\\n    *ngSwitchCase=\\\"'list'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </select-editor>\\n\\n  <textarea-editor\\n    *ngSwitchCase=\\\"'textarea'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </textarea-editor>\\n\\n  <checkbox-editor\\n    *ngSwitchCase=\\\"'checkbox'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n  >\\n  </checkbox-editor>\\n\\n  <completer-editor *ngSwitchCase=\\\"'completer'\\\" [cell]=\\\"cell\\\">\\n  </completer-editor>\\n\\n  <input-editor\\n    *ngSwitchDefault\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </input-editor>\\n</div>\\n\",\"import { Component } from '@angular/core';\\nimport { EditCellDefault } from './edit-cell-default';\\n\\n@Component({\\n  selector: 'table-cell-default-editor',\\n  templateUrl: './default-edit.component.html'\\n})\\nexport class DefaultEditComponent\\n  extends EditCellDefault {\\n  constructor() {\\n    super();\\n  }\\n\\n  getEditorType(): string {\\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\\n  }\\n}\\n\",\"import { Component, Input, Output, EventEmitter } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  selector: 'table-cell-edit-mode',\\n  template: `\\n      <div [ngSwitch]=\\\"getEditorType()\\\">\\n        <table-cell-custom-editor *ngSwitchCase=\\\"'custom'\\\"\\n                                  [cell]=\\\"cell\\\"\\n                                  [inputClass]=\\\"inputClass\\\"\\n                                  (edited)=\\\"editedEvent($event)\\\">\\n        </table-cell-custom-editor>\\n        <table-cell-default-editor *ngSwitchDefault\\n                                  [cell]=\\\"cell\\\"\\n                                  [inputClass]=\\\"inputClass\\\"\\n                                  (edited)=\\\"editedEvent($event)\\\">\\n        </table-cell-default-editor>\\n      </div>\\n    `,\\n})\\nexport class EditCellComponent {\\n  @Input() cell: Cell;\\n  @Input() inputClass: string = '';\\n  @Output() edited = new EventEmitter<any>();\\n  editedEvent(event): boolean {\\n    this.edited.next(event);\\n    return false;\\n  }\\n\\n  getEditorType(): string {\\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\\n  }\\n}\\n\",\"import {\\n  Component,\\n  Input,\\n  ComponentFactoryResolver,\\n  ViewChild,\\n  ViewContainerRef,\\n  OnInit,\\n  OnDestroy,\\n} from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\nimport { IviewCell } from './view-cell';\\n\\n@Component({\\n  selector: 'custom-view-component',\\n  template: `\\n    <ng-template #dynamicTarget></ng-template>\\n  `,\\n})\\nexport class CustomViewComponent \\nimplements OnInit, OnDestroy {\\n  customComponent;\\n  @Input() cell: Cell;\\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget;\\n\\n  constructor(\\n    private resolver: ComponentFactoryResolver\\n  ) { }\\n\\n  ngOnInit() {\\n    if (this.cell && !this.customComponent) {\\n      this.createCustomComponent();\\n      this.callOnComponentInit();\\n      this.patchInstance();\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.customComponent) {\\n      this.customComponent.destroy();\\n    }\\n  }\\n\\n  protected createCustomComponent() {\\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\\n  }\\n\\n  protected callOnComponentInit() {\\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\\n    // TODO onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\\n    onComponentInitFunction && onComponentInitFunction();\\n  }\\n\\n  protected patchInstance() {\\n    Object.assign(this.customComponent.instance, this.getPatch());\\n  }\\n\\n  protected getPatch(): IviewCell {\\n    return {\\n      value: this.cell.getValue(),\\n      rowData: this.cell.getRow().getData()\\n    }\\n  }\\n}\\n\",\"import {Component, Input, ChangeDetectionStrategy } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  selector: 'table-cell-view-mode',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  template: `\\n    <div [ngSwitch]=\\\"cell.getColumn().type\\\">\\n        <custom-view-component *ngSwitchCase=\\\"'custom'\\\" [cell]=\\\"cell\\\"></custom-view-component>\\n        <div *ngSwitchCase=\\\"'html'\\\" [innerHTML]=\\\"cell.getValue()\\\"></div>\\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\\n    </div>\\n    `,\\n})\\nexport class ViewCellComponent {\\n  @Input() cell: Cell;\\n}\\n\",\"import { Component, Input, Output, EventEmitter } from '@angular/core';\\nimport { Cell } from '../../defines/data-set/cell.define';\\nimport { Row } from '../../defines/data-set/row.define';\\nimport { Grid } from '../../defines/grid.define';\\n\\n@Component({\\n  selector: 'smart-intel-table-cell',\\n  template: `\\n    <table-cell-view-mode *ngIf=\\\"!isInEditing\\\" [cell]=\\\"cell\\\"></table-cell-view-mode>\\n    <table-cell-edit-mode *ngIf=\\\"isInEditing\\\" [cell]=\\\"cell\\\"\\n                          [inputClass]=\\\"inputClass\\\"\\n                          (edited)=\\\"editedEvent($event)\\\">\\n    </table-cell-edit-mode>\\n  `,\\n})\\nexport class CellComponent {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() editConfirm: EventEmitter<any>;\\n  @Input() createConfirm: EventEmitter<any>;\\n  @Input() isNew: boolean;\\n  @Input() cell: Cell;\\n  @Input() inputClass: string = '';\\n  @Input() mode: string = 'inline';\\n  @Input() isInEditing: boolean = false;\\n  @Output() edited = new EventEmitter<any>();\\n\\n  editedEvent(event) {\\n    if (this.isNew) {\\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\\n    } else {\\n      this.grid.save(this.row, this.editConfirm);\\n    }\\n  }\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { Ng2CompleterModule } from 'ng2-completer';\\nimport { CellComponent } from './cell.component';\\nimport { CustomEditComponent } from './cell-edit-mode/custom-edit.component';\\nimport { DefaultEditComponent } from './cell-edit-mode/default-edit.component';\\nimport { EditCellComponent } from './cell-edit-mode/edit-cell.component';\\nimport { CheckboxEditorComponent } from './cell-editors/checkbox-editor.component';\\nimport { CompleterEditorComponent } from './cell-editors/completer-editor.component';\\nimport { InputEditorComponent } from './cell-editors/input-editor.component';\\nimport { SelectEditorComponent } from './cell-editors/select-editor.component';\\nimport { TextareaEditorComponent } from './cell-editors/textarea-editor.component';\\nimport { CustomViewComponent } from './cell-view-mode/custom-view.component';\\nimport { ViewCellComponent } from './cell-view-mode/view-cell.component';\\nimport { EditCellDefault } from './cell-edit-mode/edit-cell-default';\\nimport { DefaultEditorBase } from './cell-editors/default-editor';\\n\\nconst CELL_COMPONENTS = [\\n  CellComponent,\\n  EditCellDefault,\\n  DefaultEditorBase,\\n  CustomEditComponent,\\n  DefaultEditComponent,\\n  EditCellComponent,\\n  CheckboxEditorComponent,\\n  CompleterEditorComponent,\\n  InputEditorComponent,\\n  SelectEditorComponent,\\n  TextareaEditorComponent,\\n  CustomViewComponent,\\n  ViewCellComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    Ng2CompleterModule\\n  ],\\n  declarations: [\\n    ...CELL_COMPONENTS\\n  ],\\n  exports: [\\n    ...CELL_COMPONENTS\\n  ]\\n})\\nexport class CellModule { }\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Subject } from 'rxjs';\\nimport { Observable } from 'rxjs';\\n\\nexport abstract class DataSource {\\n  protected onChangedSource = new Subject<any>();\\n  protected onAddedSource = new Subject<any>();\\n  protected onUpdatedSource = new Subject<any>();\\n  protected onRemovedSource = new Subject<any>();\\n\\n  refresh() {\\n    this.emitOnChanged('refresh');\\n  }\\n\\n  load(data: unknown[]): Promise<any> {\\n    this.emitOnChanged('load');\\n    return Promise.resolve();\\n  }\\n\\n  onChanged(): Observable<any> {\\n    return this.onChangedSource.asObservable();\\n  }\\n\\n  onAdded(): Observable<any> {\\n    return this.onAddedSource.asObservable();\\n  }\\n\\n  onUpdated(): Observable<any> {\\n    return this.onUpdatedSource.asObservable();\\n  }\\n\\n  onRemoved(): Observable<any> {\\n    return this.onRemovedSource.asObservable();\\n  }\\n\\n  prepend(element): Promise<any> {\\n    this.emitOnAdded(element);\\n    this.emitOnChanged('prepend');\\n    return Promise.resolve();\\n  }\\n\\n  append(element): Promise<any> {\\n    this.emitOnAdded(element);\\n    this.emitOnChanged('append');\\n    return Promise.resolve();\\n  }\\n\\n  add(element): Promise<any> {\\n    this.emitOnAdded(element);\\n    this.emitOnChanged('add');\\n    return Promise.resolve();\\n  }\\n\\n  remove(element): Promise<any> {\\n    this.emitOnRemoved(element);\\n    this.emitOnChanged('remove');\\n    return Promise.resolve();\\n  }\\n\\n  update(element, values): Promise<any> {\\n    this.emitOnUpdated(element);\\n    this.emitOnChanged('update');\\n    return Promise.resolve();\\n  }\\n\\n  empty(): Promise<any> {\\n    this.emitOnChanged('empty');\\n    return Promise.resolve();\\n  }\\n\\n  setSort(conf: any[], doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('sort');\\n    }\\n  }\\n\\n  setFilter(conf: any[], andOperator?: boolean, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('filter');\\n    }\\n  }\\n\\n  addFilter(fieldConf: object, andOperator?: boolean, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('filter');\\n    }\\n  }\\n\\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('paging');\\n    }\\n  }\\n\\n  setPage(page: number, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('page');\\n    }\\n  }\\n\\n  protected emitOnRemoved(element) {\\n    this.onRemovedSource.next(element);\\n  }\\n\\n  protected emitOnUpdated(element) {\\n    this.onUpdatedSource.next(element);\\n  }\\n\\n  protected emitOnAdded(element) {\\n    this.onAddedSource.next(element);\\n  }\\n\\n  protected emitOnChanged(action: string) {\\n    this.getElements().then((elements) => this.onChangedSource.next({\\n      action,\\n      elements,\\n      paging: this.getPaging(),\\n      filter: this.getFilter(),\\n      sort: this.getSort()\\n    }));\\n  }\\n\\n  abstract getAll(): Promise<any>;\\n  abstract getElements(): Promise<any>;\\n  abstract getSort();\\n  abstract getFilter();\\n  abstract getPaging();\\n  abstract count(): number;\\n}\\n\",\"import { Output, EventEmitter, Input, Component } from '@angular/core';\\nimport { Column } from '../../defines/data-set/column.define';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class FilterDefault {\\n  @Input() column: Column;\\n  @Input() source: DataSource;\\n  @Input() inputClass = '';\\n  @Output() filter = new EventEmitter<any>();\\n  query = '';\\n\\n  onFilter(query: string) {\\n    this.source.addFilter({\\n      field: this.column.id,\\n      search: query,\\n      filter: this.column.getFilterFunction()\\n    });\\n  }\\n}\\n\",\"import { Input, Output, EventEmitter, OnDestroy, Component } from '@angular/core';\\nimport { Subscription } from 'rxjs';\\nimport { Column } from '../../../defines/data-set/column.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class DefaultFilter\\nimplements Ifilter, OnDestroy {\\n  @Input() query: string;\\n  @Input() inputClass: string;\\n  @Input() column: Column;\\n  @Output() filter = new EventEmitter<string>();\\n  delay = 300;\\n  changesSubscription: Subscription;\\n\\n  ngOnDestroy() {\\n    if (this.changesSubscription) {\\n      this.changesSubscription.unsubscribe();\\n    }\\n  }\\n\\n  setFilter() {\\n    this.filter.emit(this.query);\\n  }\\n}\\n\\nexport interface Ifilter {\\n  delay?: number;\\n  changesSubscription?: Subscription;\\n  query: string;\\n  inputClass: string;\\n  column: Column;\\n  filter: EventEmitter<string>;\\n}\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { UntypedFormControl } from '@angular/forms';\\nimport { DefaultFilter } from './default-filter';\\nimport { debounceTime } from 'rxjs/operators';\\n\\n@Component({\\n  selector: 'checkbox-filter',\\n  template: `\\n    <input type=\\\"checkbox\\\" [formControl]=\\\"inputControl\\\" [ngClass]=\\\"inputClass\\\" class=\\\"form-control\\\">\\n    <a href=\\\"#\\\" *ngIf=\\\"filterActive\\\"\\n                (click)=\\\"resetFilter($event)\\\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\\n  `,\\n})\\nexport class CheckboxFilterComponent \\n  extends DefaultFilter \\n  implements OnInit {\\n  filterActive: boolean = false;\\n  inputControl = new UntypedFormControl();\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    this.changesSubscription = this.inputControl.valueChanges\\n      .pipe(debounceTime(this.delay))\\n      .subscribe((checked: boolean) => {\\n        this.filterActive = true;\\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\\n        this.query = checked ? trueVal : falseVal;\\n        this.setFilter();\\n      });\\n  }\\n\\n  resetFilter(event) {\\n    event.preventDefault();\\n    this.query = '';\\n    this.inputControl.setValue(false, { emitEvent: false });\\n    this.filterActive = false;\\n    this.setFilter();\\n  }\\n}\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { Subject } from 'rxjs';\\nimport { CompleterService } from 'ng2-completer';\\nimport { DefaultFilter } from './default-filter';\\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\\n\\n@Component({\\n  selector: 'completer-filter',\\n  template: `\\n    <ng2-completer [(ngModel)]=\\\"query\\\"\\n                    (ngModelChange)=\\\"inputTextChanged($event)\\\"\\n                    [dataService]=\\\"column.getFilterConfig().completer.dataService\\\"\\n                    [minSearchLength]=\\\"column.getFilterConfig().completer.minSearchLength || 0\\\"\\n                    [pause]=\\\"column.getFilterConfig().completer.pause || 0\\\"\\n                    [placeholder]=\\\"column.getFilterConfig().completer.placeholder || 'Start typing...'\\\"\\n                    (selected)=\\\"completerContent.next($event)\\\">\\n    </ng2-completer>\\n  `,\\n})\\nexport class CompleterFilterComponent \\nextends DefaultFilter implements OnInit {\\n  completerContent = new Subject<any>();\\n\\n  constructor(\\n    private completerService: CompleterService\\n  ) {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    const config = this.column.getFilterConfig().completer;\\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\\n    config.dataService.descriptionField(config.descriptionField);\\n\\n    this.changesSubscription = this.completerContent\\n      .pipe(\\n        map((ev) => (ev && ev.title) || ev || ''),\\n        distinctUntilChanged(),\\n        debounceTime(this.delay)\\n      )\\n      .subscribe((search: string) => {\\n        this.query = search;\\n        this.setFilter();\\n      });\\n  }\\n\\n  inputTextChanged(event: string) {\\n    // workaround to trigger the search event when the home/end buttons are clicked\\n    // when this happens the [(ngModel)]=\\\"query\\\" is set to \\\"\\\" but the (selected) method is not called\\n    // so here it gets called manually\\n    if (event === '') {\\n      this.completerContent.next(event);\\n    }\\n  }\\n}\\n\",\"import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\\nimport { UntypedFormControl } from '@angular/forms';\\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\\nimport { DefaultFilter } from './default-filter';\\n\\n@Component({\\n  selector: 'input-filter',\\n  template: `\\n    <input\\n      [ngClass]=\\\"inputClass\\\"\\n      [formControl]=\\\"inputControl\\\"\\n      class=\\\"form-control\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\"{{ column.title }}\\\"/>\\n  `,\\n})\\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\\n\\n  inputControl = new UntypedFormControl();\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    if (this.query) {\\n      this.inputControl.setValue(this.query);\\n    }\\n    this.inputControl.valueChanges\\n      .pipe(\\n        distinctUntilChanged(),\\n        debounceTime(this.delay),\\n      )\\n      .subscribe((value: string) => {\\n        this.query = this.inputControl.value;\\n        this.setFilter();\\n      });\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.query) {\\n      this.inputControl.setValue(this.query);\\n    }\\n  }\\n}\\n\",\"import { Component, OnInit, ViewChild } from '@angular/core';\\nimport { NgControl } from '@angular/forms';\\nimport { distinctUntilChanged, debounceTime, skip } from 'rxjs/operators';\\nimport { DefaultFilter } from './default-filter';\\n\\n@Component({\\n  selector: 'select-filter',\\n  template: `\\n    <select [ngClass]=\\\"inputClass\\\"\\n            class=\\\"form-control\\\"\\n            #inputControl\\n            [(ngModel)]=\\\"query\\\">\\n\\n        <option value=\\\"\\\">{{ column.getFilterConfig().selectText }}</option>\\n        <option *ngFor=\\\"let option of column.getFilterConfig().list\\\" [value]=\\\"option.value\\\">\\n          {{ option.title }}\\n        </option>\\n    </select>\\n  `,\\n})\\nexport class SelectFilterComponent \\nextends DefaultFilter \\nimplements OnInit {\\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl: NgControl;\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    this.inputControl.valueChanges\\n      .pipe(\\n        skip(1),\\n        distinctUntilChanged(),\\n        debounceTime(this.delay)\\n      )\\n      .subscribe((value: string) => this.setFilter());\\n  }\\n}\\n\",\"import {Component, Input} from '@angular/core';\\nimport {FilterDefault} from \\\"./filter-default\\\";\\n\\n@Component({\\n  selector: 'default-table-filter',\\n  template: `\\n    <ng-container [ngSwitch]=\\\"column.getFilterType()\\\">\\n      <select-filter *ngSwitchCase=\\\"'list'\\\"\\n                      [query]=\\\"query\\\"\\n                      [ngClass]=\\\"inputClass\\\"\\n                      [column]=\\\"column\\\"\\n                      (filter)=\\\"onFilter($event)\\\">\\n      </select-filter>\\n      <checkbox-filter *ngSwitchCase=\\\"'checkbox'\\\"\\n                        [query]=\\\"query\\\"\\n                        [ngClass]=\\\"inputClass\\\"\\n                        [column]=\\\"column\\\"\\n                        (filter)=\\\"onFilter($event)\\\">\\n      </checkbox-filter>\\n      <completer-filter *ngSwitchCase=\\\"'completer'\\\"\\n                        [query]=\\\"query\\\"\\n                        [ngClass]=\\\"inputClass\\\"\\n                        [column]=\\\"column\\\"\\n                        (filter)=\\\"onFilter($event)\\\">\\n      </completer-filter>\\n      <input-filter *ngSwitchDefault\\n                    [query]=\\\"query\\\"\\n                    [ngClass]=\\\"inputClass\\\"\\n                    [column]=\\\"column\\\"\\n                    (filter)=\\\"onFilter($event)\\\">\\n      </input-filter>\\n    </ng-container>\\n  `,\\n})\\nexport class DefaultFilterComponent extends FilterDefault {\\n  @Input() query: string;\\n}\\n\",\"import {\\n  Component,\\n  ComponentFactoryResolver, Input,\\n  OnChanges,\\n  OnDestroy,\\n  SimpleChanges,\\n  ViewChild,\\n  ViewContainerRef\\n} from '@angular/core';\\nimport { FilterDefault } from './filter-default';\\n\\n@Component({\\n  selector: 'custom-table-filter',\\n  template: `<ng-template #dynamicTarget></ng-template>`,\\n})\\nexport class CustomFilterComponent \\nextends FilterDefault \\nimplements OnChanges, OnDestroy {\\n  @Input() query: string;\\n  customComponent;\\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget;\\n\\n  constructor(private resolver: ComponentFactoryResolver) {\\n    super();\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (this.column && !this.customComponent) {\\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\\n\\n      // set @Inputs and @Outputs of custom component\\n      this.customComponent.instance.query = this.query;\\n      this.customComponent.instance.column = this.column;\\n      this.customComponent.instance.source = this.source;\\n      this.customComponent.instance.inputClass = this.inputClass;\\n      this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\\n    }\\n    if (this.customComponent) {\\n      this.customComponent.instance.ngOnChanges(changes);\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.customComponent) {\\n      this.customComponent.destroy();\\n    }\\n  }\\n}\\n\",\"import { Component, OnChanges, SimpleChanges } from '@angular/core';\\nimport { FilterDefault } from './filter-default';\\nimport { Subscription } from 'rxjs';\\n\\n@Component({\\n  selector: 'smart-intel-table-filter',\\n  styleUrls: ['./filter.component.scss'],\\n  template: `\\n      <div class=\\\"smart-table-filter\\\" *ngIf=\\\"column.isFilterable\\\" [ngSwitch]=\\\"column.getFilterType()\\\">\\n        <custom-table-filter *ngSwitchCase=\\\"'custom'\\\"\\n                              [query]=\\\"query\\\"\\n                              [column]=\\\"column\\\"\\n                              [source]=\\\"source\\\"\\n                              [inputClass]=\\\"inputClass\\\"\\n                              (filter)=\\\"onFilter($event)\\\">\\n        </custom-table-filter>\\n        <default-table-filter *ngSwitchDefault\\n                              [query]=\\\"query\\\"\\n                              [column]=\\\"column\\\"\\n                              [source]=\\\"source\\\"\\n                              [inputClass]=\\\"inputClass\\\"\\n                              (filter)=\\\"onFilter($event)\\\">\\n        </default-table-filter>\\n      </div>\\n    `,\\n})\\nexport class FilterComponent \\nextends FilterDefault \\nimplements OnChanges {\\n  query: string = '';\\n  protected dataChangedSub: Subscription;\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.source) {\\n      if (!changes.source.firstChange) {\\n        this.dataChangedSub.unsubscribe();\\n      }\\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\\n        const filterConf = this.source.getFilter();\\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\\n          this.query = '';\\n\\n          // add a check for existing filters an set the query if one exists for this column\\n          // this covers instances where the filter is set by user code while maintaining existing functionality\\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\\n          filterConf.filters.forEach((k, v) => {\\n            if (k.field == this.column.id) {\\n              this.query = k.search;\\n            }\\n          });\\n        }\\n      });\\n    }\\n  }\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\\nimport { Ng2CompleterModule } from 'ng2-completer';\\nimport { FilterComponent } from './filter.component';\\nimport { DefaultFilterComponent } from './default-filter.component';\\nimport { CustomFilterComponent } from './custom-filter.component';\\nimport { CheckboxFilterComponent } from './filter-types/checkbox-filter.component';\\nimport { CompleterFilterComponent } from './filter-types/completer-filter.component';\\nimport { InputFilterComponent } from './filter-types/input-filter.component';\\nimport { SelectFilterComponent } from './filter-types/select-filter.component';\\nimport { DefaultFilter } from './filter-types/default-filter';\\nimport { FilterDefault } from './filter-default';\\n\\nconst FILTER_COMPONENTS = [\\n  FilterDefault,\\n  DefaultFilter,\\n  FilterComponent,\\n  DefaultFilterComponent,\\n  CustomFilterComponent,\\n  CheckboxFilterComponent,\\n  CompleterFilterComponent,\\n  InputFilterComponent,\\n  SelectFilterComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    Ng2CompleterModule\\n  ],\\n  declarations: [\\n    ...FILTER_COMPONENTS\\n  ],\\n  exports: [\\n    ...FILTER_COMPONENTS\\n  ]\\n})\\nexport class FilterModule { }\\n\",\"import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\\nimport { Subscription } from 'rxjs';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\n\\n@Component({\\n  selector: 'smart-intel-table-pager',\\n  styleUrls: ['./pager.component.scss'],\\n  template: `\\n    <nav *ngIf=\\\"shouldShow()\\\" class=\\\"smart-table-pagination-nav\\\">\\n      <ul class=\\\"smart-table-pagination pagination\\\">\\n        <li class=\\\"smart-table-page-item page-item\\\" [ngClass]=\\\"{disabled: getPage() == 1}\\\">\\n          <a class=\\\"smart-table-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"getPage() == 1 ? false : paginate(1)\\\" aria-label=\\\"First\\\">\\n            <span aria-hidden=\\\"true\\\">&laquo;</span>\\n            <span class=\\\"sr-only\\\">First</span>\\n          </a>\\n        </li>\\n        <li class=\\\"smart-table-page-item page-item\\\" [ngClass]=\\\"{disabled: getPage() == 1}\\\">\\n          <a class=\\\"smart-table-page-link page-link page-link-prev\\\" href=\\\"#\\\"\\n             (click)=\\\"getPage() == 1 ? false : prev()\\\" aria-label=\\\"Prev\\\">\\n            <span aria-hidden=\\\"true\\\">&lt;</span>\\n            <span class=\\\"sr-only\\\">Prev</span>\\n          </a>\\n        </li>\\n        <li class=\\\"smart-table-page-item page-item\\\"\\n        [ngClass]=\\\"{active: getPage() == page}\\\" *ngFor=\\\"let page of getPages()\\\">\\n          <span class=\\\"smart-table-page-link page-link\\\"\\n          *ngIf=\\\"getPage() == page\\\">{{ page }} <span class=\\\"sr-only\\\">(current)</span></span>\\n          <a class=\\\"smart-table-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"paginate(page)\\\" *ngIf=\\\"getPage() != page\\\">{{ page }}</a>\\n        </li>\\n\\n        <li class=\\\"smart-table-page-item page-item\\\"\\n            [ngClass]=\\\"{disabled: getPage() == getLast()}\\\">\\n          <a class=\\\"smart-table-page-link page-link page-link-next\\\" href=\\\"#\\\"\\n             (click)=\\\"getPage() == getLast() ? false : next()\\\" aria-label=\\\"Next\\\">\\n            <span aria-hidden=\\\"true\\\">&gt;</span>\\n            <span class=\\\"sr-only\\\">Next</span>\\n          </a>\\n        </li>\\n        \\n        <li class=\\\"smart-table-page-item page-item\\\"\\n        [ngClass]=\\\"{disabled: getPage() == getLast()}\\\">\\n          <a class=\\\"smart-table-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"getPage() == getLast() ? false : paginate(getLast())\\\" aria-label=\\\"Last\\\">\\n            <span aria-hidden=\\\"true\\\">&raquo;</span>\\n            <span class=\\\"sr-only\\\">Last</span>\\n          </a>\\n        </li>\\n      </ul>\\n    </nav>\\n    \\n    <nav *ngIf=\\\"perPageSelect && perPageSelect.length > 0\\\" class=\\\"smart-table-pagination-per-page\\\">\\n      <label for=\\\"per-page\\\">\\n        Per Page:\\n      </label>\\n      <select (change)=\\\"onChangePerPage($event)\\\" [(ngModel)]=\\\"currentPerPage\\\" id=\\\"per-page\\\">\\n        <option *ngFor=\\\"let item of perPageSelect\\\" [value]=\\\"item\\\">{{ item }}</option>\\n      </select>\\n    </nav>\\n  `,\\n})\\nexport class PagerComponent \\nimplements OnChanges {\\n  @Input() source: DataSource;\\n  @Input() perPageSelect = [];\\n  @Output() changePage = new EventEmitter<any>();\\n  currentPerPage;\\n  protected pages: Array<any>;\\n  protected page: number;\\n  protected count: number = 0;\\n  protected perPage: number;\\n  protected dataChangedSub: Subscription;\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.source) {\\n      if (!changes.source.firstChange) {\\n        this.dataChangedSub.unsubscribe();\\n      }\\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\\n        this.page = this.source.getPaging().page;\\n        this.perPage = this.source.getPaging().perPage;\\n        this.currentPerPage = this.perPage;\\n        this.count = this.source.count();\\n        if (this.isPageOutOfBounce()) {\\n          this.source.setPage(--this.page);\\n        }\\n\\n        this.processPageChange(dataChanges);\\n        this.initPages();\\n      });\\n    }\\n  }\\n\\n  /**\\n   * We change the page here depending on the action performed against data source\\n   * if a new element was added to the end of the table - then change the page to the last\\n   * if a new element was added to the beginning of the table - then to the first page\\n   * @param changes\\n   */\\n  processPageChange(changes) {\\n    if (changes['action'] === 'prepend') {\\n      this.source.setPage(1);\\n    }\\n    if (changes['action'] === 'append') {\\n      this.source.setPage(this.getLast());\\n    }\\n  }\\n\\n  shouldShow(): boolean {\\n    return this.source.count() > this.perPage;\\n  }\\n\\n  paginate(page: number): boolean {\\n    this.source.setPage(page);\\n    this.page = page;\\n    this.changePage.emit({ page });\\n    return false;\\n  }\\n\\n  next(): boolean {\\n    return this.paginate(this.getPage() + 1);\\n  }\\n\\n  prev(): boolean {\\n    return this.paginate(this.getPage() - 1);\\n  }\\n\\n  getPage(): number {\\n    return this.page;\\n  }\\n\\n  getPages(): Array<any> {\\n    return this.pages;\\n  }\\n\\n  getLast(): number {\\n    return Math.ceil(this.count / this.perPage);\\n  }\\n\\n  isPageOutOfBounce(): boolean {\\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\\n  }\\n\\n  initPages() {\\n    const pagesCount = this.getLast();\\n    let showPagesCount = 4;\\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\\n    this.pages = [];\\n\\n    if (this.shouldShow()) {\\n\\n      let middleOne = Math.ceil(showPagesCount / 2);\\n      middleOne = this.page >= middleOne ? this.page : middleOne;\\n\\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\\n\\n      const firstOne = lastOne - showPagesCount + 1;\\n\\n      for (let i = firstOne; i <= lastOne; i++) {\\n        this.pages.push(i);\\n      }\\n    }\\n  }\\n\\n  onChangePerPage(event) {\\n    if (this.currentPerPage) {\\n\\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\\n        this.source.getPaging().perPage = null;\\n      } else {\\n        this.source.getPaging().perPage = this.currentPerPage * 1;\\n        this.source.refresh();\\n      }\\n      this.initPages();\\n    }\\n  }\\n\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { PagerComponent } from './pager.component';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule\\n  ],\\n  declarations: [\\n    PagerComponent\\n  ],\\n  exports: [\\n    PagerComponent\\n  ]\\n})\\nexport class PagerModule { }\\n\",\"import { Component, Input, EventEmitter, OnChanges } from '@angular/core';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: 'smart-table-body-create-cancel',\\n  template: `\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-edit-save\\\"\\n        [innerHTML]=\\\"saveButtonContent\\\" (click)=\\\"onSave($event)\\\"></a>\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-edit-cancel\\\"\\n        [innerHTML]=\\\"cancelButtonContent\\\" (click)=\\\"onCancelEdit($event)\\\"></a>\\n  `,\\n})\\nexport class TbodyCreateCancelComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() editConfirm: EventEmitter<any>;\\n  cancelButtonContent: string;\\n  saveButtonContent: string;\\n\\n  onSave(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n\\n    this.grid.save(this.row, this.editConfirm);\\n  }\\n\\n  onCancelEdit(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n\\n    this.row.isInEditing = false;\\n  }\\n\\n  ngOnChanges() {\\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\\n  }\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: 'smart-table-body-edit-delete',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  template: `\\n    <a href=\\\"#\\\" *ngIf=\\\"isActionEdit\\\" class=\\\"smart-table-action smart-table-action-edit-edit\\\"\\n        [innerHTML]=\\\"editRowButtonContent\\\" (click)=\\\"onEdit($event)\\\"></a>\\n    <a href=\\\"#\\\" *ngIf=\\\"isActionDelete\\\" class=\\\"smart-table-action smart-table-action-delete-delete\\\"\\n        [innerHTML]=\\\"deleteRowButtonContent\\\" (click)=\\\"onDelete($event)\\\"></a>\\n  `,\\n})\\nexport class TbodyEditDeleteComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() source: DataSource;\\n  @Input() deleteConfirm: EventEmitter<any>;\\n  @Input() editConfirm: EventEmitter<any>;\\n  @Output() edit = new EventEmitter<any>();\\n  @Output() delete = new EventEmitter<any>();\\n  @Output() editRowSelect = new EventEmitter<any>();\\n\\n  isActionEdit: boolean;\\n  isActionDelete: boolean;\\n  editRowButtonContent: string;\\n  deleteRowButtonContent: string;\\n\\n  onEdit(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n\\n    this.editRowSelect.emit(this.row);\\n\\n    if (this.grid.getSetting('mode') === 'external') {\\n      this.edit.emit({\\n        data: this.row.getData(),\\n        source: this.source,\\n      });\\n    } else {\\n      this.grid.edit(this.row);\\n    }\\n  }\\n\\n  onDelete(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n    if (this.grid.getSetting('mode') === 'external') {\\n      this.delete.emit({\\n        data: this.row.getData(),\\n        source: this.source,\\n      });\\n    } else {\\n      this.grid.delete(this.row, this.deleteConfirm);\\n    }\\n  }\\n\\n  ngOnChanges(){\\n    this.isActionEdit = this.grid.getSetting('actions.edit');\\n    this.isActionDelete = this.grid.getSetting('actions.delete');\\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\\n  }\\n}\\n\",\"import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n    selector: 'smart-table-body-custom',\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    template: `\\n      <a *ngFor=\\\"let action of grid.getSetting('actions.custom')\\\" href=\\\"#\\\"\\n        class=\\\"smart-table-action smart-table-action-custom-custom\\\" \\n        [innerHTML]=\\\"action.title\\\"\\n        (click)=\\\"onCustom(action, $event)\\\"></a>\\n        `\\n})\\nexport class TbodyCustomComponent {\\n    @Input() grid: Grid;\\n    @Input() row: Row;\\n    @Input() source;\\n    @Output() custom = new EventEmitter<any>();\\n\\n    onCustom(action, event) {\\n        event.preventDefault();\\n        event.stopPropagation();\\n\\n        this.custom.emit({\\n            action: action.name,\\n            data: this.row.getData(),\\n            source: this.source\\n        });\\n    }\\n\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { Cell } from '../../defines/data-set/cell.define';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\nimport { Grid } from '../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-body]',\\n  styleUrls: ['./tbody.component.scss'],\\n  templateUrl: './tbody.component.html'\\n})\\nexport class Ng2SmartTableTbodyComponent\\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Input() deleteConfirm: EventEmitter<any>;\\n  @Input() editConfirm: EventEmitter<any>;\\n  @Input() rowClassFunction: (...args) => any; // Function ;\\n  @Output() save = new EventEmitter<any>();\\n  @Output() cancel = new EventEmitter<any>();\\n  @Output() edit = new EventEmitter<any>();\\n  @Output() delete = new EventEmitter<any>();\\n  @Output() custom = new EventEmitter<any>();\\n  @Output() edited = new EventEmitter<any>();\\n  @Output() userSelectRow = new EventEmitter<any>();\\n  @Output() editRowSelect = new EventEmitter<any>();\\n  @Output() multipleSelectRow = new EventEmitter<any>();\\n  @Output() rowHover = new EventEmitter<any>();\\n\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n  mode: string;\\n  editInputClass: string;\\n  isActionAdd: boolean;\\n  isActionEdit: boolean;\\n  isActionDelete: boolean;\\n  noDataMessage: boolean;\\n\\n  get tableColumnsCount() {\\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\\n    return this.grid.getColumns().length + actionColumns;\\n  }\\n\\n  ngOnChanges() {\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.mode = this.grid.getSetting('mode');\\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n    this.isActionAdd = this.grid.getSetting('actions.add');\\n    this.isActionEdit = this.grid.getSetting('actions.edit');\\n    this.isActionDelete = this.grid.getSetting('actions.delete');\\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\\n  }\\n\\n  getVisibleCells(cells: Cell[]): Cell[] {\\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\\n  }\\n}\\n\",\"<tr\\n  *ngFor=\\\"let row of grid.getRows()\\\"\\n  (click)=\\\"userSelectRow.emit(row)\\\"\\n  (mouseover)=\\\"rowHover.emit(row)\\\"\\n  class=\\\"smart-table-row\\\"\\n  [className]=\\\"rowClassFunction(row)\\\"\\n  [ngClass]=\\\"{ selected: row.isSelected }\\\"\\n>\\n  <td\\n    *ngIf=\\\"isMultiSelectVisible\\\"\\n    class=\\\"smart-table-actions smart-table-action-multiple-select\\\"\\n    (click)=\\\"multipleSelectRow.emit(row)\\\"\\n  >\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\" />\\n  </td>\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <smart-intel-table-cell\\n      [cell]=\\\"cell\\\"\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [isNew]=\\\"false\\\"\\n      [mode]=\\\"mode\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [inputClass]=\\\"editInputClass\\\"\\n      [isInEditing]=\\\"row.isInEditing\\\"\\n    >\\n    </smart-intel-table-cell>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { CellModule } from '../cell/cell.module';\\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\\nimport { TbodyCreateCancelComponent } from './cells/create-cancel.component';\\nimport { TbodyEditDeleteComponent } from './cells/edit-delete.component';\\nimport { TbodyCustomComponent } from './cells/custom.component';\\n\\nconst TBODY_COMPONENTS = [\\n  TbodyCreateCancelComponent,\\n  TbodyEditDeleteComponent,\\n  TbodyCustomComponent,\\n  Ng2SmartTableTbodyComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    CellModule\\n  ],\\n  declarations: [\\n    ...TBODY_COMPONENTS\\n  ],\\n  exports: [\\n    ...TBODY_COMPONENTS\\n  ]\\n})\\nexport class TbodyModule { }\\n\",\"import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef, OnChanges } from '@angular/core';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-add-button]',\\n  template: `\\n    <a *ngIf=\\\"isActionAdd\\\" href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-add-add\\\"\\n        [innerHTML]=\\\"addNewButtonContent\\\" (click)=\\\"onAdd($event)\\\"></a>\\n  `,\\n})\\nexport class AddButtonComponent \\nimplements AfterViewInit, OnChanges {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Output() create = new EventEmitter<any>();\\n  isActionAdd: boolean;\\n  addNewButtonContent: string;\\n\\n  constructor(private ref: ElementRef) { }\\n\\n  ngAfterViewInit() {\\n    this.ref.nativeElement.classList.add('smart-table-actions-title', 'smart-table-actions-title-add');\\n  }\\n\\n  ngOnChanges() {\\n    this.isActionAdd = this.grid.getSetting('actions.add');\\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\\n  }\\n\\n  onAdd(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n    if (this.grid.getSetting('mode') === 'external') {\\n      this.create.emit({\\n        source: this.source,\\n      });\\n    } else {\\n      this.grid.createFormShown = true;\\n    }\\n  }\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\\nimport { Column } from '../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-thead-filters-row]',\\n  template: `\\n    <th *ngIf=\\\"isMultiSelectVisible\\\"></th>\\n    <th smart-table-add-button *ngIf=\\\"showActionColumnLeft\\\"\\n                          [grid]=\\\"grid\\\"\\n                          (create)=\\\"create.emit($event)\\\">\\n    </th>\\n    <th *ngFor=\\\"let column of getVisibleColumns(grid.getColumns())\\\" class=\\\"smart-table-th {{ column.id }}\\\">\\n      <smart-intel-table-filter [source]=\\\"source\\\"\\n                              [column]=\\\"column\\\"\\n                              [inputClass]=\\\"filterInputClass\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n      </smart-intel-table-filter>\\n    </th>\\n    <th smart-table-add-button *ngIf=\\\"showActionColumnRight\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [source]=\\\"source\\\"\\n                          (create)=\\\"create.emit($event)\\\">\\n    </th>\\n  `,\\n})\\nexport class TheadFitlersRowComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Output() create = new EventEmitter<any>();\\n  @Output() filter = new EventEmitter<any>();\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n  filterInputClass: string;\\n\\n  ngOnChanges() {\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\\n  }\\n\\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\\n    return (columns || []).filter((column: Column) => !column.hide);\\n  }\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n\\n@Component({\\n  selector: 'ng2-st-actions',\\n  template: `\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-add-create\\\"\\n        [innerHTML]=\\\"createButtonContent\\\"\\n        (click)=\\\"$event.preventDefault();create.emit($event)\\\"></a>\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-add-cancel\\\"\\n        [innerHTML]=\\\"cancelButtonContent\\\"\\n        (click)=\\\"$event.preventDefault();grid.createFormShown = false;\\\"></a>\\n  `,\\n})\\nexport class ActionsComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Output() create = new EventEmitter<any>();\\n\\n  createButtonContent: string;\\n  cancelButtonContent: string;\\n\\n  ngOnChanges() {\\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\\n  }\\n}\\n\",\"import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n\\n@Component({\\n  selector: '[smart-table-thead-form-row]',\\n  template: `\\n      <td *ngIf=\\\"\\\"></td>\\n      <td  *ngIf=\\\"showActionColumnLeft\\\"  class=\\\"smart-table-actions\\\">\\n        <ng2-st-actions [grid]=\\\"grid\\\" (create)=\\\"onCreate($event)\\\"></ng2-st-actions>\\n      </td>\\n      <td *ngFor=\\\"let cell of getVisibleCells(grid.getNewRow().getCells())\\\">\\n        <smart-intel-table-cell [cell]=\\\"cell\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [isNew]=\\\"true\\\"\\n                              [createConfirm]=\\\"createConfirm\\\"\\n                              [inputClass]=\\\"addInputClass\\\"\\n                              [isInEditing]=\\\"grid.getNewRow().isInEditing\\\"\\n                              (edited)=\\\"onCreate($event)\\\">\\n        </smart-intel-table-cell>\\n      </td>\\n      <td  *ngIf=\\\"showActionColumnRight\\\"  class=\\\"smart-table-actions\\\">\\n        <ng2-st-actions [grid]=\\\"grid\\\" (create)=\\\"onCreate($event)\\\"></ng2-st-actions>\\n      </td>\\n  `,\\n})\\nexport class TheadFormRowComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() createConfirm: EventEmitter<any>;\\n  @Output() create = new EventEmitter<any>();\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n  addInputClass: string;\\n\\n  onCreate(event) {\\n    event.stopPropagation();\\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\\n  }\\n\\n  ngOnChanges(){\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n    this.addInputClass = this.grid.getSetting('add.inputClass');\\n  }\\n\\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\\n  }\\n}\\n\",\"import {Component, Input, AfterViewInit, ElementRef, OnChanges} from '@angular/core';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[ng2-st-actions-title]',\\n  template: `\\n    <div class=\\\"smart-table-title\\\">{{ actionsColumnTitle }}</div>\\n  `,\\n})\\nexport class ActionsTitleComponent \\nimplements AfterViewInit, OnChanges {\\n  @Input() grid: Grid;\\n  actionsColumnTitle: string;\\n\\n  constructor(private ref: ElementRef) { }\\n\\n  ngAfterViewInit() {\\n    this.ref.nativeElement.classList.add('smart-table-actions');\\n  }\\n\\n  ngOnChanges() {\\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\\n  }\\n}\\n\",\"import { Component, Input } from '@angular/core';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-checkbox-select-all]',\\n  template: `\\n    <input type=\\\"checkbox\\\" [ngModel]=\\\"isAllSelected\\\">\\n  `,\\n})\\nexport class CheckboxSelectAllComponent {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Input() isAllSelected: boolean;\\n}\\n\",\"import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\\nimport { Subscription } from 'rxjs';\\nimport { Column } from '../../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../../defines/data-source/data-source.define';\\n\\n@Component({\\n  selector: 'smart-intel-table-title',\\n  styleUrls: ['./title.component.scss'],\\n  template: `\\n    <a href=\\\"#\\\" *ngIf=\\\"column.isSortable\\\"\\n                (click)=\\\"_sort($event)\\\"\\n                class=\\\"smart-table-sort-link sort\\\"\\n                [ngClass]=\\\"currentDirection\\\">\\n      {{ column.title }}\\n    </a>\\n    <span class=\\\"smart-table-sort\\\" *ngIf=\\\"!column.isSortable\\\">{{ column.title }}</span>\\n  `,\\n})\\nexport class TitleComponent \\nimplements OnChanges {\\n  currentDirection = '';\\n  @Input() column: Column;\\n  @Input() source: DataSource;\\n  @Output() sort = new EventEmitter<any>();\\n  protected dataChangedSub: Subscription;\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.source) {\\n      if (!changes.source.firstChange) {\\n        this.dataChangedSub.unsubscribe();\\n      }\\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\\n        const sortConf = this.source.getSort();\\n\\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\\n          this.currentDirection = sortConf[0]['direction'];\\n        } else {\\n          this.currentDirection = '';\\n        }\\n\\n        sortConf.forEach((fieldConf) => {\\n\\n        });\\n      });\\n    }\\n  }\\n\\n  _sort(event) {\\n    event.preventDefault();\\n    this.changeSortDirection();\\n    this.source.setSort([\\n      {\\n        field: this.column.id,\\n        direction: this.currentDirection,\\n        compare: this.column.getCompareFunction(),\\n      },\\n    ]);\\n    this.sort.emit(null);\\n  }\\n\\n  changeSortDirection(): string {\\n    if (this.currentDirection) {\\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\\n      this.currentDirection = newDirection;\\n    } else {\\n      this.currentDirection = this.column.sortDirection;\\n    }\\n    return this.currentDirection;\\n  }\\n}\\n\",\"import { Component, Input, Output, EventEmitter } from '@angular/core';\\nimport { Column } from '../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\n\\n@Component({\\n  selector: 'smart-table-column-title',\\n  template: `\\n    <div class=\\\"smart-table-title\\\">\\n      <smart-intel-table-title [source]=\\\"source\\\" [column]=\\\"column\\\" (sort)=\\\"sort.emit($event)\\\"></smart-intel-table-title>\\n    </div>\\n  `,\\n})\\nexport class ColumnTitleComponent {\\n  @Input() column: Column;\\n  @Input() source: DataSource;\\n  @Output() sort = new EventEmitter<any>();\\n\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\\nimport { Column } from '../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-thead-titles-row]',\\n  template: `\\n    <th smart-table-checkbox-select-all *ngIf=\\\"isMultiSelectVisible\\\"\\n                                  [grid]=\\\"grid\\\"\\n                                  [source]=\\\"source\\\"\\n                                  [isAllSelected]=\\\"isAllSelected\\\"\\n                                  (click)=\\\"selectAllRows.emit($event)\\\">\\n    </th>\\n    <th ng2-st-actions-title *ngIf=\\\"showActionColumnLeft\\\" [grid]=\\\"grid\\\"></th>\\n    <th *ngFor=\\\"let column of getVisibleColumns(grid.getColumns())\\\"\\n        class=\\\"smart-table-th {{ column.id }}\\\"\\n        [ngClass]=\\\"column.class\\\"\\n        [style.width]=\\\"column.width\\\">\\n      <smart-table-column-title [source]=\\\"source\\\" [column]=\\\"column\\\" (sort)=\\\"sort.emit($event)\\\"></smart-table-column-title>\\n    </th>\\n    <th ng2-st-actions-title *ngIf=\\\"showActionColumnRight\\\" [grid]=\\\"grid\\\"></th>\\n  `,\\n})\\nexport class TheadTitlesRowComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() isAllSelected: boolean;\\n  @Input() source: DataSource;\\n  @Output() sort = new EventEmitter<any>();\\n  @Output() selectAllRows = new EventEmitter<any>();\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n\\n  ngOnChanges() {\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n  }\\n\\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\\n    return (columns || []).filter((column: Column) => !column.hide);\\n  }\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\nimport { Grid } from '../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-thead]',\\n  templateUrl: './thead.component.html'\\n})\\nexport class Ng2SmartTableTheadComponent\\nimplements OnChanges {\\n    @Input() grid: Grid;\\n    @Input() source: DataSource;\\n    @Input() isAllSelected: boolean;\\n    @Input() createConfirm: EventEmitter<any>;\\n    @Output() sort = new EventEmitter<any>();\\n    @Output() selectAllRows = new EventEmitter<any>();\\n    @Output() create = new EventEmitter<any>();\\n    @Output() filter = new EventEmitter<any>();\\n    isHideHeader: boolean;\\n    isHideSubHeader: boolean;\\n\\n    ngOnChanges() {\\n      this.isHideHeader = this.grid.getSetting('hideHeader');\\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\\n    }\\n}\\n\",\"<tr\\n  smart-table-thead-titles-row\\n  *ngIf=\\\"!isHideHeader\\\"\\n  class=\\\"smart-table-titles\\\"\\n  [grid]=\\\"grid\\\"\\n  [isAllSelected]=\\\"isAllSelected\\\"\\n  [source]=\\\"source\\\"\\n  (sort)=\\\"sort.emit($event)\\\"\\n  (selectAllRows)=\\\"selectAllRows.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-filters-row\\n  *ngIf=\\\"!isHideSubHeader\\\"\\n  class=\\\"smart-table-filters\\\"\\n  [grid]=\\\"grid\\\"\\n  [source]=\\\"source\\\"\\n  (create)=\\\"create.emit($event)\\\"\\n  (filter)=\\\"filter.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-form-row\\n  *ngIf=\\\"grid.createFormShown\\\"\\n  [grid]=\\\"grid\\\"\\n  [createConfirm]=\\\"createConfirm\\\"\\n></tr>\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { FilterModule } from '../filter/filter.module';\\nimport { CellModule } from '../cell/cell.module';\\nimport { Ng2SmartTableTheadComponent } from './thead.component';\\nimport { ActionsComponent } from './cells/actions.component';\\nimport { ActionsTitleComponent } from './cells/actions-title.component';\\nimport { AddButtonComponent } from './cells/add-button.component';\\nimport { CheckboxSelectAllComponent } from './cells/checkbox-select-all.component';\\nimport { ColumnTitleComponent } from './cells/column-title.component';\\nimport { TitleComponent } from './cells/title/title.component';\\nimport { TheadFitlersRowComponent } from './rows/thead-filters-row.component';\\nimport { TheadFormRowComponent } from './rows/thead-form-row.component';\\nimport { TheadTitlesRowComponent } from './rows/thead-titles-row.component';\\n\\nconst THEAD_COMPONENTS = [\\n  ActionsComponent,\\n  ActionsTitleComponent,\\n  AddButtonComponent,\\n  CheckboxSelectAllComponent,\\n  ColumnTitleComponent,\\n  TitleComponent,\\n  TheadFitlersRowComponent,\\n  TheadFormRowComponent,\\n  TheadTitlesRowComponent,\\n  Ng2SmartTableTheadComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    FilterModule,\\n    CellModule\\n  ],\\n  declarations: [\\n    ...THEAD_COMPONENTS\\n  ],\\n  exports: [\\n    ...THEAD_COMPONENTS\\n  ]\\n})\\nexport class TheadModule { }\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nexport const filterValues = (value: string, search: string) => value.toString().toLowerCase().includes(search.toString().toLowerCase());\\n\\nexport class LocalFilter {\\n  static filter(data: unknown[], field: string, search: string, customFilter?: (...args) => unknown): unknown[] {\\n    const filter: (...args) => any = customFilter ? customFilter : filterValues;\\n\\n    return data.filter((el) => {\\n      const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\\n      // return filter.call(null, value, search); // FIXME just fallback dis in case direct call not working\\n      return filter(null, value, search);\\n    });\\n  }\\n}\\n\",\"export class LocalPager {\\n  static paginate(data: unknown[], page: number, perPage: number): unknown[] {\\n    return data.slice(perPage * (page - 1), perPage * page);\\n  }\\n}\\n\",\"export const compareValues = (direction: number, a: number, b: number) => {\\n  if (a < b) {\\n    return -1 * direction;\\n  }\\n  if (a > b) {\\n    return direction;\\n  }\\n  return 0;\\n};\\n\\nexport class LocalSorter {\\n  static sort(data: unknown[], field: string, direction: string, customCompare?: (...args) => number): unknown[] {\\n    const dir: number = (direction === 'asc') ? 1 : -1;\\n    const compare: (...args) => number = customCompare ? customCompare : compareValues;\\n\\n    // return data.sort((a, b) => compare.call(null, dir, a[field], b[field])); // FIXME fallback to dis in cas direct call fails\\n    return data.sort((a, b) => compare(null, dir, a[field], b[field]));\\n  }\\n}\\n\",\"import { deepExtend } from '../../helpers.define';\\nimport { DataSource } from '../data-source.define';\\nimport { LocalFilter } from './loca-data-filter.define';\\nimport { LocalPager } from './local-data-pager.define';\\nimport { LocalSorter } from './local-data-sorter.define';\\n\\n/* eslint-disable @typescript-eslint/no-unsafe-return */\\nexport class LocalDataSource\\n  extends DataSource {\\n  protected data = [];\\n  protected filteredAndSorted = [];\\n  protected sortConf = [];\\n  protected filterConf: any = {\\n    filters: [],\\n    andOperator: true\\n  };\\n  protected pagingConf: any = {};\\n\\n  constructor(data = []) {\\n    super();\\n    this.data = data;\\n  }\\n\\n  load(data: unknown[]) {\\n    this.data = data;\\n    return super.load(data);\\n  }\\n\\n  prepend(element) {\\n    this.reset(true);\\n\\n    this.data.unshift(element);\\n    return super.prepend(element);\\n  }\\n\\n  append(element) {\\n    this.reset(true);\\n\\n    this.data.push(element);\\n    return super.append(element);\\n  }\\n\\n  add(element) {\\n    this.data.push(element);\\n\\n    return super.add(element);\\n  }\\n\\n  remove(element) {\\n    this.data = this.data.filter(el => el !== element);\\n\\n    return super.remove(element);\\n  }\\n\\n  update(element, values) {\\n    return new Promise((resolve, reject) => {\\n      this.find(element).then((found) => {\\n        found = deepExtend(found, values);\\n        super.update(found, values).then(resolve).catch(reject);\\n      }).catch(reject);\\n    });\\n  }\\n\\n  find(element) {\\n    const found = this.data.find(el => el === element);\\n    if (found) {\\n      return Promise.resolve(found);\\n    }\\n\\n    return Promise.reject(new Error('Element was not found in the dataset'));\\n  }\\n\\n  getElements() {\\n    const data = this.data.slice(0);\\n    return Promise.resolve(this.prepareData(data));\\n  }\\n\\n  getFilteredAndSorted() {\\n    const data = this.data.slice(0);\\n    this.prepareData(data);\\n    return Promise.resolve(this.filteredAndSorted);\\n  }\\n\\n  getAll() {\\n    const data = this.data.slice(0);\\n    return Promise.resolve(data);\\n  }\\n\\n  reset(silent = false) {\\n    if (silent) {\\n      this.filterConf = {\\n        filters: [],\\n        andOperator: true\\n      };\\n      this.sortConf = [];\\n      this.pagingConf.page = 1;\\n    } else {\\n      this.setFilter([], true, false);\\n      this.setSort([], false);\\n      this.setPage(1);\\n    }\\n  }\\n\\n  empty() {\\n    this.data = [];\\n\\n    return super.empty();\\n  }\\n\\n  count(): number {\\n    return this.filteredAndSorted.length;\\n  }\\n\\n  /**\\n   *\\n   * Array of conf objects\\n   * [\\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\\n   * ]\\n   *\\n   * @param conf\\n   * @param doEmit\\n   * @returns\\n   */\\n  setSort(conf: any[], doEmit = true): LocalDataSource {\\n    if (conf !== null) {\\n      conf.forEach((fieldConf) => {\\n        if (!fieldConf.field || typeof fieldConf.direction === 'undefined') {\\n          throw new Error('Sort configuration object is not valid');\\n        }\\n      });\\n      this.sortConf = conf;\\n    }\\n\\n    super.setSort(conf, doEmit);\\n    return this;\\n  }\\n\\n  /**\\n   *\\n   * Array of conf objects\\n   * [\\n   *  {field: string, search: string, filter: Function|null},\\n   * ]\\n   *\\n   * @param conf\\n   * @param andOperator\\n   * @param doEmit\\n   * @returns\\n   */\\n  setFilter(conf: any[], andOperator = true, doEmit = true): LocalDataSource {\\n    if (conf && conf.length > 0) {\\n      conf.forEach((fieldConf) => {\\n        this.addFilter(fieldConf, andOperator, false);\\n      });\\n    } else {\\n      this.filterConf = {\\n        filters: [],\\n        andOperator: true\\n      };\\n    }\\n    this.filterConf.andOperator = andOperator;\\n    this.pagingConf.page = 1;\\n\\n    super.setFilter(conf, andOperator, doEmit);\\n    return this;\\n  }\\n\\n  addFilter(fieldConf: any, andOperator = true, doEmit: boolean = true): LocalDataSource {\\n    if (!fieldConf.field || typeof fieldConf.search === 'undefined') {\\n      throw new Error('Filter configuration object is not valid');\\n    }\\n\\n    let found = false;\\n    this.filterConf.filters.forEach((currentFieldConf: any, index: any) => {\\n      if (currentFieldConf.field === fieldConf.field) {\\n        this.filterConf.filters[index] = fieldConf;\\n        found = true;\\n      }\\n    });\\n    if (!found) {\\n      this.filterConf.filters.push(fieldConf);\\n    }\\n    this.filterConf.andOperator = andOperator;\\n    super.addFilter(fieldConf, andOperator, doEmit);\\n    return this;\\n  }\\n\\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\\n    this.pagingConf.page = page;\\n    this.pagingConf.perPage = perPage;\\n\\n    super.setPaging(page, perPage, doEmit);\\n    return this;\\n  }\\n\\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\\n    this.pagingConf.page = page;\\n    super.setPage(page, doEmit);\\n    return this;\\n  }\\n\\n  getSort() {\\n    return this.sortConf;\\n  }\\n\\n  getFilter() {\\n    return this.filterConf;\\n  }\\n\\n  getPaging() {\\n    return this.pagingConf;\\n  }\\n\\n  protected prepareData(data: unknown[]) {\\n    data = this.filter(data);\\n    data = this.sort(data);\\n    this.filteredAndSorted = data.slice(0);\\n    return this.paginate(data);\\n  }\\n\\n  protected sort(data: unknown[]) {\\n    if (this.sortConf) {\\n      this.sortConf.forEach((fieldConf) => {\\n        data = LocalSorter\\n          .sort(data, fieldConf.field, fieldConf.direction, fieldConf.compare);\\n      });\\n    }\\n    return data;\\n  }\\n\\n  // TODO: refactor?\\n  protected filter(data: unknown[]) {\\n    if (this.filterConf.filters) {\\n      if (this.filterConf.andOperator) {\\n        this.filterConf.filters.forEach((fieldConf) => {\\n          if (fieldConf.search.length > 0) {\\n            data = LocalFilter\\n              .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter);\\n          }\\n        });\\n      } else {\\n        let mergedData = [];\\n        this.filterConf.filters.forEach((fieldConf) => {\\n          if (fieldConf.search.length > 0) {\\n            mergedData = mergedData.concat(LocalFilter\\n              .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter));\\n          }\\n        });\\n        // remove non unique items\\n        data = mergedData.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\\n      }\\n    }\\n    return data;\\n  }\\n\\n  protected paginate(data: unknown[]) {\\n    if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\\n      data = LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\\n    }\\n    return data;\\n  }\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\n/* eslint-disable @typescript-eslint/no-unsafe-return */\\nimport { Component, Input, Output, SimpleChange, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\\nimport { Subject, Subscription } from 'rxjs';\\nimport { takeUntil } from 'rxjs/operators';\\nimport { Row } from './defines/data-set/row.define';\\nimport { DataSource } from './defines/data-source/data-source.define';\\nimport { LocalDataSource } from './defines/data-source/local-data-source/local-data-source.define';\\nimport { Grid } from './defines/grid.define';\\nimport { deepExtend, getPageForRowIndex } from './defines/helpers.define';\\n\\n@Component({\\n  selector: 'smart-intel-table',\\n  styleUrls: ['./smart-intel-table.component.scss'],\\n  templateUrl: './smart-intel-table.component.html'\\n})\\nexport class SmartIntelTableComponent\\nimplements OnChanges, OnDestroy {\\n  @Input() source;\\n  @Input() settings = {};\\n  @Output() rowSelect = new EventEmitter<any>();\\n  @Output() rowDeselect = new EventEmitter<any>();\\n  @Output() userRowSelect = new EventEmitter<any>();\\n  @Output() delete = new EventEmitter<any>();\\n  @Output() edit = new EventEmitter<any>();\\n  @Output() create = new EventEmitter<any>();\\n  @Output() custom = new EventEmitter<any>();\\n  @Output() deleteConfirm = new EventEmitter<any>();\\n  @Output() editConfirm = new EventEmitter<any>();\\n  @Output() createConfirm = new EventEmitter<any>();\\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\\n  tableClass: string;\\n  tableId: string;\\n  perPageSelect;\\n  isHideHeader: boolean;\\n  isHideSubHeader: boolean;\\n  isPagerDisplay: boolean;\\n  rowClassFunction: () => any;\\n  grid: Grid;\\n  defaultSettings = {\\n    mode: 'inline', // inline|external|click-to-edit\\n    selectMode: 'single', // single|multi\\n    /**\\n     * Points to an element in all data\\n     *\\n     * when < 0 all lines must be deselected\\n     */\\n    selectedRowIndex: 0,\\n    switchPageToSelectedRowPage: false,\\n    hideHeader: false,\\n    hideSubHeader: false,\\n    actions: {\\n      columnTitle: 'Actions',\\n      add: true,\\n      edit: true,\\n      delete: true,\\n      custom: [],\\n      position: 'left' // left|right\\n    },\\n    filter: {\\n      inputClass: ''\\n    },\\n    edit: {\\n      inputClass: '',\\n      editButtonContent: 'Edit',\\n      saveButtonContent: 'Update',\\n      cancelButtonContent: 'Cancel',\\n      confirmSave: false\\n    },\\n    add: {\\n      inputClass: '',\\n      addButtonContent: 'Add New',\\n      createButtonContent: 'Create',\\n      cancelButtonContent: 'Cancel',\\n      confirmCreate: false\\n    },\\n    delete: {\\n      deleteButtonContent: 'Delete',\\n      confirmDelete: false\\n    },\\n    attr: {\\n      id: '',\\n      class: ''\\n    },\\n    noDataMessage: 'No data found',\\n    columns: {},\\n    pager: {\\n      display: true,\\n      page: 1,\\n      perPage: 10\\n    },\\n    rowClassFunction: () => ''\\n  };\\n  isAllSelected = false;\\n  private onSelectRowSubscription: Subscription;\\n  private onDeselectRowSubscription: Subscription;\\n  private destroyed$: Subject<void> = new Subject<void>();\\n\\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\\n    if (this.grid) {\\n      if (changes.settings) {\\n        this.grid.setSettings(this.prepareSettings());\\n      }\\n      if (changes.source) {\\n        this.source = this.prepareSource();\\n        this.grid.setSource(this.source);\\n      }\\n    } else {\\n      this.initGrid();\\n    }\\n    this.tableId = this.grid.getSetting('attr.id');\\n    this.tableClass = this.grid.getSetting('attr.class');\\n    this.isHideHeader = this.grid.getSetting('hideHeader');\\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.destroyed$.next();\\n  }\\n\\n  selectRow(index: number, switchPageToSelectedRowPage: boolean = this.grid.getSetting('switchPageToSelectedRowPage')): void {\\n    if (!this.grid) {\\n      return;\\n    }\\n    this.grid.settings.selectedRowIndex = index;\\n    if (this.isIndexOutOfRange(index)) {\\n      // we need to deselect all rows if we got an incorrect index\\n      this.deselectAllRows();\\n      return;\\n    }\\n\\n    if (switchPageToSelectedRowPage) {\\n      const source: DataSource = this.source;\\n      const paging: { page: number; perPage: number } = source.getPaging();\\n      const page: number = getPageForRowIndex(index, paging.perPage);\\n      index %= paging.perPage;\\n      this.grid.settings.selectedRowIndex = index;\\n\\n      if (page !== paging.page) {\\n        source.setPage(page);\\n        return;\\n      }\\n    }\\n\\n    const row: Row = this.grid.getRows()[index];\\n    if (row) {\\n      this.onSelectRow(row);\\n    } else {\\n      // we need to deselect all rows if we got an incorrect index\\n      this.deselectAllRows();\\n    }\\n  }\\n\\n  editRowSelect(row: Row) {\\n    if (this.grid.getSetting('selectMode') === 'multi') {\\n      this.onMultipleSelectRow(row);\\n    } else {\\n      this.onSelectRow(row);\\n    }\\n  }\\n\\n  onUserSelectRow(row: Row) {\\n    if (this.grid.getSetting('selectMode') !== 'multi') {\\n      this.grid.selectRow(row);\\n      this.emitUserSelectRow(row);\\n      this.emitSelectRow(row);\\n    }\\n  }\\n\\n  onRowHover(row: Row) {\\n    this.rowHover.emit(row);\\n  }\\n\\n  multipleSelectRow(row: Row) {\\n    this.grid.multipleSelectRow(row);\\n    this.emitUserSelectRow(row);\\n    this.emitSelectRow(row);\\n  }\\n\\n  onSelectAllRows($event) {\\n    this.isAllSelected = !this.isAllSelected;\\n    this.grid.selectAllRows(this.isAllSelected);\\n\\n    this.emitUserSelectRow(null);\\n    this.emitSelectRow(null);\\n  }\\n\\n  onSelectRow(row: Row) {\\n    this.grid.selectRow(row);\\n    this.emitSelectRow(row);\\n  }\\n\\n  onMultipleSelectRow(row: Row) {\\n    this.emitSelectRow(row);\\n  }\\n\\n  initGrid() {\\n    this.source = this.prepareSource();\\n    this.grid = new Grid(this.source, this.prepareSettings());\\n\\n    this.subscribeToOnSelectRow();\\n    this.subscribeToOnDeselectRow();\\n  }\\n\\n  prepareSource(): DataSource {\\n    if (this.source instanceof DataSource) {\\n      return this.source;\\n    } else if (this.source instanceof Array) {\\n      return new LocalDataSource(this.source);\\n    }\\n\\n    return new LocalDataSource();\\n  }\\n\\n  prepareSettings() {\\n    return deepExtend({}, this.defaultSettings, this.settings);\\n  }\\n\\n  changePage($event) {\\n    this.resetAllSelector();\\n  }\\n\\n  sort($event) {\\n    this.resetAllSelector();\\n  }\\n\\n  filter($event) {\\n    this.resetAllSelector();\\n  }\\n\\n  private deselectAllRows(): void {\\n    this.grid.dataSet.deselectAll();\\n    this.emitDeselectRow(null);\\n  }\\n\\n\\n  private resetAllSelector() {\\n    this.isAllSelected = false;\\n  }\\n\\n  private emitUserSelectRow(row: Row) {\\n    const selectedRows = this.grid.getSelectedRows();\\n\\n    this.userRowSelect.emit({\\n      data: row ? row.getData() : null,\\n      isSelected: row ? row.getIsSelected() : null,\\n      source: this.source,\\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : []\\n    });\\n  }\\n\\n  private emitSelectRow(row: Row) {\\n    const data = {\\n      data: row ? row.getData() : null,\\n      isSelected: row ? row.getIsSelected() : null,\\n      source: this.source\\n    };\\n    this.rowSelect.emit(data);\\n    if (!row?.isSelected) {\\n      this.rowDeselect.emit(data);\\n    }\\n  }\\n\\n  private emitDeselectRow(row: Row): void {\\n    this.rowDeselect.emit({\\n      data: row ? row.getData() : null,\\n      isSelected: row ? row.getIsSelected() : null,\\n      source: this.source\\n    });\\n  }\\n\\n  private isIndexOutOfRange(index: number): boolean {\\n    const dataAmount: number = this.source?.count();\\n    return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\\n  }\\n\\n  private subscribeToOnSelectRow(): void {\\n    if (this.onSelectRowSubscription) {\\n      this.onSelectRowSubscription.unsubscribe();\\n    }\\n    this.onSelectRowSubscription = this.grid.onSelectRow()\\n      .pipe(takeUntil(this.destroyed$))\\n      .subscribe((row) => {\\n        this.emitSelectRow(row);\\n      });\\n  }\\n\\n  private subscribeToOnDeselectRow(): void {\\n    if (this.onDeselectRowSubscription) {\\n      this.onDeselectRowSubscription.unsubscribe();\\n    }\\n    this.onDeselectRowSubscription = this.grid.onDeselectRow()\\n      .pipe(takeUntil(this.destroyed$))\\n      .subscribe((row) => {\\n        this.emitDeselectRow(row);\\n      });\\n  }\\n}\\n\",\"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n  <thead\\n    smart-table-thead\\n    *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n    [grid]=\\\"grid\\\"\\n    [isAllSelected]=\\\"isAllSelected\\\"\\n    [source]=\\\"source\\\"\\n    [createConfirm]=\\\"createConfirm\\\"\\n    (create)=\\\"create.emit($event)\\\"\\n    (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n    (sort)=\\\"sort($event)\\\"\\n    (filter)=\\\"filter($event)\\\"\\n  ></thead>\\n\\n  <tbody\\n    smart-table-body\\n    [grid]=\\\"grid\\\"\\n    [source]=\\\"source\\\"\\n    [deleteConfirm]=\\\"deleteConfirm\\\"\\n    [editConfirm]=\\\"editConfirm\\\"\\n    [rowClassFunction]=\\\"rowClassFunction\\\"\\n    (edit)=\\\"edit.emit($event)\\\"\\n    (delete)=\\\"delete.emit($event)\\\"\\n    (custom)=\\\"custom.emit($event)\\\"\\n    (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n    (editRowSelect)=\\\"editRowSelect($event)\\\"\\n    (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n    (rowHover)=\\\"onRowHover($event)\\\"\\n  ></tbody>\\n</table>\\n\\n<smart-intel-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</smart-intel-table-pager>\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\\nimport { CellModule } from './components/cell/cell.module';\\nimport { FilterModule } from './components/filter/filter.module';\\nimport { PagerModule } from './components/pager/pager.module';\\nimport { TbodyModule } from './components/tbody/tbody.module';\\nimport { TheadModule } from './components/thead/thead.module';\\nimport { SmartIntelTableComponent } from './smart-intel-table.component';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    CellModule,\\n    FilterModule,\\n    PagerModule,\\n    TbodyModule,\\n    TheadModule\\n  ],\\n  declarations: [\\n    SmartIntelTableComponent\\n  ],\\n  exports: [\\n    SmartIntelTableComponent\\n  ]\\n})\\nexport class SmartIntelTableModule {\\n}\\n\",\"export class ServerSourceConf {\\n  protected static readonly sortFieldKey = '_sort';\\n  protected static readonly sortDirKey = '_order';\\n  protected static readonly pagerPageKey = '_page';\\n  protected static readonly pagerLimitKey = '_limit';\\n  protected static readonly filterFieldKey = '#field#_like';\\n  protected static readonly totalKey = 'x-total-count';\\n  protected static readonly dataKey = '';\\n  endPoint: string;\\n  sortFieldKey: string;\\n  sortDirKey: string;\\n  pagerPageKey: string;\\n  pagerLimitKey: string;\\n  filterFieldKey: string;\\n  totalKey: string;\\n  dataKey: string;\\n\\n  constructor({ endPoint = '',\\n    sortFieldKey = '',\\n    sortDirKey = '',\\n    pagerPageKey = '',\\n    pagerLimitKey = '',\\n    filterFieldKey = '',\\n    totalKey = '',\\n    dataKey = ''\\n  } = {}) {\\n    this.endPoint = endPoint ? endPoint : '';\\n\\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.sortFieldKey;\\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.sortDirKey;\\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.pagerPageKey;\\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.pagerLimitKey;\\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.filterFieldKey;\\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.totalKey;\\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.dataKey;\\n  }\\n}\\n\",\"import { HttpClient, HttpParams } from '@angular/common/http';\\nimport { Observable, lastValueFrom } from 'rxjs';\\nimport { map } from 'rxjs/operators';\\nimport { getDeepFromObject } from '../../helpers.define';\\nimport { LocalDataSource } from '../local-data-source/local-data-source.define';\\nimport { ServerSourceConf } from './server-data-source.conf';\\n\\nexport class ServerDataSource\\n  extends LocalDataSource {\\n  protected conf: ServerSourceConf;\\n  protected lastRequestCount = 0;\\n\\n  constructor(\\n    protected http: HttpClient,\\n    conf: ServerSourceConf | object = {}) {\\n    super();\\n\\n    this.conf = new ServerSourceConf(conf);\\n\\n    if (!this.conf.endPoint) {\\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\\n    }\\n  }\\n\\n  count(): number {\\n    return this.lastRequestCount;\\n  }\\n\\n  getElements():Promise<any> {\\n    /** const observer$ = this.requestElements()\\n    .pipe(map(res => {\\n      this.lastRequestCount = this.extractTotalFromResponse(res);\\n      this.data = this.extractDataFromResponse(res);\\n      return this.data;\\n    }));\\n    return lastValueFrom(observer$);*/\\n    return this.requestElements()\\n      .pipe(map(res => {\\n        this.lastRequestCount = this.extractTotalFromResponse(res);\\n        this.data = this.extractDataFromResponse(res);\\n        return this.data;\\n      })).toPromise(); // TODO dis is deprecated\\n  }\\n\\n  /**\\n   * Extracts array of data from server response\\n   *\\n   * @param res\\n   * @returns\\n   */\\n  protected extractDataFromResponse(res): any[] {\\n    const rawData = res.body;\\n    const data = Boolean(this.conf.dataKey) ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\\n\\n    if (data instanceof Array) {\\n      return data;\\n    }\\n\\n    throw new Error(`Data must be an array.\\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\\n  }\\n\\n  /**\\n   * Extracts total rows count from the server response\\n   * Looks for the count in the heders first, then in the response body\\n   *\\n   * @param res\\n   * @returns\\n   */\\n  protected extractTotalFromResponse(res): number {\\n    if (res.headers.has(this.conf.totalKey)) {\\n      return Number(res.headers.get(this.conf.totalKey));\\n    } else {\\n      const rawData = res.body;\\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\\n    }\\n  }\\n\\n  protected requestElements(): Observable<any> {\\n    const httpParams = this.createRequesParams();\\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\\n  }\\n\\n  protected createRequesParams(): HttpParams {\\n    let httpParams = new HttpParams();\\n\\n    httpParams = this.addSortRequestParams(httpParams);\\n    httpParams = this.addFilterRequestParams(httpParams);\\n    return this.addPagerRequestParams(httpParams);\\n  }\\n\\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\\n    if (this.sortConf) {\\n      this.sortConf.forEach((fieldConf) => {\\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\\n      });\\n    }\\n\\n    return httpParams;\\n  }\\n\\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\\n    if (this.filterConf.filters) {\\n      this.filterConf.filters.forEach((fieldConf) => {\\n        if (fieldConf.search) {\\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf.field), fieldConf.search);\\n        }\\n      });\\n    }\\n\\n    return httpParams;\\n  }\\n\\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\\n    if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\\n    }\\n\\n    return httpParams;\\n  }\\n}\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"i1\",\"_c0\",\"_c1\"],\"mappings\":\"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\"}","type":"asset"}],"fesm2015":[{"exports":["Cell","DefaultEditorBase","DefaultFilter","LocalDataSource","ServerDataSource","SmartIntelTableComponent","SmartIntelTableModule"],"facadeModuleId":"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/smart-intel-table.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell-default.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/custom-edit.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/default-editor.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/checkbox-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/completer-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/input-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/select-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/textarea-editor.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/default-edit.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/custom-view.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/view-cell.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-default.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/default-filter.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/checkbox-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/completer-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/input-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/select-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/default-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/custom-filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/create-cancel.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/edit-delete.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/custom.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/add-button.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-filters-row.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-form-row.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions-title.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/checkbox-select-all.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/title/title.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/column-title.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-titles-row.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/data-source.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/helpers.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/loca-data-filter.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-pager.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-sorter.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-source.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/column.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/cell.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/row.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/data-set.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/grid.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.component.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.module.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.conf.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.define.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/public-api.mjs","/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/smart-intel-table.mjs"],"name":"smart-intel-table","type":"chunk","dynamicImports":[],"fileName":"smart-intel-table.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["EventEmitter","*","Component","Input","Output","ViewContainerRef","ViewChild","ChangeDetectionStrategy","NgModule"],"@angular/common":["*","CommonModule"],"@angular/forms":["*","FormsModule","UntypedFormControl","NgControl","ReactiveFormsModule"],"ng2-completer":["*","Ng2CompleterModule"],"rxjs/operators":["debounceTime","map","distinctUntilChanged","skip","takeUntil"],"rxjs":["Subject"],"lodash":["cloneDeep"],"@angular/common/http":["HttpParams"]},"imports":["@angular/core","@angular/common","@angular/forms","ng2-completer","rxjs/operators","rxjs","lodash","@angular/common/http"],"modules":{"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell-default.mjs":{"code":"class EditCellDefault {\n    constructor() {\n        this.inputClass = '';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    stoppedEditingEvent() {\n        this.cell.getRow().isInEditing = false;\n        return false;\n    }\n    clickedEvent(event) {\n        event.stopPropagation();\n    }\n}\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) { return new (t || EditCellDefault)(); };\nEditCellDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellDefault, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 0, vars: 0, template: function EditCellDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellDefault, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] });\n})();","originalLength":3396,"removedExports":[],"renderedExports":["EditCellDefault"],"renderedLength":1255},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/custom-edit.component.mjs":{"code":"const _c0$c = [\"dynamicTarget\"];\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomEditComponent extends EditCellDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.cell && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.cell = this.cell;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.stoppedEditingEvent.subscribe(() => this.stoppedEditingEvent());\n            this.customComponent.instance.editedEvent.subscribe((event) => this.editedEvent(event));\n            this.customComponent.instance.clickedEvent.subscribe((event) => this.clickedEvent(event));\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) { return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomEditComponent, selectors: [[\"table-cell-custom-editor\"]], viewQuery: function CustomEditComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$c, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n        }\n    }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomEditComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-custom-editor',\n                    template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n                }]\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] });\n})();","originalLength":6939,"removedExports":[],"renderedExports":["CustomEditComponent"],"renderedLength":2674},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/default-editor.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DefaultEditorBase {\n    constructor() {\n        this.stoppedEditingEvent = new EventEmitter();\n        this.editedEvent = new EventEmitter();\n        this.clickedEvent = new EventEmitter();\n    }\n}\nDefaultEditorBase.ɵfac = function DefaultEditorBase_Factory(t) { return new (t || DefaultEditorBase)(); };\nDefaultEditorBase.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditorBase, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { stoppedEditingEvent: \"stoppedEditingEvent\", editedEvent: \"editedEvent\", clickedEvent: \"clickedEvent\" }, decls: 0, vars: 0, template: function DefaultEditorBase_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditorBase, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], stoppedEditingEvent: [{\n                type: Output\n            }], editedEvent: [{\n                type: Output\n            }], clickedEvent: [{\n                type: Output\n            }] });\n})();","originalLength":3304,"removedExports":[],"renderedExports":["DefaultEditorBase"],"renderedLength":1299},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/checkbox-editor.component.mjs":{"code":"class CheckboxEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n    onChange(event) {\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n}\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) { return new (t || CheckboxEditorComponent)(); };\nCheckboxEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxEditorComponent, selectors: [[\"checkbox-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 4, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]], template: function CheckboxEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"input\", 0);\n            i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) { return ctx.onChange($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            let tmp_3_0;\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n        }\n    }, dependencies: [i1.NgClass], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxEditorComponent, [{\n            type: Component,\n            args: [{ selector: 'checkbox-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          type=\"checkbox\"\n          class=\"form-control\"\n          [name]=\"cell.getId()\"\n          [disabled]=\"!cell.isEditable()\"\n          [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n          (click)=\"clickedEvent.emit($event)\"\n          (change)=\"onChange($event)\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], function () { return []; }, null);\n})();","originalLength":5371,"removedExports":[],"renderedExports":["CheckboxEditorComponent"],"renderedLength":2496},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/completer-editor.component.mjs":{"code":"class CompleterEditorComponent extends DefaultEditorBase {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerStr = '';\n    }\n    ngOnInit() {\n        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\n            const config = this.cell.getColumn().getConfig().completer;\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n            config.dataService.descriptionField(config.descriptionField);\n        }\n    }\n    onEditedCompleter(event) {\n        this.cell.newValue = event.title;\n        return false;\n    }\n}\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) { return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterEditorComponent, selectors: [[\"completer-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.completerStr = $event; })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.onEditedCompleter($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n        }\n    }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterEditorComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'completer-editor',\n                    template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                    [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                    [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                    [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                    [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `,\n                }]\n        }], function () { return [{ type: i1$1.CompleterService }]; }, null);\n})();","originalLength":6878,"removedExports":[],"renderedExports":["CompleterEditorComponent"],"renderedLength":3027},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/input-editor.component.mjs":{"code":"class InputEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) { return new (t || InputEditorComponent)(); };\nInputEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputEditorComponent, selectors: [[\"input-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function InputEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"input\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n        }\n    }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEditorComponent, [{\n            type: Component,\n            args: [{ selector: 'input-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          class=\"form-control\"\n          [(ngModel)]=\"cell.newValue\"\n          [name]=\"cell.getId()\"\n          [placeholder]=\"cell.getTitle()\"\n          [disabled]=\"!cell.isEditable()\"\n          (click)=\"clickedEvent.emit($event)\"\n          (keydown.enter)=\"editedEvent.emit($event)\"\n          (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], function () { return []; }, null);\n})();","originalLength":4452,"removedExports":[],"renderedExports":["InputEditorComponent"],"renderedLength":2467},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/select-editor.component.mjs":{"code":"function SelectEditorComponent_option_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"option\", 2);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const option_r1 = ctx.$implicit;\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n    }\n}\nclass SelectEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) { return new (t || SelectEditorComponent)(); };\nSelectEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectEditorComponent, selectors: [[\"select-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function SelectEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"select\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n            i0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            let tmp_4_0;\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectEditorComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'select-editor',\n                    template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"clickedEvent.emit($event)\"\n            (keydown.enter)=\"editedEvent.emit($event)\"\n            (keydown.esc)=\"stoppedEditingEvent.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `,\n                }]\n        }], function () { return []; }, null);\n})();","originalLength":5623,"removedExports":[],"renderedExports":["SelectEditorComponent"],"renderedLength":3314},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-editors/textarea-editor.component.mjs":{"code":"class TextareaEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) { return new (t || TextareaEditorComponent)(); };\nTextareaEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextareaEditorComponent, selectors: [[\"textarea-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function TextareaEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"textarea\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n            i0.ɵɵtext(1, \"    \");\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n        }\n    }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextareaEditorComponent, [{\n            type: Component,\n            args: [{ selector: 'textarea-editor', template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"clickedEvent.emit($event)\"\n              (keydown.enter)=\"editedEvent.emit($event)\"\n              (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    </textarea>\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], function () { return []; }, null);\n})();","originalLength":4694,"removedExports":[],"renderedExports":["TextareaEditorComponent"],"renderedLength":2609},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/default-edit.component.mjs":{"code":"function DefaultEditComponent_select_editor_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"select-editor\", 5);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n    }\n}\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"textarea-editor\", 5);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.clickedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n    }\n}\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"completer-editor\", 7);\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r3.cell);\n    }\n}\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"input-editor\", 5);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r4 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n    }\n}\nclass DefaultEditComponent extends EditCellDefault {\n    constructor() {\n        super();\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) { return new (t || DefaultEditComponent)(); };\nDefaultEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditComponent, selectors: [[\"table-cell-default-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"ngSwitch\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"clickedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchDefault\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\"], [3, \"cell\", \"inputClass\", \"clickedEvent\"], [3, \"cell\"]], template: function DefaultEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n            i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n            i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n            i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n            i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n        }\n    }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditComponent, [{\n            type: Component,\n            args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n  <select-editor\\n    *ngSwitchCase=\\\"'list'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </select-editor>\\n\\n  <textarea-editor\\n    *ngSwitchCase=\\\"'textarea'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </textarea-editor>\\n\\n  <checkbox-editor\\n    *ngSwitchCase=\\\"'checkbox'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n  >\\n  </checkbox-editor>\\n\\n  <completer-editor *ngSwitchCase=\\\"'completer'\\\" [cell]=\\\"cell\\\">\\n  </completer-editor>\\n\\n  <input-editor\\n    *ngSwitchDefault\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </input-editor>\\n</div>\\n\" }]\n        }], function () { return []; }, null);\n})();","originalLength":11433,"removedExports":[],"renderedExports":["DefaultEditComponent"],"renderedLength":7253},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-edit-mode/edit-cell.component.mjs":{"code":"function EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n        i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n    }\n}\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n        i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nclass EditCellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) { return new (t || EditCellComponent)(); };\nEditCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellComponent, selectors: [[\"table-cell-edit-mode\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 3, vars: 2, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function EditCellComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n            i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n        }\n    }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomEditComponent, DefaultEditComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-edit-mode',\n                    template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-default-editor>\n      </div>\n    `,\n                }]\n        }], null, { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] });\n})();","originalLength":7131,"removedExports":[],"renderedExports":["EditCellComponent"],"renderedLength":3890},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/custom-view.component.mjs":{"code":"const _c0$b = [\"dynamicTarget\"];\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomViewComponent {\n    constructor(resolver) {\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        if (this.cell && !this.customComponent) {\n            this.createCustomComponent();\n            this.callOnComponentInit();\n            this.patchInstance();\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n    createCustomComponent() {\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n    callOnComponentInit() {\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n        // TODO onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\n        onComponentInitFunction && onComponentInitFunction();\n    }\n    patchInstance() {\n        Object.assign(this.customComponent.instance, this.getPatch());\n    }\n    getPatch() {\n        return {\n            value: this.cell.getValue(),\n            rowData: this.cell.getRow().getData()\n        };\n    }\n}\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) { return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomViewComponent, selectors: [[\"custom-view-component\"]], viewQuery: function CustomViewComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$b, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n        }\n    }, inputs: { cell: \"cell\" }, decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomViewComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'custom-view-component',\n                    template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n                }]\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { cell: [{\n                type: Input\n            }], dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] });\n})();","originalLength":7331,"removedExports":[],"renderedExports":["CustomViewComponent"],"renderedLength":2796},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell-view-mode/view-cell.component.mjs":{"code":"function ViewCellComponent_custom_view_component_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"custom-view-component\", 4);\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n    }\n}\nfunction ViewCellComponent_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 5);\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\n    }\n}\nfunction ViewCellComponent_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n    }\n}\nclass ViewCellComponent {\n}\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) { return new (t || ViewCellComponent)(); };\nViewCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCellComponent, selectors: [[\"table-cell-view-mode\"]], inputs: { cell: \"cell\" }, decls: 4, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]], template: function ViewCellComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n            i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n            i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n        }\n    }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomViewComponent], encapsulation: 2, changeDetection: 0 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCellComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-view-mode',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `,\n                }]\n        }], null, { cell: [{\n                type: Input\n            }] });\n})();","originalLength":4828,"removedExports":[],"renderedExports":["ViewCellComponent"],"renderedLength":2831},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.component.mjs":{"code":"function CellComponent_table_cell_view_mode_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n    }\n}\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n        i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nclass CellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.mode = 'inline';\n        this.isInEditing = false;\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        if (this.isNew) {\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\n        }\n        else {\n            this.grid.save(this.row, this.editConfirm);\n        }\n    }\n}\nCellComponent.ɵfac = function CellComponent_Factory(t) { return new (t || CellComponent)(); };\nCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellComponent, selectors: [[\"smart-intel-table-cell\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\" }, outputs: { edited: \"edited\" }, decls: 2, vars: 2, consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function CellComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n            i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n        }\n    }, dependencies: [i1.NgIf, EditCellComponent, ViewCellComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-intel-table-cell',\n                    template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"editedEvent($event)\">\n    </table-cell-edit-mode>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], isNew: [{\n                type: Input\n            }], cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], isInEditing: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] });\n})();","originalLength":7187,"removedExports":[],"renderedExports":["CellComponent"],"renderedLength":3573},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/cell/cell.module.mjs":{"code":"const CELL_COMPONENTS = [\n    CellComponent,\n    EditCellDefault,\n    DefaultEditorBase,\n    CustomEditComponent,\n    DefaultEditComponent,\n    EditCellComponent,\n    CheckboxEditorComponent,\n    CompleterEditorComponent,\n    InputEditorComponent,\n    SelectEditorComponent,\n    TextareaEditorComponent,\n    CustomViewComponent,\n    ViewCellComponent\n];\nclass CellModule {\n}\nCellModule.ɵfac = function CellModule_Factory(t) { return new (t || CellModule)(); };\nCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellModule });\nCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        Ng2CompleterModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        Ng2CompleterModule\n                    ],\n                    declarations: [\n                        ...CELL_COMPONENTS\n                    ],\n                    exports: [\n                        ...CELL_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellModule, { declarations: [CellComponent,\n            EditCellDefault,\n            DefaultEditorBase,\n            CustomEditComponent,\n            DefaultEditComponent,\n            EditCellComponent,\n            CheckboxEditorComponent,\n            CompleterEditorComponent,\n            InputEditorComponent,\n            SelectEditorComponent,\n            TextareaEditorComponent,\n            CustomViewComponent,\n            ViewCellComponent], imports: [CommonModule,\n            FormsModule,\n            Ng2CompleterModule], exports: [CellComponent,\n            EditCellDefault,\n            DefaultEditorBase,\n            CustomEditComponent,\n            DefaultEditComponent,\n            EditCellComponent,\n            CheckboxEditorComponent,\n            CompleterEditorComponent,\n            InputEditorComponent,\n            SelectEditorComponent,\n            TextareaEditorComponent,\n            CustomViewComponent,\n            ViewCellComponent] });\n})();","originalLength":8083,"removedExports":[],"renderedExports":["CellModule"],"renderedLength":2301},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-default.mjs":{"code":"class FilterDefault {\n    constructor() {\n        this.inputClass = '';\n        this.filter = new EventEmitter();\n        this.query = '';\n    }\n    onFilter(query) {\n        this.source.addFilter({\n            field: this.column.id,\n            search: query,\n            filter: this.column.getFilterFunction()\n        });\n    }\n}\nFilterDefault.ɵfac = function FilterDefault_Factory(t) { return new (t || FilterDefault)(); };\nFilterDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterDefault, selectors: [[\"ng-component\"]], inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function FilterDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDefault, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], filter: [{\n                type: Output\n            }] });\n})();","originalLength":3372,"removedExports":[],"renderedExports":["FilterDefault"],"renderedLength":1203},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/default-filter.mjs":{"code":"class DefaultFilter {\n    constructor() {\n        this.filter = new EventEmitter();\n        this.delay = 300;\n    }\n    ngOnDestroy() {\n        if (this.changesSubscription) {\n            this.changesSubscription.unsubscribe();\n        }\n    }\n    setFilter() {\n        this.filter.emit(this.query);\n    }\n}\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) { return new (t || DefaultFilter)(); };\nDefaultFilter.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilter, selectors: [[\"ng-component\"]], inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function DefaultFilter_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilter, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { query: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Output\n            }] });\n})();","originalLength":3504,"removedExports":[],"renderedExports":["DefaultFilter"],"renderedLength":1175},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/checkbox-filter.component.mjs":{"code":"function CheckboxFilterComponent_a_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.resetFilter($event)); });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        let tmp_0_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n    }\n}\nclass CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.filterActive = false;\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        this.changesSubscription = this.inputControl.valueChanges\n            .pipe(debounceTime(this.delay))\n            .subscribe((checked) => {\n            this.filterActive = true;\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n            this.query = checked ? trueVal : falseVal;\n            this.setFilter();\n        });\n    }\n    resetFilter(event) {\n        event.preventDefault();\n        this.query = '';\n        this.inputControl.setValue(false, { emitEvent: false });\n        this.filterActive = false;\n        this.setFilter();\n    }\n}\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) { return new (t || CheckboxFilterComponent)(); };\nCheckboxFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxFilterComponent, selectors: [[\"checkbox-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]], template: function CheckboxFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelement(0, \"input\", 0);\n            i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n        }\n    }, dependencies: [i1.NgClass, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'checkbox-filter',\n                    template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n                }]\n        }], function () { return []; }, null);\n})();","originalLength":7546,"removedExports":[],"renderedExports":["CheckboxFilterComponent"],"renderedLength":3185},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/completer-filter.component.mjs":{"code":"class CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerContent = new Subject();\n    }\n    ngOnInit() {\n        const config = this.column.getFilterConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n        this.changesSubscription = this.completerContent\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((search) => {\n            this.query = search;\n            this.setFilter();\n        });\n    }\n    inputTextChanged(event) {\n        // workaround to trigger the search event when the home/end buttons are clicked\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n        // so here it gets called manually\n        if (event === '') {\n            this.completerContent.next(event);\n        }\n    }\n}\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) { return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterFilterComponent, selectors: [[\"completer-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.query = $event; })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.inputTextChanged($event); })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.completerContent.next($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n        }\n    }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'completer-filter',\n                    template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                    (ngModelChange)=\"inputTextChanged($event)\"\n                    [dataService]=\"column.getFilterConfig().completer.dataService\"\n                    [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                    [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                    [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n                }]\n        }], function () { return [{ type: i1$1.CompleterService }]; }, null);\n})();","originalLength":8858,"removedExports":[],"renderedExports":["CompleterFilterComponent"],"renderedLength":3617},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/input-filter.component.mjs":{"code":"class InputFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        if (this.query) {\n            this.inputControl.setValue(this.query);\n        }\n        this.inputControl.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => {\n            this.query = this.inputControl.value;\n            this.setFilter();\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.query) {\n            this.inputControl.setValue(this.query);\n        }\n    }\n}\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) { return new (t || InputFilterComponent)(); };\nInputFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputFilterComponent, selectors: [[\"input-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 3, consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]], template: function InputFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelement(0, \"input\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n        }\n    }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'input-filter',\n                    template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.title }}\"/>\n  `,\n                }]\n        }], function () { return []; }, null);\n})();","originalLength":5411,"removedExports":[],"renderedExports":["InputFilterComponent"],"renderedLength":1968},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter-types/select-filter.component.mjs":{"code":"const _c0$a = [\"inputControl\"];\nfunction SelectFilterComponent_option_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"option\", 4);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const option_r2 = ctx.$implicit;\n        i0.ɵɵproperty(\"value\", option_r2.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n    }\n}\nclass SelectFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        this.inputControl.valueChanges\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => this.setFilter());\n    }\n}\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) { return new (t || SelectFilterComponent)(); };\nSelectFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectFilterComponent, selectors: [[\"select-filter\"]], viewQuery: function SelectFilterComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$a, 7, NgControl);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n        }\n    }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SelectFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"select\", 0, 1);\n            i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) { return ctx.query = $event; });\n            i0.ɵɵelementStart(2, \"option\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'select-filter',\n                    template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `,\n                }]\n        }], function () { return []; }, { inputControl: [{\n                type: ViewChild,\n                args: ['inputControl', { read: NgControl, static: true }]\n            }] });\n})();","originalLength":6536,"removedExports":[],"renderedExports":["SelectFilterComponent"],"renderedLength":3285},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/default-filter.component.mjs":{"code":"function DefaultFilterComponent_select_filter_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"select-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n    }\n}\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n    }\n}\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"completer-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n    }\n}\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"input-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n    }\n}\nclass DefaultFilterComponent extends FilterDefault {\n}\nDefaultFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵDefaultFilterComponent_BaseFactory; return function DefaultFilterComponent_Factory(t) { return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent); }; }();\nDefaultFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilterComponent, selectors: [[\"default-table-filter\"]], inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]], template: function DefaultFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementContainerStart(0, 0);\n            i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n            i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n            i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n            i0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\n            i0.ɵɵelementContainerEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n        }\n    }, dependencies: [i1.NgClass, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'default-table-filter',\n                    template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                      [query]=\"query\"\n                      [ngClass]=\"inputClass\"\n                      [column]=\"column\"\n                      (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `,\n                }]\n        }], null, { query: [{\n                type: Input\n            }] });\n})();","originalLength":9376,"removedExports":[],"renderedExports":["DefaultFilterComponent"],"renderedLength":5898},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/custom-filter.component.mjs":{"code":"const _c0$9 = [\"dynamicTarget\"];\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomFilterComponent extends FilterDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.column && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.query = this.query;\n            this.customComponent.instance.column = this.column;\n            this.customComponent.instance.source = this.source;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\n        }\n        if (this.customComponent) {\n            this.customComponent.instance.ngOnChanges(changes);\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) { return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomFilterComponent, selectors: [[\"custom-table-filter\"]], viewQuery: function CustomFilterComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$9, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n        }\n    }, inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'custom-table-filter',\n                    template: `<ng-template #dynamicTarget></ng-template>`,\n                }]\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { query: [{\n                type: Input\n            }], dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] });\n})();","originalLength":7042,"removedExports":[],"renderedExports":["CustomFilterComponent"],"renderedLength":2772},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.component.mjs":{"code":"function FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n        i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r3.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"default-table-filter\", 4);\n        i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r5.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n    }\n}\nfunction FilterComponent_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1);\n        i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n        i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n    }\n}\nclass FilterComponent extends FilterDefault {\n    constructor() {\n        super(...arguments);\n        this.query = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const filterConf = this.source.getFilter();\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n                    this.query = '';\n                    // add a check for existing filters an set the query if one exists for this column\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\n                }\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n                    filterConf.filters.forEach((k, v) => {\n                        if (k.field == this.column.id) {\n                            this.query = k.search;\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\nFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵFilterComponent_BaseFactory; return function FilterComponent_Factory(t) { return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent); }; }();\nFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterComponent, selectors: [[\"smart-intel-table-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"smart-table-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"smart-table-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]], template: function FilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n        }\n    }, dependencies: [i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, DefaultFilterComponent, CustomFilterComponent], styles: [\"[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     a{font-weight:400}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table-filter', template: `\n      <div class=\"smart-table-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `, styles: [\":host .smart-table-filter ::ng-deep input,:host .smart-table-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .smart-table-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .smart-table-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .smart-table-filter ::ng-deep a{font-weight:400}\\n\"] }]\n        }], null, null);\n})();","originalLength":11368,"removedExports":[],"renderedExports":["FilterComponent"],"renderedLength":6236},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/filter/filter.module.mjs":{"code":"const FILTER_COMPONENTS = [\n    FilterDefault,\n    DefaultFilter,\n    FilterComponent,\n    DefaultFilterComponent,\n    CustomFilterComponent,\n    CheckboxFilterComponent,\n    CompleterFilterComponent,\n    InputFilterComponent,\n    SelectFilterComponent\n];\nclass FilterModule {\n}\nFilterModule.ɵfac = function FilterModule_Factory(t) { return new (t || FilterModule)(); };\nFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FilterModule });\nFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        Ng2CompleterModule\n                    ],\n                    declarations: [\n                        ...FILTER_COMPONENTS\n                    ],\n                    exports: [\n                        ...FILTER_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FilterModule, { declarations: [FilterDefault,\n            DefaultFilter,\n            FilterComponent,\n            DefaultFilterComponent,\n            CustomFilterComponent,\n            CheckboxFilterComponent,\n            CompleterFilterComponent,\n            InputFilterComponent,\n            SelectFilterComponent], imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            Ng2CompleterModule], exports: [FilterDefault,\n            DefaultFilter,\n            FilterComponent,\n            DefaultFilterComponent,\n            CustomFilterComponent,\n            CheckboxFilterComponent,\n            CompleterFilterComponent,\n            InputFilterComponent,\n            SelectFilterComponent] });\n})();","originalLength":6639,"removedExports":[],"renderedExports":["FilterModule"],"renderedLength":2068},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.component.mjs":{"code":"function PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 14);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementStart(2, \"span\", 7);\n        i0.ɵɵtext(3, \"(current)\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const page_r3 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n    }\n}\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 15);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r9); const page_r3 = i0.ɵɵnextContext().$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r7.paginate(page_r3)); });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const page_r3 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(page_r3);\n    }\n}\nconst _c0$8 = function (a0) { return { active: a0 }; };\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"li\", 4);\n        i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n        i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const page_r3 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0$8, ctx_r2.getPage() == page_r3));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n    }\n}\nconst _c1$1 = function (a0) { return { disabled: a0 }; };\nfunction PagerComponent_nav_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1)); });\n        i0.ɵɵelementStart(4, \"span\", 6);\n        i0.ɵɵtext(5, \"\\u00AB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\", 7);\n        i0.ɵɵtext(7, \"First\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.getPage() == 1 ? false : ctx_r13.prev()); });\n        i0.ɵɵelementStart(10, \"span\", 6);\n        i0.ɵɵtext(11, \"<\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"span\", 7);\n        i0.ɵɵtext(13, \"Prev\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n        i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next()); });\n        i0.ɵɵelementStart(17, \"span\", 6);\n        i0.ɵɵtext(18, \">\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"span\", 7);\n        i0.ɵɵtext(20, \"Next\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast())); });\n        i0.ɵɵelementStart(23, \"span\", 6);\n        i0.ɵɵtext(24, \"\\u00BB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"span\", 7);\n        i0.ɵɵtext(26, \"Last\");\n        i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1$1, ctx_r0.getPage() == 1));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1$1, ctx_r0.getPage() == 1));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n    }\n}\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"option\", 20);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const item_r17 = ctx.$implicit;\n        i0.ɵɵproperty(\"value\", item_r17);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(item_r17);\n    }\n}\nfunction PagerComponent_nav_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\n        i0.ɵɵtext(2, \" Per Page: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"select\", 18);\n        i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.onChangePerPage($event)); })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r20 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r20.currentPerPage = $event); });\n        i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n    }\n}\nclass PagerComponent {\n    constructor() {\n        this.perPageSelect = [];\n        this.changePage = new EventEmitter();\n        this.count = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                this.page = this.source.getPaging().page;\n                this.perPage = this.source.getPaging().perPage;\n                this.currentPerPage = this.perPage;\n                this.count = this.source.count();\n                if (this.isPageOutOfBounce()) {\n                    this.source.setPage(--this.page);\n                }\n                this.processPageChange(dataChanges);\n                this.initPages();\n            });\n        }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n    processPageChange(changes) {\n        if (changes['action'] === 'prepend') {\n            this.source.setPage(1);\n        }\n        if (changes['action'] === 'append') {\n            this.source.setPage(this.getLast());\n        }\n    }\n    shouldShow() {\n        return this.source.count() > this.perPage;\n    }\n    paginate(page) {\n        this.source.setPage(page);\n        this.page = page;\n        this.changePage.emit({ page });\n        return false;\n    }\n    next() {\n        return this.paginate(this.getPage() + 1);\n    }\n    prev() {\n        return this.paginate(this.getPage() - 1);\n    }\n    getPage() {\n        return this.page;\n    }\n    getPages() {\n        return this.pages;\n    }\n    getLast() {\n        return Math.ceil(this.count / this.perPage);\n    }\n    isPageOutOfBounce() {\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n    }\n    initPages() {\n        const pagesCount = this.getLast();\n        let showPagesCount = 4;\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n        this.pages = [];\n        if (this.shouldShow()) {\n            let middleOne = Math.ceil(showPagesCount / 2);\n            middleOne = this.page >= middleOne ? this.page : middleOne;\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n            const firstOne = lastOne - showPagesCount + 1;\n            for (let i = firstOne; i <= lastOne; i++) {\n                this.pages.push(i);\n            }\n        }\n    }\n    onChangePerPage(event) {\n        if (this.currentPerPage) {\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n                this.source.getPaging().perPage = null;\n            }\n            else {\n                this.source.getPaging().perPage = this.currentPerPage * 1;\n                this.source.refresh();\n            }\n            this.initPages();\n        }\n    }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(); };\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"smart-intel-table-pager\"]], inputs: { source: \"source\", perPageSelect: \"perPageSelect\" }, outputs: { changePage: \"changePage\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"smart-table-pagination-nav\", 4, \"ngIf\"], [\"class\", \"smart-table-pagination-per-page\", 4, \"ngIf\"], [1, \"smart-table-pagination-nav\"], [1, \"smart-table-pagination\", \"pagination\"], [1, \"smart-table-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"smart-table-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"smart-table-page-link page-link\", 4, \"ngIf\"], [\"class\", \"smart-table-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"smart-table-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [1, \"smart-table-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PagerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n            i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\".smart-table-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination[_ngcontent-%COMP%]   .smart-table-page-item[_ngcontent-%COMP%]{display:inline}.smart-table-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .smart-table-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table-pager', template: `\n    <nav *ngIf=\"shouldShow()\" class=\"smart-table-pagination-nav\">\n      <ul class=\"smart-table-pagination pagination\">\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"smart-table-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"smart-table-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"smart-table-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `, styles: [\".smart-table-pagination{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination .smart-table-page-item{display:inline}.smart-table-pagination .page-link-next,.smart-table-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"] }]\n        }], null, { source: [{\n                type: Input\n            }], perPageSelect: [{\n                type: Input\n            }], changePage: [{\n                type: Output\n            }] });\n})();","originalLength":30379,"removedExports":[],"renderedExports":["PagerComponent"],"renderedLength":15670},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/pager/pager.module.mjs":{"code":"class PagerModule {\n}\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule\n                    ],\n                    declarations: [\n                        PagerComponent\n                    ],\n                    exports: [\n                        PagerComponent\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent], imports: [CommonModule,\n            FormsModule], exports: [PagerComponent] });\n})();","originalLength":2607,"removedExports":[],"renderedExports":["PagerModule"],"renderedLength":1040},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/create-cancel.component.mjs":{"code":"class TbodyCreateCancelComponent {\n    onSave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.grid.save(this.row, this.editConfirm);\n    }\n    onCancelEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.row.isInEditing = false;\n    }\n    ngOnChanges() {\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n}\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) { return new (t || TbodyCreateCancelComponent)(); };\nTbodyCreateCancelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCreateCancelComponent, selectors: [[\"smart-table-body-create-cancel\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-cancel\", 3, \"innerHTML\", \"click\"]], template: function TbodyCreateCancelComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"a\", 0);\n            i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) { return ctx.onSave($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(1, \"a\", 1);\n            i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) { return ctx.onCancelEdit($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-body-create-cancel',\n                    template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }] });\n})();","originalLength":6123,"removedExports":[],"renderedExports":["TbodyCreateCancelComponent"],"renderedLength":2687},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/edit-delete.component.mjs":{"code":"function TbodyEditDeleteComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onEdit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\n    }\n}\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 3);\n        i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onDelete($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\n    }\n}\nclass TbodyEditDeleteComponent {\n    constructor() {\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n    }\n    onEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.editRowSelect.emit(this.row);\n        if (this.grid.getSetting('mode') === 'external') {\n            this.edit.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.edit(this.row);\n        }\n    }\n    onDelete(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.delete.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.delete(this.row, this.deleteConfirm);\n        }\n    }\n    ngOnChanges() {\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n}\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) { return new (t || TbodyEditDeleteComponent)(); };\nTbodyEditDeleteComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyEditDeleteComponent, selectors: [[\"smart-table-body-edit-delete\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\"]], template: function TbodyEditDeleteComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n            i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n        }\n    }, dependencies: [i1.NgIf], encapsulation: 2, changeDetection: 0 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-body-edit-delete',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"smart-table-action smart-table-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"smart-table-action smart-table-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], deleteConfirm: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], edit: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], editRowSelect: [{\n                type: Output\n            }] });\n})();","originalLength":11306,"removedExports":[],"renderedExports":["TbodyEditDeleteComponent"],"renderedLength":5056},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/cells/custom.component.mjs":{"code":"function TbodyCustomComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r3); const action_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onCustom(action_r1, $event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const action_r1 = ctx.$implicit;\n        i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\n    }\n}\nclass TbodyCustomComponent {\n    constructor() {\n        this.custom = new EventEmitter();\n    }\n    onCustom(action, event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.custom.emit({\n            action: action.name,\n            data: this.row.getData(),\n            source: this.source\n        });\n    }\n}\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) { return new (t || TbodyCustomComponent)(); };\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCustomComponent, selectors: [[\"smart-table-body-custom\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\"]], template: function TbodyCustomComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n        }\n    }, dependencies: [i1.NgForOf], encapsulation: 2, changeDetection: 0 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-body-custom',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\n        class=\"smart-table-action smart-table-action-custom-custom\" \n        [innerHTML]=\"action.title\"\n        (click)=\"onCustom(action, $event)\"></a>\n        `\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], custom: [{\n                type: Output\n            }] });\n})();","originalLength":5691,"removedExports":[],"renderedExports":["TbodyCustomComponent"],"renderedLength":2727},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.component.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0$7 = [\"smart-table-body\", \"\"];\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 6);\n        i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() { i0.ɵɵrestoreView(_r11); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.multipleSelectRow.emit(row_r2)); });\n        i0.ɵɵelement(1, \"input\", 7);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n        i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r13.custom.emit($event)); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n        i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r17 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r17.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r19 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r19.editRowSelect.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r4 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"td\", 8);\n        i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r5 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"td\");\n        i0.ɵɵelement(1, \"smart-intel-table-cell\", 12);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const cell_r22 = ctx.$implicit;\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r6 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"td\", 8);\n        i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r7 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r26 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n        i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r25.custom.emit($event)); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n        i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r27 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r27.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r29 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r29.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r31 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r31.editRowSelect.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r8 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    }\n}\nconst _c1 = function (a0) { return { selected: a0 }; };\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r34 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\", 2);\n        i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r33 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r33.userSelectRow.emit(row_r2)); })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r35 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r35.rowHover.emit(row_r2)); });\n        i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\n        i0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\n        i0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\n        i0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\n        i0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\n        i0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = ctx.$implicit;\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, row_r2.isSelected));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n    }\n}\nclass Ng2SmartTableTbodyComponent {\n    constructor() {\n        this.save = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.edited = new EventEmitter();\n        this.userSelectRow = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n        this.multipleSelectRow = new EventEmitter();\n        this.rowHover = new EventEmitter();\n    }\n    get tableColumnsCount() {\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n        return this.grid.getColumns().length + actionColumns;\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.mode = this.grid.getSetting('mode');\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) { return new (t || Ng2SmartTableTbodyComponent)(); };\nNg2SmartTableTbodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTbodyComponent, selectors: [[\"\", \"smart-table-body\", \"\"]], inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$7, decls: 2, vars: 2, consts: [[\"class\", \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"smart-table-actions smart-table-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\", \"smart-table-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"smart-table-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]], template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\n            i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel, CellComponent, TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent], styles: [\"[_nghost-%COMP%]   .smart-table-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .smart-table-row[_ngcontent-%COMP%]   .smart-table-actions.smart-table-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     smart-table-body-edit-delete a:first-child, [_nghost-%COMP%]     smart-table-body-create-cancel a:first-child{margin-right:.25rem}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\n            type: Component,\n            args: [{ selector: '[smart-table-body]', template: \"<tr\\n  *ngFor=\\\"let row of grid.getRows()\\\"\\n  (click)=\\\"userSelectRow.emit(row)\\\"\\n  (mouseover)=\\\"rowHover.emit(row)\\\"\\n  class=\\\"smart-table-row\\\"\\n  [className]=\\\"rowClassFunction(row)\\\"\\n  [ngClass]=\\\"{ selected: row.isSelected }\\\"\\n>\\n  <td\\n    *ngIf=\\\"isMultiSelectVisible\\\"\\n    class=\\\"smart-table-actions smart-table-action-multiple-select\\\"\\n    (click)=\\\"multipleSelectRow.emit(row)\\\"\\n  >\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\" />\\n  </td>\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <smart-intel-table-cell\\n      [cell]=\\\"cell\\\"\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [isNew]=\\\"false\\\"\\n      [mode]=\\\"mode\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [inputClass]=\\\"editInputClass\\\"\\n      [isInEditing]=\\\"row.isInEditing\\\"\\n    >\\n    </smart-intel-table-cell>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\", styles: [\":host .smart-table-row.selected{background:rgba(0,0,0,.05)}:host .smart-table-row .smart-table-actions.smart-table-action-multiple-select{text-align:center}:host ::ng-deep smart-table-body-edit-delete a:first-child,:host ::ng-deep smart-table-body-create-cancel a:first-child{margin-right:.25rem}\\n\"] }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], deleteConfirm: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], rowClassFunction: [{\n                type: Input\n            }], save: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], custom: [{\n                type: Output\n            }], edited: [{\n                type: Output\n            }], userSelectRow: [{\n                type: Output\n            }], editRowSelect: [{\n                type: Output\n            }], multipleSelectRow: [{\n                type: Output\n            }], rowHover: [{\n                type: Output\n            }] });\n})();","originalLength":28707,"removedExports":[],"renderedExports":["Ng2SmartTableTbodyComponent"],"renderedLength":16896},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/tbody/tbody.module.mjs":{"code":"const TBODY_COMPONENTS = [\n    TbodyCreateCancelComponent,\n    TbodyEditDeleteComponent,\n    TbodyCustomComponent,\n    Ng2SmartTableTbodyComponent\n];\nclass TbodyModule {\n}\nTbodyModule.ɵfac = function TbodyModule_Factory(t) { return new (t || TbodyModule)(); };\nTbodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TbodyModule });\nTbodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        CellModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        CellModule\n                    ],\n                    declarations: [\n                        ...TBODY_COMPONENTS\n                    ],\n                    exports: [\n                        ...TBODY_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TbodyModule, { declarations: [TbodyCreateCancelComponent,\n            TbodyEditDeleteComponent,\n            TbodyCustomComponent,\n            Ng2SmartTableTbodyComponent], imports: [CommonModule,\n            FormsModule,\n            CellModule], exports: [TbodyCreateCancelComponent,\n            TbodyEditDeleteComponent,\n            TbodyCustomComponent,\n            Ng2SmartTableTbodyComponent] });\n})();","originalLength":4489,"removedExports":[],"renderedExports":["TbodyModule"],"renderedLength":1530},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/add-button.component.mjs":{"code":"const _c0$6 = [\"smart-table-add-button\", \"\"];\nfunction AddButtonComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.onAdd($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\n    }\n}\nclass AddButtonComponent {\n    constructor(ref) {\n        this.ref = ref;\n        this.create = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions-title', 'smart-table-actions-title-add');\n    }\n    ngOnChanges() {\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n    onAdd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.create.emit({\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.createFormShown = true;\n        }\n    }\n}\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) { return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nAddButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddButtonComponent, selectors: [[\"\", \"smart-table-add-button\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$6, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-add\", 3, \"innerHTML\", \"click\"]], template: function AddButtonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n        }\n    }, dependencies: [i1.NgIf], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddButtonComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-add-button]',\n                    template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"smart-table-action smart-table-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `,\n                }]\n        }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] });\n})();","originalLength":6784,"removedExports":[],"renderedExports":["AddButtonComponent"],"renderedLength":2959},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-filters-row.component.mjs":{"code":"const _c0$5 = [\"smart-table-thead-filters-row\", \"\"];\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"th\");\n    }\n}\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 4);\n        i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.create.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n    }\n}\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\")(1, \"smart-intel-table-filter\", 5);\n        i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_smart_intel_table_filter_filter_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.filter.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const column_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n    }\n}\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 6);\n        i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.create.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n    }\n}\nclass TheadFitlersRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) { return new (t || TheadFitlersRowComponent)(); };\nTheadFitlersRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFitlersRowComponent, selectors: [[\"\", \"smart-table-thead-filters-row\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$5, decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]], template: function TheadFitlersRowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n            i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n            i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n            i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n        }\n    }, dependencies: [i1.NgForOf, i1.NgIf, FilterComponent, AddButtonComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-thead-filters-row]',\n                    template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th smart-table-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"smart-table-th {{ column.id }}\">\n      <smart-intel-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </smart-intel-table-filter>\n    </th>\n    <th smart-table-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }], filter: [{\n                type: Output\n            }] });\n})();","originalLength":10668,"removedExports":[],"renderedExports":["TheadFitlersRowComponent"],"renderedLength":5679},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions.component.mjs":{"code":"class ActionsComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n}\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) { return new (t || ActionsComponent)(); };\nActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsComponent, selectors: [[\"ng2-st-actions\"]], inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-cancel\", 3, \"innerHTML\", \"click\"]], template: function ActionsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"a\", 0);\n            i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) { $event.preventDefault(); return ctx.create.emit($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(1, \"a\", 1);\n            i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) { $event.preventDefault(); return ctx.grid.createFormShown = false; });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'ng2-st-actions',\n                    template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] });\n})();","originalLength":5047,"removedExports":[],"renderedExports":["ActionsComponent"],"renderedLength":2427},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-form-row.component.mjs":{"code":"const _c0$4 = [\"smart-table-thead-form-row\", \"\"];\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"td\");\n    }\n}\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n        i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onCreate($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n    }\n}\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\")(1, \"smart-intel-table-cell\", 5);\n        i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_smart_intel_table_cell_edited_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.onCreate($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const cell_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n    }\n}\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n        i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.onCreate($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n    }\n}\nclass TheadFormRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    onCreate(event) {\n        event.stopPropagation();\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) { return new (t || TheadFormRowComponent)(); };\nTheadFormRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFormRowComponent, selectors: [[\"\", \"smart-table-thead-form-row\", \"\"]], inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$4, decls: 4, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]], template: function TheadFormRowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n            i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n            i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n            i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n        }\n    }, dependencies: [i1.NgForOf, i1.NgIf, CellComponent, ActionsComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFormRowComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-thead-form-row]',\n                    template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <smart-intel-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </smart-intel-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] });\n})();","originalLength":11068,"removedExports":[],"renderedExports":["TheadFormRowComponent"],"renderedLength":5700},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/actions-title.component.mjs":{"code":"const _c0$3 = [\"ng2-st-actions-title\", \"\"];\nclass ActionsTitleComponent {\n    constructor(ref) {\n        this.ref = ref;\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions');\n    }\n    ngOnChanges() {\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n}\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) { return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nActionsTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsTitleComponent, selectors: [[\"\", \"ng2-st-actions-title\", \"\"]], inputs: { grid: \"grid\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$3, decls: 2, vars: 1, consts: [[1, \"smart-table-title\"]], template: function ActionsTitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTitleComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[ng2-st-actions-title]',\n                    template: `\n    <div class=\"smart-table-title\">{{ actionsColumnTitle }}</div>\n  `,\n                }]\n        }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n                type: Input\n            }] });\n})();","originalLength":3647,"removedExports":[],"renderedExports":["ActionsTitleComponent"],"renderedLength":1573},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/checkbox-select-all.component.mjs":{"code":"const _c0$2 = [\"smart-table-checkbox-select-all\", \"\"];\nclass CheckboxSelectAllComponent {\n}\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) { return new (t || CheckboxSelectAllComponent)(); };\nCheckboxSelectAllComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxSelectAllComponent, selectors: [[\"\", \"smart-table-checkbox-select-all\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, attrs: _c0$2, decls: 1, vars: 1, consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]], template: function CheckboxSelectAllComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelement(0, \"input\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n        }\n    }, dependencies: [i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-checkbox-select-all]',\n                    template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }] });\n})();","originalLength":3090,"removedExports":[],"renderedExports":["CheckboxSelectAllComponent"],"renderedLength":1428},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/title/title.component.mjs":{"code":"function TitleComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2._sort($event)); });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n    }\n}\nfunction TitleComponent_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 3);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r1.column.title);\n    }\n}\nclass TitleComponent {\n    constructor() {\n        this.currentDirection = '';\n        this.sort = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const sortConf = this.source.getSort();\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n                    this.currentDirection = sortConf[0]['direction'];\n                }\n                else {\n                    this.currentDirection = '';\n                }\n                sortConf.forEach((fieldConf) => {\n                });\n            });\n        }\n    }\n    _sort(event) {\n        event.preventDefault();\n        this.changeSortDirection();\n        this.source.setSort([\n            {\n                field: this.column.id,\n                direction: this.currentDirection,\n                compare: this.column.getCompareFunction(),\n            },\n        ]);\n        this.sort.emit(null);\n    }\n    changeSortDirection() {\n        if (this.currentDirection) {\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n            this.currentDirection = newDirection;\n        }\n        else {\n            this.currentDirection = this.column.sortDirection;\n        }\n        return this.currentDirection;\n    }\n}\nTitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(); };\nTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TitleComponent, selectors: [[\"smart-intel-table-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"smart-table-sort\"]], template: function TitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n            i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n        }\n    }, dependencies: [i1.NgClass, i1.NgIf], styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table-title', template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"smart-table-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"smart-table-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\n        }], null, { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }] });\n})();","originalLength":10881,"removedExports":[],"renderedExports":["TitleComponent"],"renderedLength":5001},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/cells/column-title.component.mjs":{"code":"class ColumnTitleComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n    }\n}\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) { return new (t || ColumnTitleComponent)(); };\nColumnTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnTitleComponent, selectors: [[\"smart-table-column-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, decls: 2, vars: 2, consts: [[1, \"smart-table-title\"], [3, \"source\", \"column\", \"sort\"]], template: function ColumnTitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"smart-intel-table-title\", 1);\n            i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_smart_intel_table_title_sort_1_listener($event) { return ctx.sort.emit($event); });\n            i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\n        }\n    }, dependencies: [TitleComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnTitleComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-column-title',\n                    template: `\n    <div class=\"smart-table-title\">\n      <smart-intel-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-intel-table-title>\n    </div>\n  `,\n                }]\n        }], null, { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }] });\n})();","originalLength":3768,"removedExports":[],"renderedExports":["ColumnTitleComponent"],"renderedLength":1703},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/rows/thead-titles-row.component.mjs":{"code":"const _c0$1 = [\"smart-table-thead-titles-row\", \"\"];\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 3);\n        i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.selectAllRows.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n    }\n}\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"th\", 4);\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n    }\n}\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 5)(1, \"smart-table-column-title\", 6);\n        i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_smart_table_column_title_sort_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.sort.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const column_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n        i0.ɵɵstyleProp(\"width\", column_r6.width);\n        i0.ɵɵproperty(\"ngClass\", column_r6.class);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\n    }\n}\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"th\", 4);\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n    }\n}\nclass TheadTitlesRowComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) { return new (t || TheadTitlesRowComponent)(); };\nTheadTitlesRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadTitlesRowComponent, selectors: [[\"\", \"smart-table-thead-titles-row\", \"\"]], inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$1, decls: 4, vars: 4, consts: [[\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]], template: function TheadTitlesRowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n            i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n            i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\n            i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, ActionsTitleComponent, CheckboxSelectAllComponent, ColumnTitleComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-thead-titles-row]',\n                    template: `\n    <th smart-table-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                  [grid]=\"grid\"\n                                  [source]=\"source\"\n                                  [isAllSelected]=\"isAllSelected\"\n                                  (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"smart-table-th {{ column.id }}\"\n        [ngClass]=\"column.class\"\n        [style.width]=\"column.width\">\n      <smart-table-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-table-column-title>\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], selectAllRows: [{\n                type: Output\n            }] });\n})();","originalLength":10556,"removedExports":[],"renderedExports":["TheadTitlesRowComponent"],"renderedLength":5689},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.component.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0 = [\"smart-table-thead\", \"\"];\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\", 3);\n        i0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.sort.emit($event)); })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.selectAllRows.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n    }\n}\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\", 4);\n        i0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.create.emit($event)); })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.filter.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n    }\n}\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"tr\", 5);\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n    }\n}\nclass Ng2SmartTableTheadComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n}\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) { return new (t || Ng2SmartTableTheadComponent)(); };\nNg2SmartTableTheadComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTheadComponent, selectors: [[\"\", \"smart-table-thead\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 3, vars: 3, consts: [[\"smart-table-thead-titles-row\", \"\", \"class\", \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"smart-table-thead-filters-row\", \"\", \"class\", \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"smart-table-thead-titles-row\", \"\", 1, \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"smart-table-thead-filters-row\", \"\", 1, \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]], template: function Ng2SmartTableTheadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n            i0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n            i0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n        }\n    }, dependencies: [i1.NgIf, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\n            type: Component,\n            args: [{ selector: '[smart-table-thead]', template: \"<tr\\n  smart-table-thead-titles-row\\n  *ngIf=\\\"!isHideHeader\\\"\\n  class=\\\"smart-table-titles\\\"\\n  [grid]=\\\"grid\\\"\\n  [isAllSelected]=\\\"isAllSelected\\\"\\n  [source]=\\\"source\\\"\\n  (sort)=\\\"sort.emit($event)\\\"\\n  (selectAllRows)=\\\"selectAllRows.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-filters-row\\n  *ngIf=\\\"!isHideSubHeader\\\"\\n  class=\\\"smart-table-filters\\\"\\n  [grid]=\\\"grid\\\"\\n  [source]=\\\"source\\\"\\n  (create)=\\\"create.emit($event)\\\"\\n  (filter)=\\\"filter.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-form-row\\n  *ngIf=\\\"grid.createFormShown\\\"\\n  [grid]=\\\"grid\\\"\\n  [createConfirm]=\\\"createConfirm\\\"\\n></tr>\\n\" }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], selectAllRows: [{\n                type: Output\n            }], create: [{\n                type: Output\n            }], filter: [{\n                type: Output\n            }] });\n})();","originalLength":9950,"removedExports":[],"renderedExports":["Ng2SmartTableTheadComponent"],"renderedLength":5640},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/components/thead/thead.module.mjs":{"code":"const THEAD_COMPONENTS = [\n    ActionsComponent,\n    ActionsTitleComponent,\n    AddButtonComponent,\n    CheckboxSelectAllComponent,\n    ColumnTitleComponent,\n    TitleComponent,\n    TheadFitlersRowComponent,\n    TheadFormRowComponent,\n    TheadTitlesRowComponent,\n    Ng2SmartTableTheadComponent\n];\nclass TheadModule {\n}\nTheadModule.ɵfac = function TheadModule_Factory(t) { return new (t || TheadModule)(); };\nTheadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TheadModule });\nTheadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        FilterModule,\n                        CellModule\n                    ],\n                    declarations: [\n                        ...THEAD_COMPONENTS\n                    ],\n                    exports: [\n                        ...THEAD_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TheadModule, { declarations: [ActionsComponent,\n            ActionsTitleComponent,\n            AddButtonComponent,\n            CheckboxSelectAllComponent,\n            ColumnTitleComponent,\n            TitleComponent,\n            TheadFitlersRowComponent,\n            TheadFormRowComponent,\n            TheadTitlesRowComponent,\n            Ng2SmartTableTheadComponent], imports: [CommonModule,\n            FormsModule,\n            FilterModule,\n            CellModule], exports: [ActionsComponent,\n            ActionsTitleComponent,\n            AddButtonComponent,\n            CheckboxSelectAllComponent,\n            ColumnTitleComponent,\n            TitleComponent,\n            TheadFitlersRowComponent,\n            TheadFormRowComponent,\n            TheadTitlesRowComponent,\n            Ng2SmartTableTheadComponent] });\n})();","originalLength":7187,"removedExports":[],"renderedExports":["TheadModule"],"renderedLength":2159},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/data-source.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DataSource {\n    constructor() {\n        this.onChangedSource = new Subject();\n        this.onAddedSource = new Subject();\n        this.onUpdatedSource = new Subject();\n        this.onRemovedSource = new Subject();\n    }\n    refresh() {\n        this.emitOnChanged('refresh');\n    }\n    load(data) {\n        this.emitOnChanged('load');\n        return Promise.resolve();\n    }\n    onChanged() {\n        return this.onChangedSource.asObservable();\n    }\n    onAdded() {\n        return this.onAddedSource.asObservable();\n    }\n    onUpdated() {\n        return this.onUpdatedSource.asObservable();\n    }\n    onRemoved() {\n        return this.onRemovedSource.asObservable();\n    }\n    prepend(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('prepend');\n        return Promise.resolve();\n    }\n    append(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('append');\n        return Promise.resolve();\n    }\n    add(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('add');\n        return Promise.resolve();\n    }\n    remove(element) {\n        this.emitOnRemoved(element);\n        this.emitOnChanged('remove');\n        return Promise.resolve();\n    }\n    update(element, values) {\n        this.emitOnUpdated(element);\n        this.emitOnChanged('update');\n        return Promise.resolve();\n    }\n    empty() {\n        this.emitOnChanged('empty');\n        return Promise.resolve();\n    }\n    setSort(conf, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('sort');\n        }\n    }\n    setFilter(conf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    addFilter(fieldConf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    setPaging(page, perPage, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('paging');\n        }\n    }\n    setPage(page, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('page');\n        }\n    }\n    emitOnRemoved(element) {\n        this.onRemovedSource.next(element);\n    }\n    emitOnUpdated(element) {\n        this.onUpdatedSource.next(element);\n    }\n    emitOnAdded(element) {\n        this.onAddedSource.next(element);\n    }\n    emitOnChanged(action) {\n        this.getElements().then((elements) => this.onChangedSource.next({\n            action,\n            elements,\n            paging: this.getPaging(),\n            filter: this.getFilter(),\n            sort: this.getSort()\n        }));\n    }\n}","originalLength":10525,"removedExports":[],"renderedExports":["DataSource"],"renderedLength":2599},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/helpers.define.mjs":{"code":"/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nconst deepExtend = (...objects) => {\n    if (objects.length < 1 || typeof objects[0] !== 'object') {\n        return false;\n    }\n    if (objects.length < 2) {\n        return objects[0];\n    }\n    const target = objects[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(objects, 1);\n    let val;\n    let src;\n    args.forEach((obj) => {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach((key) => {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = cloneDeep(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nconst getDeepFromObject = (object = {}, name, defaultValue) => {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object);\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n};\nconst getPageForRowIndex = (index, perPage) => \n// we need to add 1 to convert 0-based index to 1-based page number.\nMath.floor(index / perPage) + 1;","originalLength":10026,"removedExports":[],"renderedExports":["deepExtend","Deferred","getDeepFromObject","getPageForRowIndex"],"renderedLength":2831},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/loca-data-filter.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nconst filterValues = (value, search) => value.toString().toLowerCase().includes(search.toString().toLowerCase());\nclass LocalFilter {\n    static filter(data, field, search, customFilter) {\n        const filter = customFilter ? customFilter : filterValues;\n        return data.filter((el) => {\n            const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n            // return filter.call(null, value, search); // FIXME just fallback dis in case direct call not working\n            return filter(null, value, search);\n        });\n    }\n}","originalLength":2835,"removedExports":[],"renderedExports":["filterValues","LocalFilter"],"renderedLength":630},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-pager.define.mjs":{"code":"class LocalPager {\n    static paginate(data, page, perPage) {\n        return data.slice(perPage * (page - 1), perPage * page);\n    }\n}","originalLength":1000,"removedExports":[],"renderedExports":["LocalPager"],"renderedLength":134},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-sorter.define.mjs":{"code":"const compareValues = (direction, a, b) => {\n    if (a < b) {\n        return -1 * direction;\n    }\n    if (a > b) {\n        return direction;\n    }\n    return 0;\n};\nclass LocalSorter {\n    static sort(data, field, direction, customCompare) {\n        const dir = (direction === 'asc') ? 1 : -1;\n        const compare = customCompare ? customCompare : compareValues;\n        // return data.sort((a, b) => compare.call(null, dir, a[field], b[field])); // FIXME fallback to dis in cas direct call fails\n        return data.sort((a, b) => compare(null, dir, a[field], b[field]));\n    }\n}","originalLength":2795,"removedExports":[],"renderedExports":["compareValues","LocalSorter"],"renderedLength":582},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/local-data-source/local-data-source.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-unsafe-return */\nclass LocalDataSource extends DataSource {\n    constructor(data = []) {\n        super();\n        this.data = [];\n        this.filteredAndSorted = [];\n        this.sortConf = [];\n        this.filterConf = {\n            filters: [],\n            andOperator: true\n        };\n        this.pagingConf = {};\n        this.data = data;\n    }\n    load(data) {\n        this.data = data;\n        return super.load(data);\n    }\n    prepend(element) {\n        this.reset(true);\n        this.data.unshift(element);\n        return super.prepend(element);\n    }\n    append(element) {\n        this.reset(true);\n        this.data.push(element);\n        return super.append(element);\n    }\n    add(element) {\n        this.data.push(element);\n        return super.add(element);\n    }\n    remove(element) {\n        this.data = this.data.filter(el => el !== element);\n        return super.remove(element);\n    }\n    update(element, values) {\n        return new Promise((resolve, reject) => {\n            this.find(element).then((found) => {\n                found = deepExtend(found, values);\n                super.update(found, values).then(resolve).catch(reject);\n            }).catch(reject);\n        });\n    }\n    find(element) {\n        const found = this.data.find(el => el === element);\n        if (found) {\n            return Promise.resolve(found);\n        }\n        return Promise.reject(new Error('Element was not found in the dataset'));\n    }\n    getElements() {\n        const data = this.data.slice(0);\n        return Promise.resolve(this.prepareData(data));\n    }\n    getFilteredAndSorted() {\n        const data = this.data.slice(0);\n        this.prepareData(data);\n        return Promise.resolve(this.filteredAndSorted);\n    }\n    getAll() {\n        const data = this.data.slice(0);\n        return Promise.resolve(data);\n    }\n    reset(silent = false) {\n        if (silent) {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n            this.sortConf = [];\n            this.pagingConf.page = 1;\n        }\n        else {\n            this.setFilter([], true, false);\n            this.setSort([], false);\n            this.setPage(1);\n        }\n    }\n    empty() {\n        this.data = [];\n        return super.empty();\n    }\n    count() {\n        return this.filteredAndSorted.length;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param doEmit\n     * @returns\n     */\n    setSort(conf, doEmit = true) {\n        if (conf !== null) {\n            conf.forEach((fieldConf) => {\n                if (!fieldConf.field || typeof fieldConf.direction === 'undefined') {\n                    throw new Error('Sort configuration object is not valid');\n                }\n            });\n            this.sortConf = conf;\n        }\n        super.setSort(conf, doEmit);\n        return this;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, search: string, filter: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param andOperator\n     * @param doEmit\n     * @returns\n     */\n    setFilter(conf, andOperator = true, doEmit = true) {\n        if (conf && conf.length > 0) {\n            conf.forEach((fieldConf) => {\n                this.addFilter(fieldConf, andOperator, false);\n            });\n        }\n        else {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n        }\n        this.filterConf.andOperator = andOperator;\n        this.pagingConf.page = 1;\n        super.setFilter(conf, andOperator, doEmit);\n        return this;\n    }\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\n        if (!fieldConf.field || typeof fieldConf.search === 'undefined') {\n            throw new Error('Filter configuration object is not valid');\n        }\n        let found = false;\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\n            if (currentFieldConf.field === fieldConf.field) {\n                this.filterConf.filters[index] = fieldConf;\n                found = true;\n            }\n        });\n        if (!found) {\n            this.filterConf.filters.push(fieldConf);\n        }\n        this.filterConf.andOperator = andOperator;\n        super.addFilter(fieldConf, andOperator, doEmit);\n        return this;\n    }\n    setPaging(page, perPage, doEmit = true) {\n        this.pagingConf.page = page;\n        this.pagingConf.perPage = perPage;\n        super.setPaging(page, perPage, doEmit);\n        return this;\n    }\n    setPage(page, doEmit = true) {\n        this.pagingConf.page = page;\n        super.setPage(page, doEmit);\n        return this;\n    }\n    getSort() {\n        return this.sortConf;\n    }\n    getFilter() {\n        return this.filterConf;\n    }\n    getPaging() {\n        return this.pagingConf;\n    }\n    prepareData(data) {\n        data = this.filter(data);\n        data = this.sort(data);\n        this.filteredAndSorted = data.slice(0);\n        return this.paginate(data);\n    }\n    sort(data) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                data = LocalSorter\n                    .sort(data, fieldConf.field, fieldConf.direction, fieldConf.compare);\n            });\n        }\n        return data;\n    }\n    // TODO: refactor?\n    filter(data) {\n        if (this.filterConf.filters) {\n            if (this.filterConf.andOperator) {\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        data = LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter);\n                    }\n                });\n            }\n            else {\n                let mergedData = [];\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        mergedData = mergedData.concat(LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter));\n                    }\n                });\n                // remove non unique items\n                data = mergedData.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n            }\n        }\n        return data;\n    }\n    paginate(data) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            data = LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\n        }\n        return data;\n    }\n}","originalLength":25195,"removedExports":[],"renderedExports":["LocalDataSource"],"renderedLength":6683},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/column.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Column {\n    constructor(id, settings, dataSet) {\n        this.id = id;\n        this.settings = settings;\n        this.dataSet = dataSet;\n        this.title = '';\n        this.type = '';\n        this.class = '';\n        this.width = '';\n        this.hide = false;\n        this.isSortable = false;\n        this.isEditable = true;\n        this.isAddable = true;\n        this.isFilterable = false;\n        this.sortDirection = '';\n        this.defaultSortDirection = '';\n        this.editor = { type: '', config: {}, component: null };\n        this.filter = { type: '', config: {}, component: null };\n        this.renderComponent = null;\n        this.process();\n    }\n    getOnComponentInitFunction() {\n        return this.onComponentInitFunction;\n    }\n    getCompareFunction() {\n        return this.compareFunction;\n    }\n    getValuePrepareFunction() {\n        return this.valuePrepareFunction;\n    }\n    getFilterFunction() {\n        return this.filterFunction;\n    }\n    getConfig() {\n        return this.editor && this.editor.config;\n    }\n    getFilterType() {\n        return this.filter && this.filter.type;\n    }\n    getFilterConfig() {\n        return this.filter && this.filter.config;\n    }\n    prepareType() {\n        return this.settings.type || this.determineType();\n    }\n    prepareSortDirection() {\n        return this.settings.sort === 'desc' ? 'desc' : 'asc';\n    }\n    determineType() {\n        // TODO: determine type by data\n        return 'text';\n    }\n    process() {\n        this.title = this.settings.title;\n        this.class = this.settings.class;\n        this.width = this.settings.width;\n        this.hide = Boolean(this.settings.hide);\n        this.type = this.prepareType();\n        this.editor = this.settings.editor;\n        this.filter = this.settings.filter;\n        this.renderComponent = this.settings.renderComponent;\n        this.isFilterable = typeof this.settings.filter === 'undefined' ? true : Boolean(this.settings.filter);\n        this.defaultSortDirection = ['asc', 'desc']\n            .indexOf(this.settings.sortDirection) !== -1 ? this.settings.sortDirection : '';\n        this.isSortable = typeof this.settings.sort === 'undefined' ? true : Boolean(this.settings.sort);\n        this.isEditable = typeof this.settings.editable === 'undefined' ? true : Boolean(this.settings.editable);\n        this.isAddable = typeof this.settings.addable === 'undefined' ? true : Boolean(this.settings.addable);\n        this.sortDirection = this.prepareSortDirection();\n        this.compareFunction = this.settings.compareFunction;\n        this.valuePrepareFunction = this.settings.valuePrepareFunction;\n        this.filterFunction = this.settings.filterFunction;\n        this.onComponentInitFunction = this.settings.onComponentInitFunction;\n    }\n}","originalLength":10919,"removedExports":[],"renderedExports":["Column"],"renderedLength":2841},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/cell.define.mjs":{"code":"const prepareValue = (value) => value;\n// @dynamic\nclass Cell {\n    constructor(value, row, column, dataSet) {\n        this.value = value;\n        this.row = row;\n        this.column = column;\n        this.dataSet = dataSet;\n        this.newValue = '';\n        this.newValue = value;\n    }\n    getColumn() {\n        return this.column;\n    }\n    getRow() {\n        return this.row;\n    }\n    getValue() {\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.prepareVal;\n        // eslint-disable-next-line no-useless-call\n        return prepare.call(null, this.value, this.row.getData(), this);\n    }\n    setValue(value) {\n        this.newValue = value;\n    }\n    getId() {\n        return this.getColumn().id;\n    }\n    getTitle() {\n        return this.getColumn().title;\n    }\n    isEditable() {\n        if (this.getRow().index === -1) {\n            return this.getColumn().isAddable;\n        }\n        else {\n            return this.getColumn().isEditable;\n        }\n    }\n}\nCell.prepareVal = prepareValue;","originalLength":4602,"removedExports":[],"renderedExports":["prepareValue","Cell"],"renderedLength":1113},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/row.define.mjs":{"code":"class Row {\n    constructor(index, data, dataSet) {\n        this.index = index;\n        this.data = data;\n        this.dataSet = dataSet;\n        this.isSelected = false;\n        this.isInEditing = false;\n        this.cells = [];\n        this.process();\n    }\n    getCell(column) {\n        return this.cells.find(el => el.getColumn() === column);\n    }\n    getCells() {\n        return this.cells;\n    }\n    getData() {\n        return this.data;\n    }\n    getIsSelected() {\n        return this.isSelected;\n    }\n    getNewData() {\n        const values = Object.assign({}, this.data);\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n        return values;\n    }\n    setData(data) {\n        this.data = data;\n        this.process();\n    }\n    process() {\n        this.cells = [];\n        this.dataSet.getColumns().forEach((column) => {\n            const cell = this.createCell(column);\n            this.cells.push(cell);\n        });\n    }\n    createCell(column) {\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n        return new Cell(value, this, column, this.dataSet);\n    }\n}","originalLength":5528,"removedExports":[],"renderedExports":["Row"],"renderedLength":1260},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-set/data-set.define.mjs":{"code":"class DataSet {\n    constructor(data = [], \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    columnSettings) {\n        this.columnSettings = columnSettings;\n        this.data = [];\n        this.columns = [];\n        this.rows = [];\n        this.createColumns(columnSettings);\n        this.setData(data);\n        this.createNewRow();\n    }\n    setData(data) {\n        this.data = data;\n        this.createRows();\n    }\n    getColumns() {\n        return this.columns;\n    }\n    getRows() {\n        return this.rows;\n    }\n    getFirstRow() {\n        return this.rows[0];\n    }\n    getLastRow() {\n        return this.rows[this.rows.length - 1];\n    }\n    findRowByData(data) {\n        return this.rows.find((row) => row.getData() === data);\n    }\n    deselectAll() {\n        this.rows.forEach((row) => {\n            row.isSelected = false;\n        });\n        // we need to clear selectedRow field because no one row selected\n        this.selectedRow = undefined;\n    }\n    selectRow(row) {\n        const previousIsSelected = row.isSelected;\n        this.deselectAll();\n        row.isSelected = !previousIsSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    multipleSelectRow(row) {\n        row.isSelected = !row.isSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    selectPreviousRow() {\n        if (this.rows.length > 0) {\n            let index = this.selectedRow ? this.selectedRow.index : 0;\n            if (index > this.rows.length - 1) {\n                index = this.rows.length - 1;\n            }\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n    }\n    selectFirstRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[0]);\n            return this.selectedRow;\n        }\n    }\n    selectLastRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[this.rows.length - 1]);\n            return this.selectedRow;\n        }\n    }\n    selectRowByIndex(index) {\n        const rowsLength = this.rows.length;\n        if (rowsLength === 0) {\n            return;\n        }\n        if (!index) {\n            this.selectFirstRow();\n            return this.selectedRow;\n        }\n        if (index > 0 && index < rowsLength) {\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAll();\n    }\n    willSelectFirstRow() {\n        this.willSelect = 'first';\n    }\n    willSelectLastRow() {\n        this.willSelect = 'last';\n    }\n    select(selectedRowIndex) {\n        if (this.getRows().length === 0) {\n            return;\n        }\n        if (this.willSelect) {\n            if (this.willSelect === 'first') {\n                this.selectFirstRow();\n            }\n            if (this.willSelect === 'last') {\n                this.selectLastRow();\n            }\n            this.willSelect = '';\n        }\n        else {\n            this.selectRowByIndex(selectedRowIndex);\n        }\n        return this.selectedRow;\n    }\n    createNewRow() {\n        this.newRow = new Row(-1, {}, this);\n        this.newRow.isInEditing = true;\n    }\n    /**\n     * Create columns by mapping from the settings\n     *\n     * @param settings\n     * @private\n     */\n    createColumns(settings) {\n        for (const id in settings) {\n            if (settings.hasOwnProperty(id)) {\n                this.columns.push(new Column(id, settings[id], this));\n            }\n        }\n    }\n    /**\n     * Create rows based on current data prepared in data source\n     *\n     * @private\n     */\n    createRows() {\n        this.rows = [];\n        this.data.forEach((el, index) => {\n            this.rows.push(new Row(index, el, this));\n        });\n    }\n}","originalLength":14435,"removedExports":[],"renderedExports":["DataSet"],"renderedLength":3823},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/grid.define.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Grid {\n    constructor(source, settings) {\n        this.createFormShown = false;\n        this.onSelectRowSource = new Subject();\n        this.onDeselectRowSource = new Subject();\n        this.setSettings(settings);\n        this.setSource(source);\n    }\n    detach() {\n        if (this.sourceOnChangedSubscription) {\n            this.sourceOnChangedSubscription.unsubscribe();\n        }\n        if (this.sourceOnUpdatedSubscription) {\n            this.sourceOnUpdatedSubscription.unsubscribe();\n        }\n    }\n    showActionColumn(position) {\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n    }\n    isCurrentActionsPosition(position) {\n        // eslint-disable-next-line eqeqeq\n        return position == this.getSetting('actions.position');\n    }\n    isActionsVisible() {\n        return this\n            .getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n    }\n    isMultiSelectVisible() {\n        return this.getSetting('selectMode') === 'multi';\n    }\n    getNewRow() {\n        return this.dataSet.newRow;\n    }\n    setSettings(settings) {\n        this.settings = settings;\n        this.dataSet = new DataSet([], this.getSetting('columns'));\n        if (this.source) {\n            this.source.refresh();\n        }\n    }\n    getDataSet() {\n        return this.dataSet;\n    }\n    setSource(source) {\n        this.source = this.prepareSource(source);\n        this.detach();\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\n            const changedRow = this.dataSet.findRowByData(data);\n            changedRow.setData(data);\n        });\n    }\n    getSetting(name, defaultValue) {\n        return getDeepFromObject(this.settings, name, defaultValue);\n    }\n    getColumns() {\n        return this.dataSet.getColumns();\n    }\n    getRows() {\n        return this.dataSet.getRows();\n    }\n    selectRow(row) {\n        this.dataSet.selectRow(row);\n    }\n    multipleSelectRow(row) {\n        this.dataSet.multipleSelectRow(row);\n    }\n    onSelectRow() {\n        return this.onSelectRowSource.asObservable();\n    }\n    onDeselectRow() {\n        return this.onDeselectRowSource.asObservable();\n    }\n    edit(row) {\n        row.isInEditing = true;\n    }\n    create(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipAdd) {\n                this.createFormShown = false;\n            }\n            else {\n                this.source.prepend(newData).then(() => {\n                    this.createFormShown = false;\n                    this.dataSet.createNewRow();\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('add.confirmCreate')) {\n            confirmEmitter.emit({\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    save(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipEdit) {\n                row.isInEditing = false;\n            }\n            else {\n                this.source.update(row.getData(), newData).then(() => {\n                    row.isInEditing = false;\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('edit.confirmSave')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    delete(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then(() => {\n            this.source.remove(row.getData());\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('delete.confirmDelete')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    processDataChange(changes) {\n        if (this.shouldProcessChange(changes)) {\n            this.dataSet.setData(changes.elements);\n            if (this.getSetting('selectMode') !== 'multi') {\n                const row = this.determineRowToSelect(changes);\n                if (row) {\n                    this.onSelectRowSource.next(row);\n                }\n                else {\n                    this.onDeselectRowSource.next(null);\n                }\n            }\n        }\n    }\n    shouldProcessChange(changes) {\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes.action) !== -1) {\n            return true;\n        }\n        else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @breaking-change 1.8.0\n     * Need to add `| null` in return type\n     *\n     * TODO: move to selectable? Separate directive\n     */\n    determineRowToSelect(changes) {\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\n            return this.dataSet.select(this.getRowIndexToSelect());\n        }\n        if (this.shouldSkipSelection()) {\n            return null;\n        }\n        if (changes.action === 'remove') {\n            if (changes.elements.length === 0) {\n                // we have to store which one to select as the data will be reloaded\n                this.dataSet.willSelectLastRow();\n            }\n            else {\n                return this.dataSet.selectPreviousRow();\n            }\n        }\n        if (changes.action === 'append') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectLastRow();\n        }\n        if (changes.action === 'add') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'update') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'prepend') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectFirstRow();\n        }\n        return null;\n    }\n    prepareSource(source) {\n        const initialSource = this.getInitialSort();\n        if (initialSource && initialSource.field && initialSource.direction) {\n            source.setSort([initialSource], false);\n        }\n        if (this.getSetting('pager.display') === true) {\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n        }\n        source.refresh();\n        return source;\n    }\n    getInitialSort() {\n        const sortConf = {};\n        this.getColumns().forEach((column) => {\n            if (column.isSortable && column.defaultSortDirection) {\n                sortConf.field = column.id;\n                sortConf.direction = column.defaultSortDirection;\n                sortConf.compare = column.getCompareFunction();\n            }\n        });\n        return sortConf;\n    }\n    getSelectedRows() {\n        return this.dataSet.getRows()\n            .filter(r => r.isSelected);\n    }\n    selectAllRows(status) {\n        this.dataSet.getRows()\n            .forEach(r => r.isSelected = status);\n    }\n    getFirstRow() {\n        return this.dataSet.getFirstRow();\n    }\n    getLastRow() {\n        return this.dataSet.getLastRow();\n    }\n    getSelectionInfo() {\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n        const { perPage, page } = this.getSetting('pager');\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\n    }\n    getRowIndexToSelect() {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\n        const dataAmount = this.source.count();\n        /**\n         * source - contains all table data\n         * dataSet - contains data for current page\n         * selectedRowIndex - contains index for data in all data\n         *\n         * because of that, we need to count index for a specific row in page\n         * if\n         * `switchPageToSelectedRowPage` - we need to change page automatically\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n         *  if we return index witch not points to existing data - no line will be highlighted)\n         */\n        return (switchPageToSelectedRowPage &&\n            selectedRowIndex < dataAmount &&\n            selectedRowIndex >= 0) ?\n            selectedRowIndex % perPage :\n            selectedRowIndex;\n    }\n    getPageToSelect(source) {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\n        let pageToSelect = Math.max(1, page);\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n        }\n        const maxPageAmount = Math.ceil(source.count() / perPage);\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n    }\n    shouldSkipSelection() {\n        /**\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n         *\n         * Therefore, in order to select a row after some changes,\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n         *\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n         *\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n         * because when < 0 all lines must be deselected\n         */\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n        return selectedRowIndex < 0;\n    }\n}","originalLength":37617,"removedExports":[],"renderedExports":["Grid"],"renderedLength":10757},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.component.mjs":{"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction SmartIntelTableComponent_thead_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"thead\", 4);\n        i0.ɵɵlistener(\"create\", function SmartIntelTableComponent_thead_1_Template_thead_create_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.create.emit($event)); })(\"selectAllRows\", function SmartIntelTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onSelectAllRows($event)); })(\"sort\", function SmartIntelTableComponent_thead_1_Template_thead_sort_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.sort($event)); })(\"filter\", function SmartIntelTableComponent_thead_1_Template_thead_filter_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.filter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n    }\n}\nfunction SmartIntelTableComponent_smart_intel_table_pager_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"smart-intel-table-pager\", 5);\n        i0.ɵɵlistener(\"changePage\", function SmartIntelTableComponent_smart_intel_table_pager_3_Template_smart_intel_table_pager_changePage_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.changePage($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n    }\n}\nclass SmartIntelTableComponent {\n    constructor() {\n        this.settings = {};\n        this.rowSelect = new EventEmitter();\n        this.rowDeselect = new EventEmitter();\n        this.userRowSelect = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.create = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.deleteConfirm = new EventEmitter();\n        this.editConfirm = new EventEmitter();\n        this.createConfirm = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.defaultSettings = {\n            mode: 'inline',\n            selectMode: 'single',\n            /**\n             * Points to an element in all data\n             *\n             * when < 0 all lines must be deselected\n             */\n            selectedRowIndex: 0,\n            switchPageToSelectedRowPage: false,\n            hideHeader: false,\n            hideSubHeader: false,\n            actions: {\n                columnTitle: 'Actions',\n                add: true,\n                edit: true,\n                delete: true,\n                custom: [],\n                position: 'left' // left|right\n            },\n            filter: {\n                inputClass: ''\n            },\n            edit: {\n                inputClass: '',\n                editButtonContent: 'Edit',\n                saveButtonContent: 'Update',\n                cancelButtonContent: 'Cancel',\n                confirmSave: false\n            },\n            add: {\n                inputClass: '',\n                addButtonContent: 'Add New',\n                createButtonContent: 'Create',\n                cancelButtonContent: 'Cancel',\n                confirmCreate: false\n            },\n            delete: {\n                deleteButtonContent: 'Delete',\n                confirmDelete: false\n            },\n            attr: {\n                id: '',\n                class: ''\n            },\n            noDataMessage: 'No data found',\n            columns: {},\n            pager: {\n                display: true,\n                page: 1,\n                perPage: 10\n            },\n            rowClassFunction: () => ''\n        };\n        this.isAllSelected = false;\n        this.destroyed$ = new Subject();\n    }\n    ngOnChanges(changes) {\n        if (this.grid) {\n            if (changes.settings) {\n                this.grid.setSettings(this.prepareSettings());\n            }\n            if (changes.source) {\n                this.source = this.prepareSource();\n                this.grid.setSource(this.source);\n            }\n        }\n        else {\n            this.initGrid();\n        }\n        this.tableId = this.grid.getSetting('attr.id');\n        this.tableClass = this.grid.getSetting('attr.class');\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n        if (!this.grid) {\n            return;\n        }\n        this.grid.settings.selectedRowIndex = index;\n        if (this.isIndexOutOfRange(index)) {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n            return;\n        }\n        if (switchPageToSelectedRowPage) {\n            const source = this.source;\n            const paging = source.getPaging();\n            const page = getPageForRowIndex(index, paging.perPage);\n            index %= paging.perPage;\n            this.grid.settings.selectedRowIndex = index;\n            if (page !== paging.page) {\n                source.setPage(page);\n                return;\n            }\n        }\n        const row = this.grid.getRows()[index];\n        if (row) {\n            this.onSelectRow(row);\n        }\n        else {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n        }\n    }\n    editRowSelect(row) {\n        if (this.grid.getSetting('selectMode') === 'multi') {\n            this.onMultipleSelectRow(row);\n        }\n        else {\n            this.onSelectRow(row);\n        }\n    }\n    onUserSelectRow(row) {\n        if (this.grid.getSetting('selectMode') !== 'multi') {\n            this.grid.selectRow(row);\n            this.emitUserSelectRow(row);\n            this.emitSelectRow(row);\n        }\n    }\n    onRowHover(row) {\n        this.rowHover.emit(row);\n    }\n    multipleSelectRow(row) {\n        this.grid.multipleSelectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n    }\n    onSelectAllRows($event) {\n        this.isAllSelected = !this.isAllSelected;\n        this.grid.selectAllRows(this.isAllSelected);\n        this.emitUserSelectRow(null);\n        this.emitSelectRow(null);\n    }\n    onSelectRow(row) {\n        this.grid.selectRow(row);\n        this.emitSelectRow(row);\n    }\n    onMultipleSelectRow(row) {\n        this.emitSelectRow(row);\n    }\n    initGrid() {\n        this.source = this.prepareSource();\n        this.grid = new Grid(this.source, this.prepareSettings());\n        this.subscribeToOnSelectRow();\n        this.subscribeToOnDeselectRow();\n    }\n    prepareSource() {\n        if (this.source instanceof DataSource) {\n            return this.source;\n        }\n        else if (this.source instanceof Array) {\n            return new LocalDataSource(this.source);\n        }\n        return new LocalDataSource();\n    }\n    prepareSettings() {\n        return deepExtend({}, this.defaultSettings, this.settings);\n    }\n    changePage($event) {\n        this.resetAllSelector();\n    }\n    sort($event) {\n        this.resetAllSelector();\n    }\n    filter($event) {\n        this.resetAllSelector();\n    }\n    deselectAllRows() {\n        this.grid.dataSet.deselectAll();\n        this.emitDeselectRow(null);\n    }\n    resetAllSelector() {\n        this.isAllSelected = false;\n    }\n    emitUserSelectRow(row) {\n        const selectedRows = this.grid.getSelectedRows();\n        this.userRowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : []\n        });\n    }\n    emitSelectRow(row) {\n        const data = {\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        };\n        this.rowSelect.emit(data);\n        if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\n            this.rowDeselect.emit(data);\n        }\n    }\n    emitDeselectRow(row) {\n        this.rowDeselect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        });\n    }\n    isIndexOutOfRange(index) {\n        var _a;\n        const dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n    }\n    subscribeToOnSelectRow() {\n        if (this.onSelectRowSubscription) {\n            this.onSelectRowSubscription.unsubscribe();\n        }\n        this.onSelectRowSubscription = this.grid.onSelectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitSelectRow(row);\n        });\n    }\n    subscribeToOnDeselectRow() {\n        if (this.onDeselectRowSubscription) {\n            this.onDeselectRowSubscription.unsubscribe();\n        }\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitDeselectRow(row);\n        });\n    }\n}\nSmartIntelTableComponent.ɵfac = function SmartIntelTableComponent_Factory(t) { return new (t || SmartIntelTableComponent)(); };\nSmartIntelTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SmartIntelTableComponent, selectors: [[\"smart-intel-table\"]], inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 4, vars: 9, consts: [[3, \"id\", \"ngClass\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"smart-table-body\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]], template: function SmartIntelTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0);\n            i0.ɵɵtemplate(1, SmartIntelTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\n            i0.ɵɵelementStart(2, \"tbody\", 2);\n            i0.ɵɵlistener(\"edit\", function SmartIntelTableComponent_Template_tbody_edit_2_listener($event) { return ctx.edit.emit($event); })(\"delete\", function SmartIntelTableComponent_Template_tbody_delete_2_listener($event) { return ctx.delete.emit($event); })(\"custom\", function SmartIntelTableComponent_Template_tbody_custom_2_listener($event) { return ctx.custom.emit($event); })(\"userSelectRow\", function SmartIntelTableComponent_Template_tbody_userSelectRow_2_listener($event) { return ctx.onUserSelectRow($event); })(\"editRowSelect\", function SmartIntelTableComponent_Template_tbody_editRowSelect_2_listener($event) { return ctx.editRowSelect($event); })(\"multipleSelectRow\", function SmartIntelTableComponent_Template_tbody_multipleSelectRow_2_listener($event) { return ctx.multipleSelectRow($event); })(\"rowHover\", function SmartIntelTableComponent_Template_tbody_rowHover_2_listener($event) { return ctx.onRowHover($event); });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(3, SmartIntelTableComponent_smart_intel_table_pager_3_Template, 1, 2, \"smart-intel-table-pager\", 3);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n        }\n    }, dependencies: [i1.NgClass, i1.NgIf, PagerComponent, Ng2SmartTableTbodyComponent, Ng2SmartTableTheadComponent], styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table', template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n  <thead\\n    smart-table-thead\\n    *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n    [grid]=\\\"grid\\\"\\n    [isAllSelected]=\\\"isAllSelected\\\"\\n    [source]=\\\"source\\\"\\n    [createConfirm]=\\\"createConfirm\\\"\\n    (create)=\\\"create.emit($event)\\\"\\n    (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n    (sort)=\\\"sort($event)\\\"\\n    (filter)=\\\"filter($event)\\\"\\n  ></thead>\\n\\n  <tbody\\n    smart-table-body\\n    [grid]=\\\"grid\\\"\\n    [source]=\\\"source\\\"\\n    [deleteConfirm]=\\\"deleteConfirm\\\"\\n    [editConfirm]=\\\"editConfirm\\\"\\n    [rowClassFunction]=\\\"rowClassFunction\\\"\\n    (edit)=\\\"edit.emit($event)\\\"\\n    (delete)=\\\"delete.emit($event)\\\"\\n    (custom)=\\\"custom.emit($event)\\\"\\n    (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n    (editRowSelect)=\\\"editRowSelect($event)\\\"\\n    (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n    (rowHover)=\\\"onRowHover($event)\\\"\\n  ></tbody>\\n</table>\\n\\n<smart-intel-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</smart-intel-table-pager>\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"] }]\n        }], null, { source: [{\n                type: Input\n            }], settings: [{\n                type: Input\n            }], rowSelect: [{\n                type: Output\n            }], rowDeselect: [{\n                type: Output\n            }], userRowSelect: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], create: [{\n                type: Output\n            }], custom: [{\n                type: Output\n            }], deleteConfirm: [{\n                type: Output\n            }], editConfirm: [{\n                type: Output\n            }], createConfirm: [{\n                type: Output\n            }], rowHover: [{\n                type: Output\n            }] });\n})();","originalLength":42396,"removedExports":[],"renderedExports":["SmartIntelTableComponent"],"renderedLength":17035},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/smart-intel-table.module.mjs":{"code":"class SmartIntelTableModule {\n}\nSmartIntelTableModule.ɵfac = function SmartIntelTableModule_Factory(t) { return new (t || SmartIntelTableModule)(); };\nSmartIntelTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: SmartIntelTableModule });\nSmartIntelTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CellModule,\n        FilterModule,\n        PagerModule,\n        TbodyModule,\n        TheadModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        CellModule,\n                        FilterModule,\n                        PagerModule,\n                        TbodyModule,\n                        TheadModule\n                    ],\n                    declarations: [\n                        SmartIntelTableComponent\n                    ],\n                    exports: [\n                        SmartIntelTableComponent\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SmartIntelTableModule, { declarations: [SmartIntelTableComponent], imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            CellModule,\n            FilterModule,\n            PagerModule,\n            TbodyModule,\n            TheadModule], exports: [SmartIntelTableComponent] });\n})();","originalLength":4849,"removedExports":[],"renderedExports":["SmartIntelTableModule"],"renderedLength":1692},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.conf.mjs":{"code":"class ServerSourceConf {\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n        this.endPoint = endPoint ? endPoint : '';\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.sortFieldKey;\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.sortDirKey;\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.pagerPageKey;\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.pagerLimitKey;\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.filterFieldKey;\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.totalKey;\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.dataKey;\n    }\n}\nServerSourceConf.sortFieldKey = '_sort';\nServerSourceConf.sortDirKey = '_order';\nServerSourceConf.pagerPageKey = '_page';\nServerSourceConf.pagerLimitKey = '_limit';\nServerSourceConf.filterFieldKey = '#field#_like';\nServerSourceConf.totalKey = 'x-total-count';\nServerSourceConf.dataKey = '';","originalLength":4901,"removedExports":[],"renderedExports":["ServerSourceConf"],"renderedLength":1131},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/lib/defines/data-source/server-data-source/server-data-source.define.mjs":{"code":"class ServerDataSource extends LocalDataSource {\n    constructor(http, conf = {}) {\n        super();\n        this.http = http;\n        this.lastRequestCount = 0;\n        this.conf = new ServerSourceConf(conf);\n        if (!this.conf.endPoint) {\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n        }\n    }\n    count() {\n        return this.lastRequestCount;\n    }\n    getElements() {\n        /** const observer$ = this.requestElements()\n        .pipe(map(res => {\n          this.lastRequestCount = this.extractTotalFromResponse(res);\n          this.data = this.extractDataFromResponse(res);\n          return this.data;\n        }));\n        return lastValueFrom(observer$);*/\n        return this.requestElements()\n            .pipe(map(res => {\n            this.lastRequestCount = this.extractTotalFromResponse(res);\n            this.data = this.extractDataFromResponse(res);\n            return this.data;\n        })).toPromise(); // TODO dis is deprecated\n    }\n    /**\n     * Extracts array of data from server response\n     *\n     * @param res\n     * @returns\n     */\n    extractDataFromResponse(res) {\n        const rawData = res.body;\n        const data = Boolean(this.conf.dataKey) ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n        if (data instanceof Array) {\n            return data;\n        }\n        throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n    }\n    /**\n     * Extracts total rows count from the server response\n     * Looks for the count in the heders first, then in the response body\n     *\n     * @param res\n     * @returns\n     */\n    extractTotalFromResponse(res) {\n        if (res.headers.has(this.conf.totalKey)) {\n            return Number(res.headers.get(this.conf.totalKey));\n        }\n        else {\n            const rawData = res.body;\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\n        }\n    }\n    requestElements() {\n        const httpParams = this.createRequesParams();\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n    }\n    createRequesParams() {\n        let httpParams = new HttpParams();\n        httpParams = this.addSortRequestParams(httpParams);\n        httpParams = this.addFilterRequestParams(httpParams);\n        return this.addPagerRequestParams(httpParams);\n    }\n    addSortRequestParams(httpParams) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n            });\n        }\n        return httpParams;\n    }\n    addFilterRequestParams(httpParams) {\n        if (this.filterConf.filters) {\n            this.filterConf.filters.forEach((fieldConf) => {\n                if (fieldConf.search) {\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf.field), fieldConf.search);\n                }\n            });\n        }\n        return httpParams;\n    }\n    addPagerRequestParams(httpParams) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\n        }\n        return httpParams;\n    }\n}","originalLength":13787,"removedExports":[],"renderedExports":["ServerDataSource"],"renderedLength":3583},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/public-api.mjs":{"code":"","originalLength":2023,"removedExports":[],"renderedExports":[],"renderedLength":0},"/Users/projects/smart-intel-table/dist/smart-intel-table/esm2020/smart-intel-table.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":524,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewContainerRef, ViewChild, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule, UntypedFormControl, NgControl, ReactiveFormsModule } from '@angular/forms';\nimport * as i1$1 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport { debounceTime, map, distinctUntilChanged, skip, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { HttpParams } from '@angular/common/http';\n\nclass EditCellDefault {\n    constructor() {\n        this.inputClass = '';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    stoppedEditingEvent() {\n        this.cell.getRow().isInEditing = false;\n        return false;\n    }\n    clickedEvent(event) {\n        event.stopPropagation();\n    }\n}\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) { return new (t || EditCellDefault)(); };\nEditCellDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellDefault, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 0, vars: 0, template: function EditCellDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellDefault, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] });\n})();\n\nconst _c0$c = [\"dynamicTarget\"];\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomEditComponent extends EditCellDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.cell && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.cell = this.cell;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.stoppedEditingEvent.subscribe(() => this.stoppedEditingEvent());\n            this.customComponent.instance.editedEvent.subscribe((event) => this.editedEvent(event));\n            this.customComponent.instance.clickedEvent.subscribe((event) => this.clickedEvent(event));\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) { return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomEditComponent, selectors: [[\"table-cell-custom-editor\"]], viewQuery: function CustomEditComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$c, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n        }\n    }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomEditComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-custom-editor',\n                    template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n                }]\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] });\n})();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DefaultEditorBase {\n    constructor() {\n        this.stoppedEditingEvent = new EventEmitter();\n        this.editedEvent = new EventEmitter();\n        this.clickedEvent = new EventEmitter();\n    }\n}\nDefaultEditorBase.ɵfac = function DefaultEditorBase_Factory(t) { return new (t || DefaultEditorBase)(); };\nDefaultEditorBase.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditorBase, selectors: [[\"ng-component\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { stoppedEditingEvent: \"stoppedEditingEvent\", editedEvent: \"editedEvent\", clickedEvent: \"clickedEvent\" }, decls: 0, vars: 0, template: function DefaultEditorBase_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditorBase, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], stoppedEditingEvent: [{\n                type: Output\n            }], editedEvent: [{\n                type: Output\n            }], clickedEvent: [{\n                type: Output\n            }] });\n})();\n\nclass CheckboxEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n    onChange(event) {\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n}\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) { return new (t || CheckboxEditorComponent)(); };\nCheckboxEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxEditorComponent, selectors: [[\"checkbox-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 4, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]], template: function CheckboxEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"input\", 0);\n            i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) { return ctx.onChange($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            let tmp_3_0;\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n        }\n    }, dependencies: [i1.NgClass], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxEditorComponent, [{\n            type: Component,\n            args: [{ selector: 'checkbox-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          type=\"checkbox\"\n          class=\"form-control\"\n          [name]=\"cell.getId()\"\n          [disabled]=\"!cell.isEditable()\"\n          [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n          (click)=\"clickedEvent.emit($event)\"\n          (change)=\"onChange($event)\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], function () { return []; }, null);\n})();\n\nclass CompleterEditorComponent extends DefaultEditorBase {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerStr = '';\n    }\n    ngOnInit() {\n        if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\n            const config = this.cell.getColumn().getConfig().completer;\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n            config.dataService.descriptionField(config.descriptionField);\n        }\n    }\n    onEditedCompleter(event) {\n        this.cell.newValue = event.title;\n        return false;\n    }\n}\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) { return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterEditorComponent, selectors: [[\"completer-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.completerStr = $event; })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.onEditedCompleter($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n        }\n    }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterEditorComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'completer-editor',\n                    template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                    [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                    [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                    [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                    [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `,\n                }]\n        }], function () { return [{ type: i1$1.CompleterService }]; }, null);\n})();\n\nclass InputEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) { return new (t || InputEditorComponent)(); };\nInputEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputEditorComponent, selectors: [[\"input-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function InputEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"input\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n        }\n    }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEditorComponent, [{\n            type: Component,\n            args: [{ selector: 'input-editor', template: `\n    <input [ngClass]=\"inputClass\"\n          class=\"form-control\"\n          [(ngModel)]=\"cell.newValue\"\n          [name]=\"cell.getId()\"\n          [placeholder]=\"cell.getTitle()\"\n          [disabled]=\"!cell.isEditable()\"\n          (click)=\"clickedEvent.emit($event)\"\n          (keydown.enter)=\"editedEvent.emit($event)\"\n          (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], function () { return []; }, null);\n})();\n\nfunction SelectEditorComponent_option_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"option\", 2);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const option_r1 = ctx.$implicit;\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n    }\n}\nclass SelectEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) { return new (t || SelectEditorComponent)(); };\nSelectEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectEditorComponent, selectors: [[\"select-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]], template: function SelectEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"select\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function SelectEditorComponent_Template_select_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function SelectEditorComponent_Template_select_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n            i0.ɵɵtemplate(1, SelectEditorComponent_option_1_Template, 2, 3, \"option\", 1);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            let tmp_4_0;\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.list);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectEditorComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'select-editor',\n                    template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"clickedEvent.emit($event)\"\n            (keydown.enter)=\"editedEvent.emit($event)\"\n            (keydown.esc)=\"stoppedEditingEvent.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `,\n                }]\n        }], function () { return []; }, null);\n})();\n\nclass TextareaEditorComponent extends DefaultEditorBase {\n    constructor() {\n        super();\n    }\n}\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) { return new (t || TextareaEditorComponent)(); };\nTextareaEditorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TextareaEditorComponent, selectors: [[\"textarea-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 5, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]], template: function TextareaEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"textarea\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) { return ctx.cell.newValue = $event; })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) { return ctx.clickedEvent.emit($event); })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) { return ctx.editedEvent.emit($event); })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() { return ctx.stoppedEditingEvent.emit(); });\n            i0.ɵɵtext(1, \"    \");\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n        }\n    }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextareaEditorComponent, [{\n            type: Component,\n            args: [{ selector: 'textarea-editor', template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"clickedEvent.emit($event)\"\n              (keydown.enter)=\"editedEvent.emit($event)\"\n              (keydown.esc)=\"stoppedEditingEvent.emit()\">\n    </textarea>\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], function () { return []; }, null);\n})();\n\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"select-editor\", 5);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_select_editor_1_Template_select_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n    }\n}\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"textarea-editor\", 5);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.clickedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n    }\n}\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"completer-editor\", 7);\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r3.cell);\n    }\n}\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"input-editor\", 5);\n        i0.ɵɵlistener(\"clickedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_clickedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.clickedEvent($event)); })(\"editedEvent\", function DefaultEditComponent_input_editor_5_Template_input_editor_editedEvent_0_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r4 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n    }\n}\nclass DefaultEditComponent extends EditCellDefault {\n    constructor() {\n        super();\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) { return new (t || DefaultEditComponent)(); };\nDefaultEditComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultEditComponent, selectors: [[\"table-cell-default-editor\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"ngSwitch\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"clickedEvent\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\", 4, \"ngSwitchDefault\"], [\"(stoppedEditing\", \"\", \"Event)\", \"stoppedEditingEvent()\", 3, \"cell\", \"inputClass\", \"clickedEvent\", \"editedEvent\"], [3, \"cell\", \"inputClass\", \"clickedEvent\"], [3, \"cell\"]], template: function DefaultEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n            i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n            i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n            i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n            i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n        }\n    }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditComponent, [{\n            type: Component,\n            args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n  <select-editor\\n    *ngSwitchCase=\\\"'list'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </select-editor>\\n\\n  <textarea-editor\\n    *ngSwitchCase=\\\"'textarea'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </textarea-editor>\\n\\n  <checkbox-editor\\n    *ngSwitchCase=\\\"'checkbox'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n  >\\n  </checkbox-editor>\\n\\n  <completer-editor *ngSwitchCase=\\\"'completer'\\\" [cell]=\\\"cell\\\">\\n  </completer-editor>\\n\\n  <input-editor\\n    *ngSwitchDefault\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </input-editor>\\n</div>\\n\" }]\n        }], function () { return []; }, null);\n})();\n\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n        i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n    }\n}\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n        i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nclass EditCellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        this.edited.next(event);\n        return false;\n    }\n    getEditorType() {\n        return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\n    }\n}\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) { return new (t || EditCellComponent)(); };\nEditCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EditCellComponent, selectors: [[\"table-cell-edit-mode\"]], inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, decls: 3, vars: 2, consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function EditCellComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n            i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n        }\n    }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomEditComponent, DefaultEditComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-edit-mode',\n                    template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"editedEvent($event)\">\n        </table-cell-default-editor>\n      </div>\n    `,\n                }]\n        }], null, { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] });\n})();\n\nconst _c0$b = [\"dynamicTarget\"];\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomViewComponent {\n    constructor(resolver) {\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        if (this.cell && !this.customComponent) {\n            this.createCustomComponent();\n            this.callOnComponentInit();\n            this.patchInstance();\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n    createCustomComponent() {\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n    callOnComponentInit() {\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n        // TODO onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\n        onComponentInitFunction && onComponentInitFunction();\n    }\n    patchInstance() {\n        Object.assign(this.customComponent.instance, this.getPatch());\n    }\n    getPatch() {\n        return {\n            value: this.cell.getValue(),\n            rowData: this.cell.getRow().getData()\n        };\n    }\n}\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) { return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomViewComponent, selectors: [[\"custom-view-component\"]], viewQuery: function CustomViewComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$b, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n        }\n    }, inputs: { cell: \"cell\" }, decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomViewComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'custom-view-component',\n                    template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n                }]\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { cell: [{\n                type: Input\n            }], dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] });\n})();\n\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"custom-view-component\", 4);\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n    }\n}\nfunction ViewCellComponent_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 5);\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\n    }\n}\nfunction ViewCellComponent_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n    }\n}\nclass ViewCellComponent {\n}\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) { return new (t || ViewCellComponent)(); };\nViewCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ViewCellComponent, selectors: [[\"table-cell-view-mode\"]], inputs: { cell: \"cell\" }, decls: 4, vars: 3, consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]], template: function ViewCellComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n            i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n            i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n        }\n    }, dependencies: [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CustomViewComponent], encapsulation: 2, changeDetection: 0 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCellComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-view-mode',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `,\n                }]\n        }], null, { cell: [{\n                type: Input\n            }] });\n})();\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n    }\n}\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n        i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.editedEvent($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nclass CellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.mode = 'inline';\n        this.isInEditing = false;\n        this.edited = new EventEmitter();\n    }\n    editedEvent(event) {\n        if (this.isNew) {\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\n        }\n        else {\n            this.grid.save(this.row, this.editConfirm);\n        }\n    }\n}\nCellComponent.ɵfac = function CellComponent_Factory(t) { return new (t || CellComponent)(); };\nCellComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CellComponent, selectors: [[\"smart-intel-table-cell\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\" }, outputs: { edited: \"edited\" }, decls: 2, vars: 2, consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]], template: function CellComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n            i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n        }\n    }, dependencies: [i1.NgIf, EditCellComponent, ViewCellComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-intel-table-cell',\n                    template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"editedEvent($event)\">\n    </table-cell-edit-mode>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], isNew: [{\n                type: Input\n            }], cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], isInEditing: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] });\n})();\n\nconst CELL_COMPONENTS = [\n    CellComponent,\n    EditCellDefault,\n    DefaultEditorBase,\n    CustomEditComponent,\n    DefaultEditComponent,\n    EditCellComponent,\n    CheckboxEditorComponent,\n    CompleterEditorComponent,\n    InputEditorComponent,\n    SelectEditorComponent,\n    TextareaEditorComponent,\n    CustomViewComponent,\n    ViewCellComponent\n];\nclass CellModule {\n}\nCellModule.ɵfac = function CellModule_Factory(t) { return new (t || CellModule)(); };\nCellModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: CellModule });\nCellModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        Ng2CompleterModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        Ng2CompleterModule\n                    ],\n                    declarations: [\n                        ...CELL_COMPONENTS\n                    ],\n                    exports: [\n                        ...CELL_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CellModule, { declarations: [CellComponent,\n            EditCellDefault,\n            DefaultEditorBase,\n            CustomEditComponent,\n            DefaultEditComponent,\n            EditCellComponent,\n            CheckboxEditorComponent,\n            CompleterEditorComponent,\n            InputEditorComponent,\n            SelectEditorComponent,\n            TextareaEditorComponent,\n            CustomViewComponent,\n            ViewCellComponent], imports: [CommonModule,\n            FormsModule,\n            Ng2CompleterModule], exports: [CellComponent,\n            EditCellDefault,\n            DefaultEditorBase,\n            CustomEditComponent,\n            DefaultEditComponent,\n            EditCellComponent,\n            CheckboxEditorComponent,\n            CompleterEditorComponent,\n            InputEditorComponent,\n            SelectEditorComponent,\n            TextareaEditorComponent,\n            CustomViewComponent,\n            ViewCellComponent] });\n})();\n\nclass FilterDefault {\n    constructor() {\n        this.inputClass = '';\n        this.filter = new EventEmitter();\n        this.query = '';\n    }\n    onFilter(query) {\n        this.source.addFilter({\n            field: this.column.id,\n            search: query,\n            filter: this.column.getFilterFunction()\n        });\n    }\n}\nFilterDefault.ɵfac = function FilterDefault_Factory(t) { return new (t || FilterDefault)(); };\nFilterDefault.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterDefault, selectors: [[\"ng-component\"]], inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function FilterDefault_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDefault, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], filter: [{\n                type: Output\n            }] });\n})();\n\nclass DefaultFilter {\n    constructor() {\n        this.filter = new EventEmitter();\n        this.delay = 300;\n    }\n    ngOnDestroy() {\n        if (this.changesSubscription) {\n            this.changesSubscription.unsubscribe();\n        }\n    }\n    setFilter() {\n        this.filter.emit(this.query);\n    }\n}\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) { return new (t || DefaultFilter)(); };\nDefaultFilter.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilter, selectors: [[\"ng-component\"]], inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, decls: 0, vars: 0, template: function DefaultFilter_Template(rf, ctx) { }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilter, [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], null, { query: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Output\n            }] });\n})();\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.resetFilter($event)); });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        let tmp_0_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n    }\n}\nclass CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.filterActive = false;\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        this.changesSubscription = this.inputControl.valueChanges\n            .pipe(debounceTime(this.delay))\n            .subscribe((checked) => {\n            this.filterActive = true;\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n            this.query = checked ? trueVal : falseVal;\n            this.setFilter();\n        });\n    }\n    resetFilter(event) {\n        event.preventDefault();\n        this.query = '';\n        this.inputControl.setValue(false, { emitEvent: false });\n        this.filterActive = false;\n        this.setFilter();\n    }\n}\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) { return new (t || CheckboxFilterComponent)(); };\nCheckboxFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxFilterComponent, selectors: [[\"checkbox-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 2, vars: 3, consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]], template: function CheckboxFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelement(0, \"input\", 0);\n            i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n        }\n    }, dependencies: [i1.NgClass, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'checkbox-filter',\n                    template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n                }]\n        }], function () { return []; }, null);\n})();\n\nclass CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerContent = new Subject();\n    }\n    ngOnInit() {\n        const config = this.column.getFilterConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n        this.changesSubscription = this.completerContent\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((search) => {\n            this.query = search;\n            this.setFilter();\n        });\n    }\n    inputTextChanged(event) {\n        // workaround to trigger the search event when the home/end buttons are clicked\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n        // so here it gets called manually\n        if (event === '') {\n            this.completerContent.next(event);\n        }\n    }\n}\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) { return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService)); };\nCompleterFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CompleterFilterComponent, selectors: [[\"completer-filter\"]], features: [i0.ɵɵInheritDefinitionFeature], decls: 1, vars: 5, consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]], template: function CompleterFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.query = $event; })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) { return ctx.inputTextChanged($event); })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) { return ctx.completerContent.next($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n        }\n    }, dependencies: [i2.NgControlStatus, i2.NgModel, i1$1.CompleterCmp], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'completer-filter',\n                    template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                    (ngModelChange)=\"inputTextChanged($event)\"\n                    [dataService]=\"column.getFilterConfig().completer.dataService\"\n                    [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                    [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                    [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                    (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n                }]\n        }], function () { return [{ type: i1$1.CompleterService }]; }, null);\n})();\n\nclass InputFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.inputControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        if (this.query) {\n            this.inputControl.setValue(this.query);\n        }\n        this.inputControl.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => {\n            this.query = this.inputControl.value;\n            this.setFilter();\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.query) {\n            this.inputControl.setValue(this.query);\n        }\n    }\n}\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) { return new (t || InputFilterComponent)(); };\nInputFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputFilterComponent, selectors: [[\"input-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 3, consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]], template: function InputFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelement(0, \"input\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n        }\n    }, dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'input-filter',\n                    template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.title }}\"/>\n  `,\n                }]\n        }], function () { return []; }, null);\n})();\n\nconst _c0$a = [\"inputControl\"];\nfunction SelectFilterComponent_option_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"option\", 4);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const option_r2 = ctx.$implicit;\n        i0.ɵɵproperty(\"value\", option_r2.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n    }\n}\nclass SelectFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        this.inputControl.valueChanges\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => this.setFilter());\n    }\n}\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) { return new (t || SelectFilterComponent)(); };\nSelectFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SelectFilterComponent, selectors: [[\"select-filter\"]], viewQuery: function SelectFilterComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$a, 7, NgControl);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n        }\n    }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function SelectFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"select\", 0, 1);\n            i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) { return ctx.query = $event; });\n            i0.ɵɵelementStart(2, \"option\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'select-filter',\n                    template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `,\n                }]\n        }], function () { return []; }, { inputControl: [{\n                type: ViewChild,\n                args: ['inputControl', { read: NgControl, static: true }]\n            }] });\n})();\n\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"select-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n    }\n}\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n    }\n}\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"completer-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r9); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n    }\n}\nfunction DefaultFilterComponent_input_filter_4_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"input-filter\", 3);\n        i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_4_Template_input_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r10.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n    }\n}\nclass DefaultFilterComponent extends FilterDefault {\n}\nDefaultFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵDefaultFilterComponent_BaseFactory; return function DefaultFilterComponent_Factory(t) { return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent); }; }();\nDefaultFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DefaultFilterComponent, selectors: [[\"default-table-filter\"]], inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]], template: function DefaultFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementContainerStart(0, 0);\n            i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n            i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n            i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n            i0.ɵɵtemplate(4, DefaultFilterComponent_input_filter_4_Template, 1, 3, \"input-filter\", 2);\n            i0.ɵɵelementContainerEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n        }\n    }, dependencies: [i1.NgClass, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'default-table-filter',\n                    template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                      [query]=\"query\"\n                      [ngClass]=\"inputClass\"\n                      [column]=\"column\"\n                      (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `,\n                }]\n        }], null, { query: [{\n                type: Input\n            }] });\n})();\n\nconst _c0$9 = [\"dynamicTarget\"];\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) { }\nclass CustomFilterComponent extends FilterDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.column && !this.customComponent) {\n            const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.query = this.query;\n            this.customComponent.instance.column = this.column;\n            this.customComponent.instance.source = this.source;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\n        }\n        if (this.customComponent) {\n            this.customComponent.instance.ngOnChanges(changes);\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) { return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver)); };\nCustomFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CustomFilterComponent, selectors: [[\"custom-table-filter\"]], viewQuery: function CustomFilterComponent_Query(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$9, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n        }\n    }, inputs: { query: \"query\" }, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 2, vars: 0, consts: [[\"dynamicTarget\", \"\"]], template: function CustomFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomFilterComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'custom-table-filter',\n                    template: `<ng-template #dynamicTarget></ng-template>`,\n                }]\n        }], function () { return [{ type: i0.ComponentFactoryResolver }]; }, { query: [{\n                type: Input\n            }], dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] });\n})();\n\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n        i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r3.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n    }\n}\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"default-table-filter\", 4);\n        i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) { i0.ɵɵrestoreView(_r6); const ctx_r5 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r5.onFilter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n    }\n}\nfunction FilterComponent_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1);\n        i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n        i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n    }\n}\nclass FilterComponent extends FilterDefault {\n    constructor() {\n        super(...arguments);\n        this.query = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const filterConf = this.source.getFilter();\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n                    this.query = '';\n                    // add a check for existing filters an set the query if one exists for this column\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\n                }\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n                    filterConf.filters.forEach((k, v) => {\n                        if (k.field == this.column.id) {\n                            this.query = k.search;\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\nFilterComponent.ɵfac = /*@__PURE__*/ function () { let ɵFilterComponent_BaseFactory; return function FilterComponent_Factory(t) { return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent); }; }();\nFilterComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FilterComponent, selectors: [[\"smart-intel-table-filter\"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"class\", \"smart-table-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"smart-table-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]], template: function FilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n        }\n    }, dependencies: [i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, DefaultFilterComponent, CustomFilterComponent], styles: [\"[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .smart-table-filter[_ngcontent-%COMP%]     a{font-weight:400}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table-filter', template: `\n      <div class=\"smart-table-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `, styles: [\":host .smart-table-filter ::ng-deep input,:host .smart-table-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .smart-table-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .smart-table-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .smart-table-filter ::ng-deep a{font-weight:400}\\n\"] }]\n        }], null, null);\n})();\n\nconst FILTER_COMPONENTS = [\n    FilterDefault,\n    DefaultFilter,\n    FilterComponent,\n    DefaultFilterComponent,\n    CustomFilterComponent,\n    CheckboxFilterComponent,\n    CompleterFilterComponent,\n    InputFilterComponent,\n    SelectFilterComponent\n];\nclass FilterModule {\n}\nFilterModule.ɵfac = function FilterModule_Factory(t) { return new (t || FilterModule)(); };\nFilterModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FilterModule });\nFilterModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        Ng2CompleterModule\n                    ],\n                    declarations: [\n                        ...FILTER_COMPONENTS\n                    ],\n                    exports: [\n                        ...FILTER_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FilterModule, { declarations: [FilterDefault,\n            DefaultFilter,\n            FilterComponent,\n            DefaultFilterComponent,\n            CustomFilterComponent,\n            CheckboxFilterComponent,\n            CompleterFilterComponent,\n            InputFilterComponent,\n            SelectFilterComponent], imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            Ng2CompleterModule], exports: [FilterDefault,\n            DefaultFilter,\n            FilterComponent,\n            DefaultFilterComponent,\n            CustomFilterComponent,\n            CheckboxFilterComponent,\n            CompleterFilterComponent,\n            InputFilterComponent,\n            SelectFilterComponent] });\n})();\n\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 14);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementStart(2, \"span\", 7);\n        i0.ɵɵtext(3, \"(current)\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const page_r3 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n    }\n}\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 15);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() { i0.ɵɵrestoreView(_r9); const page_r3 = i0.ɵɵnextContext().$implicit; const ctx_r7 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r7.paginate(page_r3)); });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const page_r3 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(page_r3);\n    }\n}\nconst _c0$8 = function (a0) { return { active: a0 }; };\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"li\", 4);\n        i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n        i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const page_r3 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0$8, ctx_r2.getPage() == page_r3));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n    }\n}\nconst _c1$1 = function (a0) { return { disabled: a0 }; };\nfunction PagerComponent_nav_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() { i0.ɵɵrestoreView(_r12); const ctx_r11 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1)); });\n        i0.ɵɵelementStart(4, \"span\", 6);\n        i0.ɵɵtext(5, \"\\u00AB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\", 7);\n        i0.ɵɵtext(7, \"First\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() { i0.ɵɵrestoreView(_r12); const ctx_r13 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r13.getPage() == 1 ? false : ctx_r13.prev()); });\n        i0.ɵɵelementStart(10, \"span\", 6);\n        i0.ɵɵtext(11, \"<\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"span\", 7);\n        i0.ɵɵtext(13, \"Prev\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n        i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() { i0.ɵɵrestoreView(_r12); const ctx_r14 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next()); });\n        i0.ɵɵelementStart(17, \"span\", 6);\n        i0.ɵɵtext(18, \">\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"span\", 7);\n        i0.ɵɵtext(20, \"Next\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() { i0.ɵɵrestoreView(_r12); const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast())); });\n        i0.ɵɵelementStart(23, \"span\", 6);\n        i0.ɵɵtext(24, \"\\u00BB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"span\", 7);\n        i0.ɵɵtext(26, \"Last\");\n        i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1$1, ctx_r0.getPage() == 1));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1$1, ctx_r0.getPage() == 1));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1$1, ctx_r0.getPage() == ctx_r0.getLast()));\n    }\n}\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"option\", 20);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const item_r17 = ctx.$implicit;\n        i0.ɵɵproperty(\"value\", item_r17);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(item_r17);\n    }\n}\nfunction PagerComponent_nav_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\n        i0.ɵɵtext(2, \" Per Page: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"select\", 18);\n        i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r18 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r18.onChangePerPage($event)); })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) { i0.ɵɵrestoreView(_r19); const ctx_r20 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r20.currentPerPage = $event); });\n        i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n    }\n}\nclass PagerComponent {\n    constructor() {\n        this.perPageSelect = [];\n        this.changePage = new EventEmitter();\n        this.count = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                this.page = this.source.getPaging().page;\n                this.perPage = this.source.getPaging().perPage;\n                this.currentPerPage = this.perPage;\n                this.count = this.source.count();\n                if (this.isPageOutOfBounce()) {\n                    this.source.setPage(--this.page);\n                }\n                this.processPageChange(dataChanges);\n                this.initPages();\n            });\n        }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n    processPageChange(changes) {\n        if (changes['action'] === 'prepend') {\n            this.source.setPage(1);\n        }\n        if (changes['action'] === 'append') {\n            this.source.setPage(this.getLast());\n        }\n    }\n    shouldShow() {\n        return this.source.count() > this.perPage;\n    }\n    paginate(page) {\n        this.source.setPage(page);\n        this.page = page;\n        this.changePage.emit({ page });\n        return false;\n    }\n    next() {\n        return this.paginate(this.getPage() + 1);\n    }\n    prev() {\n        return this.paginate(this.getPage() - 1);\n    }\n    getPage() {\n        return this.page;\n    }\n    getPages() {\n        return this.pages;\n    }\n    getLast() {\n        return Math.ceil(this.count / this.perPage);\n    }\n    isPageOutOfBounce() {\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n    }\n    initPages() {\n        const pagesCount = this.getLast();\n        let showPagesCount = 4;\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n        this.pages = [];\n        if (this.shouldShow()) {\n            let middleOne = Math.ceil(showPagesCount / 2);\n            middleOne = this.page >= middleOne ? this.page : middleOne;\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n            const firstOne = lastOne - showPagesCount + 1;\n            for (let i = firstOne; i <= lastOne; i++) {\n                this.pages.push(i);\n            }\n        }\n    }\n    onChangePerPage(event) {\n        if (this.currentPerPage) {\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n                this.source.getPaging().perPage = null;\n            }\n            else {\n                this.source.getPaging().perPage = this.currentPerPage * 1;\n                this.source.refresh();\n            }\n            this.initPages();\n        }\n    }\n}\nPagerComponent.ɵfac = function PagerComponent_Factory(t) { return new (t || PagerComponent)(); };\nPagerComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PagerComponent, selectors: [[\"smart-intel-table-pager\"]], inputs: { source: \"source\", perPageSelect: \"perPageSelect\" }, outputs: { changePage: \"changePage\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"smart-table-pagination-nav\", 4, \"ngIf\"], [\"class\", \"smart-table-pagination-per-page\", 4, \"ngIf\"], [1, \"smart-table-pagination-nav\"], [1, \"smart-table-pagination\", \"pagination\"], [1, \"smart-table-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"smart-table-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"smart-table-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"smart-table-page-link page-link\", 4, \"ngIf\"], [\"class\", \"smart-table-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"smart-table-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"smart-table-page-link\", \"page-link\", 3, \"click\"], [1, \"smart-table-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function PagerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n            i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel], styles: [\".smart-table-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination[_ngcontent-%COMP%]   .smart-table-page-item[_ngcontent-%COMP%]{display:inline}.smart-table-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .smart-table-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table-pager', template: `\n    <nav *ngIf=\"shouldShow()\" class=\"smart-table-pagination-nav\">\n      <ul class=\"smart-table-pagination pagination\">\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"smart-table-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"smart-table-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"smart-table-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"smart-table-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"smart-table-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"smart-table-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `, styles: [\".smart-table-pagination{display:inline-flex;font-size:.875em;padding:0}.smart-table-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.smart-table-pagination .smart-table-page-item{display:inline}.smart-table-pagination .page-link-next,.smart-table-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"] }]\n        }], null, { source: [{\n                type: Input\n            }], perPageSelect: [{\n                type: Input\n            }], changePage: [{\n                type: Output\n            }] });\n})();\n\nclass PagerModule {\n}\nPagerModule.ɵfac = function PagerModule_Factory(t) { return new (t || PagerModule)(); };\nPagerModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: PagerModule });\nPagerModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule\n                    ],\n                    declarations: [\n                        PagerComponent\n                    ],\n                    exports: [\n                        PagerComponent\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(PagerModule, { declarations: [PagerComponent], imports: [CommonModule,\n            FormsModule], exports: [PagerComponent] });\n})();\n\nclass TbodyCreateCancelComponent {\n    onSave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.grid.save(this.row, this.editConfirm);\n    }\n    onCancelEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.row.isInEditing = false;\n    }\n    ngOnChanges() {\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n}\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) { return new (t || TbodyCreateCancelComponent)(); };\nTbodyCreateCancelComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCreateCancelComponent, selectors: [[\"smart-table-body-create-cancel\"]], inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-cancel\", 3, \"innerHTML\", \"click\"]], template: function TbodyCreateCancelComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"a\", 0);\n            i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) { return ctx.onSave($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(1, \"a\", 1);\n            i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) { return ctx.onCancelEdit($event); });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-body-create-cancel',\n                    template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }] });\n})();\n\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onEdit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\n    }\n}\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 3);\n        i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onDelete($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\n    }\n}\nclass TbodyEditDeleteComponent {\n    constructor() {\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n    }\n    onEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.editRowSelect.emit(this.row);\n        if (this.grid.getSetting('mode') === 'external') {\n            this.edit.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.edit(this.row);\n        }\n    }\n    onDelete(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.delete.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.delete(this.row, this.deleteConfirm);\n        }\n    }\n    ngOnChanges() {\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n}\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) { return new (t || TbodyEditDeleteComponent)(); };\nTbodyEditDeleteComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyEditDeleteComponent, selectors: [[\"smart-table-body-edit-delete\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-delete-delete\", 3, \"innerHTML\", \"click\"]], template: function TbodyEditDeleteComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n            i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n        }\n    }, dependencies: [i1.NgIf], encapsulation: 2, changeDetection: 0 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-body-edit-delete',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"smart-table-action smart-table-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"smart-table-action smart-table-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], deleteConfirm: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], edit: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], editRowSelect: [{\n                type: Output\n            }] });\n})();\n\nfunction TbodyCustomComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) { const restoredCtx = i0.ɵɵrestoreView(_r3); const action_r1 = restoredCtx.$implicit; const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.onCustom(action_r1, $event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const action_r1 = ctx.$implicit;\n        i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\n    }\n}\nclass TbodyCustomComponent {\n    constructor() {\n        this.custom = new EventEmitter();\n    }\n    onCustom(action, event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.custom.emit({\n            action: action.name,\n            data: this.row.getData(),\n            source: this.source\n        });\n    }\n}\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) { return new (t || TbodyCustomComponent)(); };\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TbodyCustomComponent, selectors: [[\"smart-table-body-custom\"]], inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\"]], template: function TbodyCustomComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n        }\n    }, dependencies: [i1.NgForOf], encapsulation: 2, changeDetection: 0 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-body-custom',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\n        class=\"smart-table-action smart-table-action-custom-custom\" \n        [innerHTML]=\"action.title\"\n        (click)=\"onCustom(action, $event)\"></a>\n        `\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], custom: [{\n                type: Output\n            }] });\n})();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0$7 = [\"smart-table-body\", \"\"];\nfunction Ng2SmartTableTbodyComponent_tr_0_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 6);\n        i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_td_1_Template_td_click_0_listener() { i0.ɵɵrestoreView(_r11); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.multipleSelectRow.emit(row_r2)); });\n        i0.ɵɵelement(1, \"input\", 7);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n        i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r13 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r13.custom.emit($event)); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n        i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r15 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r15.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r14); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r17 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r17.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_2_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r14); const ctx_r19 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r19.editRowSelect.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r4 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"td\", 8);\n        i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r5 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"td\");\n        i0.ɵɵelement(1, \"smart-intel-table-cell\", 12);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const cell_r22 = ctx.$implicit;\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r6 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"cell\", cell_r22)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"td\", 8);\n        i0.ɵɵelement(1, \"smart-table-body-create-cancel\", 11);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r7 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_0_td_6_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r26 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 8)(1, \"smart-table-body-custom\", 9);\n        i0.ɵɵlistener(\"custom\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_custom_custom_1_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r25 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r25.custom.emit($event)); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"smart-table-body-edit-delete\", 10);\n        i0.ɵɵlistener(\"edit\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_edit_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r27 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r27.edit.emit(row_r2)); })(\"delete\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_delete_2_listener() { i0.ɵɵrestoreView(_r26); const row_r2 = i0.ɵɵnextContext().$implicit; const ctx_r29 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r29.delete.emit(row_r2)); })(\"editRowSelect\", function Ng2SmartTableTbodyComponent_tr_0_td_6_Template_smart_table_body_edit_delete_editRowSelect_2_listener($event) { i0.ɵɵrestoreView(_r26); const ctx_r31 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r31.editRowSelect.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const row_r2 = i0.ɵɵnextContext().$implicit;\n        const ctx_r8 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    }\n}\nconst _c1 = function (a0) { return { selected: a0 }; };\nfunction Ng2SmartTableTbodyComponent_tr_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r34 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\", 2);\n        i0.ɵɵlistener(\"click\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_click_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r33 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r33.userSelectRow.emit(row_r2)); })(\"mouseover\", function Ng2SmartTableTbodyComponent_tr_0_Template_tr_mouseover_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r34); const row_r2 = restoredCtx.$implicit; const ctx_r35 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r35.rowHover.emit(row_r2)); });\n        i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_0_td_1_Template, 2, 1, \"td\", 3);\n        i0.ɵɵtemplate(2, Ng2SmartTableTbodyComponent_tr_0_td_2_Template, 3, 8, \"td\", 4);\n        i0.ɵɵtemplate(3, Ng2SmartTableTbodyComponent_tr_0_td_3_Template, 2, 3, \"td\", 4);\n        i0.ɵɵtemplate(4, Ng2SmartTableTbodyComponent_tr_0_td_4_Template, 2, 8, \"td\", 5);\n        i0.ɵɵtemplate(5, Ng2SmartTableTbodyComponent_tr_0_td_5_Template, 2, 3, \"td\", 4);\n        i0.ɵɵtemplate(6, Ng2SmartTableTbodyComponent_tr_0_td_6_Template, 3, 8, \"td\", 4);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const row_r2 = ctx.$implicit;\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(8, _c1, row_r2.isSelected));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    }\n}\nfunction Ng2SmartTableTbodyComponent_tr_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n    }\n}\nclass Ng2SmartTableTbodyComponent {\n    constructor() {\n        this.save = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.edited = new EventEmitter();\n        this.userSelectRow = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n        this.multipleSelectRow = new EventEmitter();\n        this.rowHover = new EventEmitter();\n    }\n    get tableColumnsCount() {\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n        return this.grid.getColumns().length + actionColumns;\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.mode = this.grid.getSetting('mode');\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nNg2SmartTableTbodyComponent.ɵfac = function Ng2SmartTableTbodyComponent_Factory(t) { return new (t || Ng2SmartTableTbodyComponent)(); };\nNg2SmartTableTbodyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTbodyComponent, selectors: [[\"\", \"smart-table-body\", \"\"]], inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$7, decls: 2, vars: 2, consts: [[\"class\", \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"smart-table-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"smart-table-actions smart-table-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\", \"smart-table-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngModel\"], [1, \"smart-table-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"]], template: function Ng2SmartTableTbodyComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, Ng2SmartTableTbodyComponent_tr_0_Template, 7, 10, \"tr\", 0);\n            i0.ɵɵtemplate(1, Ng2SmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel, CellComponent, TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent], styles: [\"[_nghost-%COMP%]   .smart-table-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .smart-table-row[_ngcontent-%COMP%]   .smart-table-actions.smart-table-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     smart-table-body-edit-delete a:first-child, [_nghost-%COMP%]     smart-table-body-create-cancel a:first-child{margin-right:.25rem}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTbodyComponent, [{\n            type: Component,\n            args: [{ selector: '[smart-table-body]', template: \"<tr\\n  *ngFor=\\\"let row of grid.getRows()\\\"\\n  (click)=\\\"userSelectRow.emit(row)\\\"\\n  (mouseover)=\\\"rowHover.emit(row)\\\"\\n  class=\\\"smart-table-row\\\"\\n  [className]=\\\"rowClassFunction(row)\\\"\\n  [ngClass]=\\\"{ selected: row.isSelected }\\\"\\n>\\n  <td\\n    *ngIf=\\\"isMultiSelectVisible\\\"\\n    class=\\\"smart-table-actions smart-table-action-multiple-select\\\"\\n    (click)=\\\"multipleSelectRow.emit(row)\\\"\\n  >\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\" />\\n  </td>\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <smart-intel-table-cell\\n      [cell]=\\\"cell\\\"\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [isNew]=\\\"false\\\"\\n      [mode]=\\\"mode\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [inputClass]=\\\"editInputClass\\\"\\n      [isInEditing]=\\\"row.isInEditing\\\"\\n    >\\n    </smart-intel-table-cell>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\", styles: [\":host .smart-table-row.selected{background:rgba(0,0,0,.05)}:host .smart-table-row .smart-table-actions.smart-table-action-multiple-select{text-align:center}:host ::ng-deep smart-table-body-edit-delete a:first-child,:host ::ng-deep smart-table-body-create-cancel a:first-child{margin-right:.25rem}\\n\"] }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], deleteConfirm: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], rowClassFunction: [{\n                type: Input\n            }], save: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], custom: [{\n                type: Output\n            }], edited: [{\n                type: Output\n            }], userSelectRow: [{\n                type: Output\n            }], editRowSelect: [{\n                type: Output\n            }], multipleSelectRow: [{\n                type: Output\n            }], rowHover: [{\n                type: Output\n            }] });\n})();\n\nconst TBODY_COMPONENTS = [\n    TbodyCreateCancelComponent,\n    TbodyEditDeleteComponent,\n    TbodyCustomComponent,\n    Ng2SmartTableTbodyComponent\n];\nclass TbodyModule {\n}\nTbodyModule.ɵfac = function TbodyModule_Factory(t) { return new (t || TbodyModule)(); };\nTbodyModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TbodyModule });\nTbodyModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        CellModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        CellModule\n                    ],\n                    declarations: [\n                        ...TBODY_COMPONENTS\n                    ],\n                    exports: [\n                        ...TBODY_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TbodyModule, { declarations: [TbodyCreateCancelComponent,\n            TbodyEditDeleteComponent,\n            TbodyCustomComponent,\n            Ng2SmartTableTbodyComponent], imports: [CommonModule,\n            FormsModule,\n            CellModule], exports: [TbodyCreateCancelComponent,\n            TbodyEditDeleteComponent,\n            TbodyCustomComponent,\n            Ng2SmartTableTbodyComponent] });\n})();\n\nconst _c0$6 = [\"smart-table-add-button\", \"\"];\nfunction AddButtonComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r2); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.onAdd($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\n    }\n}\nclass AddButtonComponent {\n    constructor(ref) {\n        this.ref = ref;\n        this.create = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions-title', 'smart-table-actions-title-add');\n    }\n    ngOnChanges() {\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n    onAdd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.create.emit({\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.createFormShown = true;\n        }\n    }\n}\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) { return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nAddButtonComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddButtonComponent, selectors: [[\"\", \"smart-table-add-button\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$6, decls: 1, vars: 1, consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-add\", 3, \"innerHTML\", \"click\"]], template: function AddButtonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n        }\n    }, dependencies: [i1.NgIf], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddButtonComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-add-button]',\n                    template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"smart-table-action smart-table-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `,\n                }]\n        }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] });\n})();\n\nconst _c0$5 = [\"smart-table-thead-filters-row\", \"\"];\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"th\");\n    }\n}\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 4);\n        i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.create.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n    }\n}\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\")(1, \"smart-intel-table-filter\", 5);\n        i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_smart_intel_table_filter_filter_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.filter.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const column_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n    }\n}\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 6);\n        i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.create.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n    }\n}\nclass TheadFitlersRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) { return new (t || TheadFitlersRowComponent)(); };\nTheadFitlersRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFitlersRowComponent, selectors: [[\"\", \"smart-table-thead-filters-row\", \"\"]], inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$5, decls: 4, vars: 4, consts: [[4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"smart-table-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]], template: function TheadFitlersRowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n            i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n            i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n            i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n        }\n    }, dependencies: [i1.NgForOf, i1.NgIf, FilterComponent, AddButtonComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-thead-filters-row]',\n                    template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th smart-table-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"smart-table-th {{ column.id }}\">\n      <smart-intel-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </smart-intel-table-filter>\n    </th>\n    <th smart-table-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }], filter: [{\n                type: Output\n            }] });\n})();\n\nclass ActionsComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n}\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) { return new (t || ActionsComponent)(); };\nActionsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsComponent, selectors: [[\"ng2-st-actions\"]], inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-add-cancel\", 3, \"innerHTML\", \"click\"]], template: function ActionsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"a\", 0);\n            i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) { $event.preventDefault(); return ctx.create.emit($event); });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(1, \"a\", 1);\n            i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) { $event.preventDefault(); return ctx.grid.createFormShown = false; });\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'ng2-st-actions',\n                    template: `\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"smart-table-action smart-table-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] });\n})();\n\nconst _c0$4 = [\"smart-table-thead-form-row\", \"\"];\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"td\");\n    }\n}\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n        i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onCreate($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n    }\n}\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\")(1, \"smart-intel-table-cell\", 5);\n        i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_smart_intel_table_cell_edited_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.onCreate($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const cell_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n    }\n}\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"td\", 3)(1, \"ng2-st-actions\", 4);\n        i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_ng2_st_actions_create_1_listener($event) { i0.ɵɵrestoreView(_r10); const ctx_r9 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r9.onCreate($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n    }\n}\nclass TheadFormRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    onCreate(event) {\n        event.stopPropagation();\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) { return new (t || TheadFormRowComponent)(); };\nTheadFormRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadFormRowComponent, selectors: [[\"\", \"smart-table-thead-form-row\", \"\"]], inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$4, decls: 4, vars: 3, consts: [[4, \"ngIf\"], [\"class\", \"smart-table-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"smart-table-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]], template: function TheadFormRowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n            i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n            i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n            i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n        }\n    }, dependencies: [i1.NgForOf, i1.NgIf, CellComponent, ActionsComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFormRowComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-thead-form-row]',\n                    template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <smart-intel-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </smart-intel-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"smart-table-actions\">\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\n      </td>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] });\n})();\n\nconst _c0$3 = [\"ng2-st-actions-title\", \"\"];\nclass ActionsTitleComponent {\n    constructor(ref) {\n        this.ref = ref;\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('smart-table-actions');\n    }\n    ngOnChanges() {\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n}\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) { return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef)); };\nActionsTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ActionsTitleComponent, selectors: [[\"\", \"ng2-st-actions-title\", \"\"]], inputs: { grid: \"grid\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$3, decls: 2, vars: 1, consts: [[1, \"smart-table-title\"]], template: function ActionsTitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n        }\n    }, encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTitleComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[ng2-st-actions-title]',\n                    template: `\n    <div class=\"smart-table-title\">{{ actionsColumnTitle }}</div>\n  `,\n                }]\n        }], function () { return [{ type: i0.ElementRef }]; }, { grid: [{\n                type: Input\n            }] });\n})();\n\nconst _c0$2 = [\"smart-table-checkbox-select-all\", \"\"];\nclass CheckboxSelectAllComponent {\n}\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) { return new (t || CheckboxSelectAllComponent)(); };\nCheckboxSelectAllComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: CheckboxSelectAllComponent, selectors: [[\"\", \"smart-table-checkbox-select-all\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, attrs: _c0$2, decls: 1, vars: 1, consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]], template: function CheckboxSelectAllComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelement(0, \"input\", 0);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n        }\n    }, dependencies: [i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-checkbox-select-all]',\n                    template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }] });\n})();\n\nfunction TitleComponent_a_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2._sort($event)); });\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n    }\n}\nfunction TitleComponent_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 3);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r1.column.title);\n    }\n}\nclass TitleComponent {\n    constructor() {\n        this.currentDirection = '';\n        this.sort = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const sortConf = this.source.getSort();\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n                    this.currentDirection = sortConf[0]['direction'];\n                }\n                else {\n                    this.currentDirection = '';\n                }\n                sortConf.forEach((fieldConf) => {\n                });\n            });\n        }\n    }\n    _sort(event) {\n        event.preventDefault();\n        this.changeSortDirection();\n        this.source.setSort([\n            {\n                field: this.column.id,\n                direction: this.currentDirection,\n                compare: this.column.getCompareFunction(),\n            },\n        ]);\n        this.sort.emit(null);\n    }\n    changeSortDirection() {\n        if (this.currentDirection) {\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n            this.currentDirection = newDirection;\n        }\n        else {\n            this.currentDirection = this.column.sortDirection;\n        }\n        return this.currentDirection;\n    }\n}\nTitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(); };\nTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TitleComponent, selectors: [[\"smart-intel-table-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"href\", \"#\", \"class\", \"smart-table-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"smart-table-sort\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"smart-table-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"smart-table-sort\"]], template: function TitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n            i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n        }\n    }, dependencies: [i1.NgClass, i1.NgIf], styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table-title', template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"smart-table-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"smart-table-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\n        }], null, { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }] });\n})();\n\nclass ColumnTitleComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n    }\n}\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) { return new (t || ColumnTitleComponent)(); };\nColumnTitleComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ColumnTitleComponent, selectors: [[\"smart-table-column-title\"]], inputs: { column: \"column\", source: \"source\" }, outputs: { sort: \"sort\" }, decls: 2, vars: 2, consts: [[1, \"smart-table-title\"], [3, \"source\", \"column\", \"sort\"]], template: function ColumnTitleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"smart-intel-table-title\", 1);\n            i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_smart_intel_table_title_sort_1_listener($event) { return ctx.sort.emit($event); });\n            i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column);\n        }\n    }, dependencies: [TitleComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnTitleComponent, [{\n            type: Component,\n            args: [{\n                    selector: 'smart-table-column-title',\n                    template: `\n    <div class=\"smart-table-title\">\n      <smart-intel-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-intel-table-title>\n    </div>\n  `,\n                }]\n        }], null, { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }] });\n})();\n\nconst _c0$1 = [\"smart-table-thead-titles-row\", \"\"];\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 3);\n        i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.selectAllRows.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n    }\n}\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"th\", 4);\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n    }\n}\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"th\", 5)(1, \"smart-table-column-title\", 6);\n        i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_smart_table_column_title_sort_1_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.sort.emit($event)); });\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const column_r6 = ctx.$implicit;\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵclassMapInterpolate1(\"smart-table-th \", column_r6.id, \"\");\n        i0.ɵɵstyleProp(\"width\", column_r6.width);\n        i0.ɵɵproperty(\"ngClass\", column_r6.class);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6);\n    }\n}\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"th\", 4);\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n    }\n}\nclass TheadTitlesRowComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) { return new (t || TheadTitlesRowComponent)(); };\nTheadTitlesRowComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TheadTitlesRowComponent, selectors: [[\"\", \"smart-table-thead-titles-row\", \"\"]], inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0$1, decls: 4, vars: 4, consts: [[\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"smart-table-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"ng2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"sort\"]], template: function TheadTitlesRowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n            i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n            i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 2, 8, \"th\", 2);\n            i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n        }\n    }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, ActionsTitleComponent, CheckboxSelectAllComponent, ColumnTitleComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\n            type: Component,\n            args: [{\n                    selector: '[smart-table-thead-titles-row]',\n                    template: `\n    <th smart-table-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                  [grid]=\"grid\"\n                                  [source]=\"source\"\n                                  [isAllSelected]=\"isAllSelected\"\n                                  (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"smart-table-th {{ column.id }}\"\n        [ngClass]=\"column.class\"\n        [style.width]=\"column.width\">\n      <smart-table-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></smart-table-column-title>\n    </th>\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `,\n                }]\n        }], null, { grid: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], selectAllRows: [{\n                type: Output\n            }] });\n})();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst _c0 = [\"smart-table-thead\", \"\"];\nfunction Ng2SmartTableTheadComponent_tr_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\", 3);\n        i0.ɵɵlistener(\"sort\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r3.sort.emit($event)); })(\"selectAllRows\", function Ng2SmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.selectAllRows.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n    }\n}\nfunction Ng2SmartTableTheadComponent_tr_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tr\", 4);\n        i0.ɵɵlistener(\"create\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.create.emit($event)); })(\"filter\", function Ng2SmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) { i0.ɵɵrestoreView(_r7); const ctx_r8 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r8.filter.emit($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n    }\n}\nfunction Ng2SmartTableTheadComponent_tr_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelement(0, \"tr\", 5);\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n    }\n}\nclass Ng2SmartTableTheadComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n}\nNg2SmartTableTheadComponent.ɵfac = function Ng2SmartTableTheadComponent_Factory(t) { return new (t || Ng2SmartTableTheadComponent)(); };\nNg2SmartTableTheadComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Ng2SmartTableTheadComponent, selectors: [[\"\", \"smart-table-thead\", \"\"]], inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, features: [i0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 3, vars: 3, consts: [[\"smart-table-thead-titles-row\", \"\", \"class\", \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\", 4, \"ngIf\"], [\"smart-table-thead-filters-row\", \"\", \"class\", \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"smart-table-thead-titles-row\", \"\", 1, \"smart-table-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"selectAllRows\"], [\"smart-table-thead-filters-row\", \"\", 1, \"smart-table-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"smart-table-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]], template: function Ng2SmartTableTheadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, Ng2SmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n            i0.ɵɵtemplate(1, Ng2SmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n            i0.ɵɵtemplate(2, Ng2SmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n        }\n    }, dependencies: [i1.NgIf, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent], encapsulation: 2 });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2SmartTableTheadComponent, [{\n            type: Component,\n            args: [{ selector: '[smart-table-thead]', template: \"<tr\\n  smart-table-thead-titles-row\\n  *ngIf=\\\"!isHideHeader\\\"\\n  class=\\\"smart-table-titles\\\"\\n  [grid]=\\\"grid\\\"\\n  [isAllSelected]=\\\"isAllSelected\\\"\\n  [source]=\\\"source\\\"\\n  (sort)=\\\"sort.emit($event)\\\"\\n  (selectAllRows)=\\\"selectAllRows.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-filters-row\\n  *ngIf=\\\"!isHideSubHeader\\\"\\n  class=\\\"smart-table-filters\\\"\\n  [grid]=\\\"grid\\\"\\n  [source]=\\\"source\\\"\\n  (create)=\\\"create.emit($event)\\\"\\n  (filter)=\\\"filter.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-form-row\\n  *ngIf=\\\"grid.createFormShown\\\"\\n  [grid]=\\\"grid\\\"\\n  [createConfirm]=\\\"createConfirm\\\"\\n></tr>\\n\" }]\n        }], null, { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], selectAllRows: [{\n                type: Output\n            }], create: [{\n                type: Output\n            }], filter: [{\n                type: Output\n            }] });\n})();\n\nconst THEAD_COMPONENTS = [\n    ActionsComponent,\n    ActionsTitleComponent,\n    AddButtonComponent,\n    CheckboxSelectAllComponent,\n    ColumnTitleComponent,\n    TitleComponent,\n    TheadFitlersRowComponent,\n    TheadFormRowComponent,\n    TheadTitlesRowComponent,\n    Ng2SmartTableTheadComponent\n];\nclass TheadModule {\n}\nTheadModule.ɵfac = function TheadModule_Factory(t) { return new (t || TheadModule)(); };\nTheadModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: TheadModule });\nTheadModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        FilterModule,\n                        CellModule\n                    ],\n                    declarations: [\n                        ...THEAD_COMPONENTS\n                    ],\n                    exports: [\n                        ...THEAD_COMPONENTS\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TheadModule, { declarations: [ActionsComponent,\n            ActionsTitleComponent,\n            AddButtonComponent,\n            CheckboxSelectAllComponent,\n            ColumnTitleComponent,\n            TitleComponent,\n            TheadFitlersRowComponent,\n            TheadFormRowComponent,\n            TheadTitlesRowComponent,\n            Ng2SmartTableTheadComponent], imports: [CommonModule,\n            FormsModule,\n            FilterModule,\n            CellModule], exports: [ActionsComponent,\n            ActionsTitleComponent,\n            AddButtonComponent,\n            CheckboxSelectAllComponent,\n            ColumnTitleComponent,\n            TitleComponent,\n            TheadFitlersRowComponent,\n            TheadFormRowComponent,\n            TheadTitlesRowComponent,\n            Ng2SmartTableTheadComponent] });\n})();\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass DataSource {\n    constructor() {\n        this.onChangedSource = new Subject();\n        this.onAddedSource = new Subject();\n        this.onUpdatedSource = new Subject();\n        this.onRemovedSource = new Subject();\n    }\n    refresh() {\n        this.emitOnChanged('refresh');\n    }\n    load(data) {\n        this.emitOnChanged('load');\n        return Promise.resolve();\n    }\n    onChanged() {\n        return this.onChangedSource.asObservable();\n    }\n    onAdded() {\n        return this.onAddedSource.asObservable();\n    }\n    onUpdated() {\n        return this.onUpdatedSource.asObservable();\n    }\n    onRemoved() {\n        return this.onRemovedSource.asObservable();\n    }\n    prepend(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('prepend');\n        return Promise.resolve();\n    }\n    append(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('append');\n        return Promise.resolve();\n    }\n    add(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('add');\n        return Promise.resolve();\n    }\n    remove(element) {\n        this.emitOnRemoved(element);\n        this.emitOnChanged('remove');\n        return Promise.resolve();\n    }\n    update(element, values) {\n        this.emitOnUpdated(element);\n        this.emitOnChanged('update');\n        return Promise.resolve();\n    }\n    empty() {\n        this.emitOnChanged('empty');\n        return Promise.resolve();\n    }\n    setSort(conf, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('sort');\n        }\n    }\n    setFilter(conf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    addFilter(fieldConf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    setPaging(page, perPage, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('paging');\n        }\n    }\n    setPage(page, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('page');\n        }\n    }\n    emitOnRemoved(element) {\n        this.onRemovedSource.next(element);\n    }\n    emitOnUpdated(element) {\n        this.onUpdatedSource.next(element);\n    }\n    emitOnAdded(element) {\n        this.onAddedSource.next(element);\n    }\n    emitOnChanged(action) {\n        this.getElements().then((elements) => this.onChangedSource.next({\n            action,\n            elements,\n            paging: this.getPaging(),\n            filter: this.getFilter(),\n            sort: this.getSort()\n        }));\n    }\n}\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nconst deepExtend = (...objects) => {\n    if (objects.length < 1 || typeof objects[0] !== 'object') {\n        return false;\n    }\n    if (objects.length < 2) {\n        return objects[0];\n    }\n    const target = objects[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(objects, 1);\n    let val;\n    let src;\n    args.forEach((obj) => {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach((key) => {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = cloneDeep(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nconst getDeepFromObject = (object = {}, name, defaultValue) => {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object);\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n};\nconst getPageForRowIndex = (index, perPage) => \n// we need to add 1 to convert 0-based index to 1-based page number.\nMath.floor(index / perPage) + 1;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst filterValues = (value, search) => value.toString().toLowerCase().includes(search.toString().toLowerCase());\nclass LocalFilter {\n    static filter(data, field, search, customFilter) {\n        const filter = customFilter ? customFilter : filterValues;\n        return data.filter((el) => {\n            const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n            // return filter.call(null, value, search); // FIXME just fallback dis in case direct call not working\n            return filter(null, value, search);\n        });\n    }\n}\n\nclass LocalPager {\n    static paginate(data, page, perPage) {\n        return data.slice(perPage * (page - 1), perPage * page);\n    }\n}\n\nconst compareValues = (direction, a, b) => {\n    if (a < b) {\n        return -1 * direction;\n    }\n    if (a > b) {\n        return direction;\n    }\n    return 0;\n};\nclass LocalSorter {\n    static sort(data, field, direction, customCompare) {\n        const dir = (direction === 'asc') ? 1 : -1;\n        const compare = customCompare ? customCompare : compareValues;\n        // return data.sort((a, b) => compare.call(null, dir, a[field], b[field])); // FIXME fallback to dis in cas direct call fails\n        return data.sort((a, b) => compare(null, dir, a[field], b[field]));\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-return */\nclass LocalDataSource extends DataSource {\n    constructor(data = []) {\n        super();\n        this.data = [];\n        this.filteredAndSorted = [];\n        this.sortConf = [];\n        this.filterConf = {\n            filters: [],\n            andOperator: true\n        };\n        this.pagingConf = {};\n        this.data = data;\n    }\n    load(data) {\n        this.data = data;\n        return super.load(data);\n    }\n    prepend(element) {\n        this.reset(true);\n        this.data.unshift(element);\n        return super.prepend(element);\n    }\n    append(element) {\n        this.reset(true);\n        this.data.push(element);\n        return super.append(element);\n    }\n    add(element) {\n        this.data.push(element);\n        return super.add(element);\n    }\n    remove(element) {\n        this.data = this.data.filter(el => el !== element);\n        return super.remove(element);\n    }\n    update(element, values) {\n        return new Promise((resolve, reject) => {\n            this.find(element).then((found) => {\n                found = deepExtend(found, values);\n                super.update(found, values).then(resolve).catch(reject);\n            }).catch(reject);\n        });\n    }\n    find(element) {\n        const found = this.data.find(el => el === element);\n        if (found) {\n            return Promise.resolve(found);\n        }\n        return Promise.reject(new Error('Element was not found in the dataset'));\n    }\n    getElements() {\n        const data = this.data.slice(0);\n        return Promise.resolve(this.prepareData(data));\n    }\n    getFilteredAndSorted() {\n        const data = this.data.slice(0);\n        this.prepareData(data);\n        return Promise.resolve(this.filteredAndSorted);\n    }\n    getAll() {\n        const data = this.data.slice(0);\n        return Promise.resolve(data);\n    }\n    reset(silent = false) {\n        if (silent) {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n            this.sortConf = [];\n            this.pagingConf.page = 1;\n        }\n        else {\n            this.setFilter([], true, false);\n            this.setSort([], false);\n            this.setPage(1);\n        }\n    }\n    empty() {\n        this.data = [];\n        return super.empty();\n    }\n    count() {\n        return this.filteredAndSorted.length;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param doEmit\n     * @returns\n     */\n    setSort(conf, doEmit = true) {\n        if (conf !== null) {\n            conf.forEach((fieldConf) => {\n                if (!fieldConf.field || typeof fieldConf.direction === 'undefined') {\n                    throw new Error('Sort configuration object is not valid');\n                }\n            });\n            this.sortConf = conf;\n        }\n        super.setSort(conf, doEmit);\n        return this;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, search: string, filter: Function|null},\n     * ]\n     *\n     * @param conf\n     * @param andOperator\n     * @param doEmit\n     * @returns\n     */\n    setFilter(conf, andOperator = true, doEmit = true) {\n        if (conf && conf.length > 0) {\n            conf.forEach((fieldConf) => {\n                this.addFilter(fieldConf, andOperator, false);\n            });\n        }\n        else {\n            this.filterConf = {\n                filters: [],\n                andOperator: true\n            };\n        }\n        this.filterConf.andOperator = andOperator;\n        this.pagingConf.page = 1;\n        super.setFilter(conf, andOperator, doEmit);\n        return this;\n    }\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\n        if (!fieldConf.field || typeof fieldConf.search === 'undefined') {\n            throw new Error('Filter configuration object is not valid');\n        }\n        let found = false;\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\n            if (currentFieldConf.field === fieldConf.field) {\n                this.filterConf.filters[index] = fieldConf;\n                found = true;\n            }\n        });\n        if (!found) {\n            this.filterConf.filters.push(fieldConf);\n        }\n        this.filterConf.andOperator = andOperator;\n        super.addFilter(fieldConf, andOperator, doEmit);\n        return this;\n    }\n    setPaging(page, perPage, doEmit = true) {\n        this.pagingConf.page = page;\n        this.pagingConf.perPage = perPage;\n        super.setPaging(page, perPage, doEmit);\n        return this;\n    }\n    setPage(page, doEmit = true) {\n        this.pagingConf.page = page;\n        super.setPage(page, doEmit);\n        return this;\n    }\n    getSort() {\n        return this.sortConf;\n    }\n    getFilter() {\n        return this.filterConf;\n    }\n    getPaging() {\n        return this.pagingConf;\n    }\n    prepareData(data) {\n        data = this.filter(data);\n        data = this.sort(data);\n        this.filteredAndSorted = data.slice(0);\n        return this.paginate(data);\n    }\n    sort(data) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                data = LocalSorter\n                    .sort(data, fieldConf.field, fieldConf.direction, fieldConf.compare);\n            });\n        }\n        return data;\n    }\n    // TODO: refactor?\n    filter(data) {\n        if (this.filterConf.filters) {\n            if (this.filterConf.andOperator) {\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        data = LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter);\n                    }\n                });\n            }\n            else {\n                let mergedData = [];\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf.search.length > 0) {\n                        mergedData = mergedData.concat(LocalFilter\n                            .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter));\n                    }\n                });\n                // remove non unique items\n                data = mergedData.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n            }\n        }\n        return data;\n    }\n    paginate(data) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            data = LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\n        }\n        return data;\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Column {\n    constructor(id, settings, dataSet) {\n        this.id = id;\n        this.settings = settings;\n        this.dataSet = dataSet;\n        this.title = '';\n        this.type = '';\n        this.class = '';\n        this.width = '';\n        this.hide = false;\n        this.isSortable = false;\n        this.isEditable = true;\n        this.isAddable = true;\n        this.isFilterable = false;\n        this.sortDirection = '';\n        this.defaultSortDirection = '';\n        this.editor = { type: '', config: {}, component: null };\n        this.filter = { type: '', config: {}, component: null };\n        this.renderComponent = null;\n        this.process();\n    }\n    getOnComponentInitFunction() {\n        return this.onComponentInitFunction;\n    }\n    getCompareFunction() {\n        return this.compareFunction;\n    }\n    getValuePrepareFunction() {\n        return this.valuePrepareFunction;\n    }\n    getFilterFunction() {\n        return this.filterFunction;\n    }\n    getConfig() {\n        return this.editor && this.editor.config;\n    }\n    getFilterType() {\n        return this.filter && this.filter.type;\n    }\n    getFilterConfig() {\n        return this.filter && this.filter.config;\n    }\n    prepareType() {\n        return this.settings.type || this.determineType();\n    }\n    prepareSortDirection() {\n        return this.settings.sort === 'desc' ? 'desc' : 'asc';\n    }\n    determineType() {\n        // TODO: determine type by data\n        return 'text';\n    }\n    process() {\n        this.title = this.settings.title;\n        this.class = this.settings.class;\n        this.width = this.settings.width;\n        this.hide = Boolean(this.settings.hide);\n        this.type = this.prepareType();\n        this.editor = this.settings.editor;\n        this.filter = this.settings.filter;\n        this.renderComponent = this.settings.renderComponent;\n        this.isFilterable = typeof this.settings.filter === 'undefined' ? true : Boolean(this.settings.filter);\n        this.defaultSortDirection = ['asc', 'desc']\n            .indexOf(this.settings.sortDirection) !== -1 ? this.settings.sortDirection : '';\n        this.isSortable = typeof this.settings.sort === 'undefined' ? true : Boolean(this.settings.sort);\n        this.isEditable = typeof this.settings.editable === 'undefined' ? true : Boolean(this.settings.editable);\n        this.isAddable = typeof this.settings.addable === 'undefined' ? true : Boolean(this.settings.addable);\n        this.sortDirection = this.prepareSortDirection();\n        this.compareFunction = this.settings.compareFunction;\n        this.valuePrepareFunction = this.settings.valuePrepareFunction;\n        this.filterFunction = this.settings.filterFunction;\n        this.onComponentInitFunction = this.settings.onComponentInitFunction;\n    }\n}\n\nconst prepareValue = (value) => value;\n// @dynamic\nclass Cell {\n    constructor(value, row, column, dataSet) {\n        this.value = value;\n        this.row = row;\n        this.column = column;\n        this.dataSet = dataSet;\n        this.newValue = '';\n        this.newValue = value;\n    }\n    getColumn() {\n        return this.column;\n    }\n    getRow() {\n        return this.row;\n    }\n    getValue() {\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.prepareVal;\n        // eslint-disable-next-line no-useless-call\n        return prepare.call(null, this.value, this.row.getData(), this);\n    }\n    setValue(value) {\n        this.newValue = value;\n    }\n    getId() {\n        return this.getColumn().id;\n    }\n    getTitle() {\n        return this.getColumn().title;\n    }\n    isEditable() {\n        if (this.getRow().index === -1) {\n            return this.getColumn().isAddable;\n        }\n        else {\n            return this.getColumn().isEditable;\n        }\n    }\n}\nCell.prepareVal = prepareValue;\n\nclass Row {\n    constructor(index, data, dataSet) {\n        this.index = index;\n        this.data = data;\n        this.dataSet = dataSet;\n        this.isSelected = false;\n        this.isInEditing = false;\n        this.cells = [];\n        this.process();\n    }\n    getCell(column) {\n        return this.cells.find(el => el.getColumn() === column);\n    }\n    getCells() {\n        return this.cells;\n    }\n    getData() {\n        return this.data;\n    }\n    getIsSelected() {\n        return this.isSelected;\n    }\n    getNewData() {\n        const values = Object.assign({}, this.data);\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n        return values;\n    }\n    setData(data) {\n        this.data = data;\n        this.process();\n    }\n    process() {\n        this.cells = [];\n        this.dataSet.getColumns().forEach((column) => {\n            const cell = this.createCell(column);\n            this.cells.push(cell);\n        });\n    }\n    createCell(column) {\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n        return new Cell(value, this, column, this.dataSet);\n    }\n}\n\nclass DataSet {\n    constructor(data = [], \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    columnSettings) {\n        this.columnSettings = columnSettings;\n        this.data = [];\n        this.columns = [];\n        this.rows = [];\n        this.createColumns(columnSettings);\n        this.setData(data);\n        this.createNewRow();\n    }\n    setData(data) {\n        this.data = data;\n        this.createRows();\n    }\n    getColumns() {\n        return this.columns;\n    }\n    getRows() {\n        return this.rows;\n    }\n    getFirstRow() {\n        return this.rows[0];\n    }\n    getLastRow() {\n        return this.rows[this.rows.length - 1];\n    }\n    findRowByData(data) {\n        return this.rows.find((row) => row.getData() === data);\n    }\n    deselectAll() {\n        this.rows.forEach((row) => {\n            row.isSelected = false;\n        });\n        // we need to clear selectedRow field because no one row selected\n        this.selectedRow = undefined;\n    }\n    selectRow(row) {\n        const previousIsSelected = row.isSelected;\n        this.deselectAll();\n        row.isSelected = !previousIsSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    multipleSelectRow(row) {\n        row.isSelected = !row.isSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    selectPreviousRow() {\n        if (this.rows.length > 0) {\n            let index = this.selectedRow ? this.selectedRow.index : 0;\n            if (index > this.rows.length - 1) {\n                index = this.rows.length - 1;\n            }\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n    }\n    selectFirstRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[0]);\n            return this.selectedRow;\n        }\n    }\n    selectLastRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[this.rows.length - 1]);\n            return this.selectedRow;\n        }\n    }\n    selectRowByIndex(index) {\n        const rowsLength = this.rows.length;\n        if (rowsLength === 0) {\n            return;\n        }\n        if (!index) {\n            this.selectFirstRow();\n            return this.selectedRow;\n        }\n        if (index > 0 && index < rowsLength) {\n            this.selectRow(this.rows[index]);\n            return this.selectedRow;\n        }\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAll();\n    }\n    willSelectFirstRow() {\n        this.willSelect = 'first';\n    }\n    willSelectLastRow() {\n        this.willSelect = 'last';\n    }\n    select(selectedRowIndex) {\n        if (this.getRows().length === 0) {\n            return;\n        }\n        if (this.willSelect) {\n            if (this.willSelect === 'first') {\n                this.selectFirstRow();\n            }\n            if (this.willSelect === 'last') {\n                this.selectLastRow();\n            }\n            this.willSelect = '';\n        }\n        else {\n            this.selectRowByIndex(selectedRowIndex);\n        }\n        return this.selectedRow;\n    }\n    createNewRow() {\n        this.newRow = new Row(-1, {}, this);\n        this.newRow.isInEditing = true;\n    }\n    /**\n     * Create columns by mapping from the settings\n     *\n     * @param settings\n     * @private\n     */\n    createColumns(settings) {\n        for (const id in settings) {\n            if (settings.hasOwnProperty(id)) {\n                this.columns.push(new Column(id, settings[id], this));\n            }\n        }\n    }\n    /**\n     * Create rows based on current data prepared in data source\n     *\n     * @private\n     */\n    createRows() {\n        this.rows = [];\n        this.data.forEach((el, index) => {\n            this.rows.push(new Row(index, el, this));\n        });\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nclass Grid {\n    constructor(source, settings) {\n        this.createFormShown = false;\n        this.onSelectRowSource = new Subject();\n        this.onDeselectRowSource = new Subject();\n        this.setSettings(settings);\n        this.setSource(source);\n    }\n    detach() {\n        if (this.sourceOnChangedSubscription) {\n            this.sourceOnChangedSubscription.unsubscribe();\n        }\n        if (this.sourceOnUpdatedSubscription) {\n            this.sourceOnUpdatedSubscription.unsubscribe();\n        }\n    }\n    showActionColumn(position) {\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n    }\n    isCurrentActionsPosition(position) {\n        // eslint-disable-next-line eqeqeq\n        return position == this.getSetting('actions.position');\n    }\n    isActionsVisible() {\n        return this\n            .getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n    }\n    isMultiSelectVisible() {\n        return this.getSetting('selectMode') === 'multi';\n    }\n    getNewRow() {\n        return this.dataSet.newRow;\n    }\n    setSettings(settings) {\n        this.settings = settings;\n        this.dataSet = new DataSet([], this.getSetting('columns'));\n        if (this.source) {\n            this.source.refresh();\n        }\n    }\n    getDataSet() {\n        return this.dataSet;\n    }\n    setSource(source) {\n        this.source = this.prepareSource(source);\n        this.detach();\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\n            const changedRow = this.dataSet.findRowByData(data);\n            changedRow.setData(data);\n        });\n    }\n    getSetting(name, defaultValue) {\n        return getDeepFromObject(this.settings, name, defaultValue);\n    }\n    getColumns() {\n        return this.dataSet.getColumns();\n    }\n    getRows() {\n        return this.dataSet.getRows();\n    }\n    selectRow(row) {\n        this.dataSet.selectRow(row);\n    }\n    multipleSelectRow(row) {\n        this.dataSet.multipleSelectRow(row);\n    }\n    onSelectRow() {\n        return this.onSelectRowSource.asObservable();\n    }\n    onDeselectRow() {\n        return this.onDeselectRowSource.asObservable();\n    }\n    edit(row) {\n        row.isInEditing = true;\n    }\n    create(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipAdd) {\n                this.createFormShown = false;\n            }\n            else {\n                this.source.prepend(newData).then(() => {\n                    this.createFormShown = false;\n                    this.dataSet.createNewRow();\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('add.confirmCreate')) {\n            confirmEmitter.emit({\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    save(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipEdit) {\n                row.isInEditing = false;\n            }\n            else {\n                this.source.update(row.getData(), newData).then(() => {\n                    row.isInEditing = false;\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('edit.confirmSave')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    delete(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then(() => {\n            this.source.remove(row.getData());\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('delete.confirmDelete')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                source: this.source,\n                confirm: deferred\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    processDataChange(changes) {\n        if (this.shouldProcessChange(changes)) {\n            this.dataSet.setData(changes.elements);\n            if (this.getSetting('selectMode') !== 'multi') {\n                const row = this.determineRowToSelect(changes);\n                if (row) {\n                    this.onSelectRowSource.next(row);\n                }\n                else {\n                    this.onDeselectRowSource.next(null);\n                }\n            }\n        }\n    }\n    shouldProcessChange(changes) {\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes.action) !== -1) {\n            return true;\n        }\n        else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @breaking-change 1.8.0\n     * Need to add `| null` in return type\n     *\n     * TODO: move to selectable? Separate directive\n     */\n    determineRowToSelect(changes) {\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\n            return this.dataSet.select(this.getRowIndexToSelect());\n        }\n        if (this.shouldSkipSelection()) {\n            return null;\n        }\n        if (changes.action === 'remove') {\n            if (changes.elements.length === 0) {\n                // we have to store which one to select as the data will be reloaded\n                this.dataSet.willSelectLastRow();\n            }\n            else {\n                return this.dataSet.selectPreviousRow();\n            }\n        }\n        if (changes.action === 'append') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectLastRow();\n        }\n        if (changes.action === 'add') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'update') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes.action === 'prepend') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectFirstRow();\n        }\n        return null;\n    }\n    prepareSource(source) {\n        const initialSource = this.getInitialSort();\n        if (initialSource && initialSource.field && initialSource.direction) {\n            source.setSort([initialSource], false);\n        }\n        if (this.getSetting('pager.display') === true) {\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n        }\n        source.refresh();\n        return source;\n    }\n    getInitialSort() {\n        const sortConf = {};\n        this.getColumns().forEach((column) => {\n            if (column.isSortable && column.defaultSortDirection) {\n                sortConf.field = column.id;\n                sortConf.direction = column.defaultSortDirection;\n                sortConf.compare = column.getCompareFunction();\n            }\n        });\n        return sortConf;\n    }\n    getSelectedRows() {\n        return this.dataSet.getRows()\n            .filter(r => r.isSelected);\n    }\n    selectAllRows(status) {\n        this.dataSet.getRows()\n            .forEach(r => r.isSelected = status);\n    }\n    getFirstRow() {\n        return this.dataSet.getFirstRow();\n    }\n    getLastRow() {\n        return this.dataSet.getLastRow();\n    }\n    getSelectionInfo() {\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n        const { perPage, page } = this.getSetting('pager');\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\n    }\n    getRowIndexToSelect() {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\n        const dataAmount = this.source.count();\n        /**\n         * source - contains all table data\n         * dataSet - contains data for current page\n         * selectedRowIndex - contains index for data in all data\n         *\n         * because of that, we need to count index for a specific row in page\n         * if\n         * `switchPageToSelectedRowPage` - we need to change page automatically\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n         *  if we return index witch not points to existing data - no line will be highlighted)\n         */\n        return (switchPageToSelectedRowPage &&\n            selectedRowIndex < dataAmount &&\n            selectedRowIndex >= 0) ?\n            selectedRowIndex % perPage :\n            selectedRowIndex;\n    }\n    getPageToSelect(source) {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\n        let pageToSelect = Math.max(1, page);\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n        }\n        const maxPageAmount = Math.ceil(source.count() / perPage);\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n    }\n    shouldSkipSelection() {\n        /**\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n         *\n         * Therefore, in order to select a row after some changes,\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n         *\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n         *\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n         * because when < 0 all lines must be deselected\n         */\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n        return selectedRowIndex < 0;\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction SmartIntelTableComponent_thead_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"thead\", 4);\n        i0.ɵɵlistener(\"create\", function SmartIntelTableComponent_thead_1_Template_thead_create_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.create.emit($event)); })(\"selectAllRows\", function SmartIntelTableComponent_thead_1_Template_thead_selectAllRows_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.onSelectAllRows($event)); })(\"sort\", function SmartIntelTableComponent_thead_1_Template_thead_sort_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r5 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r5.sort($event)); })(\"filter\", function SmartIntelTableComponent_thead_1_Template_thead_filter_0_listener($event) { i0.ɵɵrestoreView(_r3); const ctx_r6 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r6.filter($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n    }\n}\nfunction SmartIntelTableComponent_smart_intel_table_pager_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"smart-intel-table-pager\", 5);\n        i0.ɵɵlistener(\"changePage\", function SmartIntelTableComponent_smart_intel_table_pager_3_Template_smart_intel_table_pager_changePage_0_listener($event) { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r7.changePage($event)); });\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n    }\n}\nclass SmartIntelTableComponent {\n    constructor() {\n        this.settings = {};\n        this.rowSelect = new EventEmitter();\n        this.rowDeselect = new EventEmitter();\n        this.userRowSelect = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.create = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.deleteConfirm = new EventEmitter();\n        this.editConfirm = new EventEmitter();\n        this.createConfirm = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.defaultSettings = {\n            mode: 'inline',\n            selectMode: 'single',\n            /**\n             * Points to an element in all data\n             *\n             * when < 0 all lines must be deselected\n             */\n            selectedRowIndex: 0,\n            switchPageToSelectedRowPage: false,\n            hideHeader: false,\n            hideSubHeader: false,\n            actions: {\n                columnTitle: 'Actions',\n                add: true,\n                edit: true,\n                delete: true,\n                custom: [],\n                position: 'left' // left|right\n            },\n            filter: {\n                inputClass: ''\n            },\n            edit: {\n                inputClass: '',\n                editButtonContent: 'Edit',\n                saveButtonContent: 'Update',\n                cancelButtonContent: 'Cancel',\n                confirmSave: false\n            },\n            add: {\n                inputClass: '',\n                addButtonContent: 'Add New',\n                createButtonContent: 'Create',\n                cancelButtonContent: 'Cancel',\n                confirmCreate: false\n            },\n            delete: {\n                deleteButtonContent: 'Delete',\n                confirmDelete: false\n            },\n            attr: {\n                id: '',\n                class: ''\n            },\n            noDataMessage: 'No data found',\n            columns: {},\n            pager: {\n                display: true,\n                page: 1,\n                perPage: 10\n            },\n            rowClassFunction: () => ''\n        };\n        this.isAllSelected = false;\n        this.destroyed$ = new Subject();\n    }\n    ngOnChanges(changes) {\n        if (this.grid) {\n            if (changes.settings) {\n                this.grid.setSettings(this.prepareSettings());\n            }\n            if (changes.source) {\n                this.source = this.prepareSource();\n                this.grid.setSource(this.source);\n            }\n        }\n        else {\n            this.initGrid();\n        }\n        this.tableId = this.grid.getSetting('attr.id');\n        this.tableClass = this.grid.getSetting('attr.class');\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n        if (!this.grid) {\n            return;\n        }\n        this.grid.settings.selectedRowIndex = index;\n        if (this.isIndexOutOfRange(index)) {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n            return;\n        }\n        if (switchPageToSelectedRowPage) {\n            const source = this.source;\n            const paging = source.getPaging();\n            const page = getPageForRowIndex(index, paging.perPage);\n            index %= paging.perPage;\n            this.grid.settings.selectedRowIndex = index;\n            if (page !== paging.page) {\n                source.setPage(page);\n                return;\n            }\n        }\n        const row = this.grid.getRows()[index];\n        if (row) {\n            this.onSelectRow(row);\n        }\n        else {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n        }\n    }\n    editRowSelect(row) {\n        if (this.grid.getSetting('selectMode') === 'multi') {\n            this.onMultipleSelectRow(row);\n        }\n        else {\n            this.onSelectRow(row);\n        }\n    }\n    onUserSelectRow(row) {\n        if (this.grid.getSetting('selectMode') !== 'multi') {\n            this.grid.selectRow(row);\n            this.emitUserSelectRow(row);\n            this.emitSelectRow(row);\n        }\n    }\n    onRowHover(row) {\n        this.rowHover.emit(row);\n    }\n    multipleSelectRow(row) {\n        this.grid.multipleSelectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n    }\n    onSelectAllRows($event) {\n        this.isAllSelected = !this.isAllSelected;\n        this.grid.selectAllRows(this.isAllSelected);\n        this.emitUserSelectRow(null);\n        this.emitSelectRow(null);\n    }\n    onSelectRow(row) {\n        this.grid.selectRow(row);\n        this.emitSelectRow(row);\n    }\n    onMultipleSelectRow(row) {\n        this.emitSelectRow(row);\n    }\n    initGrid() {\n        this.source = this.prepareSource();\n        this.grid = new Grid(this.source, this.prepareSettings());\n        this.subscribeToOnSelectRow();\n        this.subscribeToOnDeselectRow();\n    }\n    prepareSource() {\n        if (this.source instanceof DataSource) {\n            return this.source;\n        }\n        else if (this.source instanceof Array) {\n            return new LocalDataSource(this.source);\n        }\n        return new LocalDataSource();\n    }\n    prepareSettings() {\n        return deepExtend({}, this.defaultSettings, this.settings);\n    }\n    changePage($event) {\n        this.resetAllSelector();\n    }\n    sort($event) {\n        this.resetAllSelector();\n    }\n    filter($event) {\n        this.resetAllSelector();\n    }\n    deselectAllRows() {\n        this.grid.dataSet.deselectAll();\n        this.emitDeselectRow(null);\n    }\n    resetAllSelector() {\n        this.isAllSelected = false;\n    }\n    emitUserSelectRow(row) {\n        const selectedRows = this.grid.getSelectedRows();\n        this.userRowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : []\n        });\n    }\n    emitSelectRow(row) {\n        const data = {\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        };\n        this.rowSelect.emit(data);\n        if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\n            this.rowDeselect.emit(data);\n        }\n    }\n    emitDeselectRow(row) {\n        this.rowDeselect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source\n        });\n    }\n    isIndexOutOfRange(index) {\n        var _a;\n        const dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n    }\n    subscribeToOnSelectRow() {\n        if (this.onSelectRowSubscription) {\n            this.onSelectRowSubscription.unsubscribe();\n        }\n        this.onSelectRowSubscription = this.grid.onSelectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitSelectRow(row);\n        });\n    }\n    subscribeToOnDeselectRow() {\n        if (this.onDeselectRowSubscription) {\n            this.onDeselectRowSubscription.unsubscribe();\n        }\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitDeselectRow(row);\n        });\n    }\n}\nSmartIntelTableComponent.ɵfac = function SmartIntelTableComponent_Factory(t) { return new (t || SmartIntelTableComponent)(); };\nSmartIntelTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: SmartIntelTableComponent, selectors: [[\"smart-intel-table\"]], inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\" }, features: [i0.ɵɵNgOnChangesFeature], decls: 4, vars: 9, consts: [[3, \"id\", \"ngClass\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\", 4, \"ngIf\"], [\"smart-table-body\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"smart-table-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]], template: function SmartIntelTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵelementStart(0, \"table\", 0);\n            i0.ɵɵtemplate(1, SmartIntelTableComponent_thead_1_Template, 1, 4, \"thead\", 1);\n            i0.ɵɵelementStart(2, \"tbody\", 2);\n            i0.ɵɵlistener(\"edit\", function SmartIntelTableComponent_Template_tbody_edit_2_listener($event) { return ctx.edit.emit($event); })(\"delete\", function SmartIntelTableComponent_Template_tbody_delete_2_listener($event) { return ctx.delete.emit($event); })(\"custom\", function SmartIntelTableComponent_Template_tbody_custom_2_listener($event) { return ctx.custom.emit($event); })(\"userSelectRow\", function SmartIntelTableComponent_Template_tbody_userSelectRow_2_listener($event) { return ctx.onUserSelectRow($event); })(\"editRowSelect\", function SmartIntelTableComponent_Template_tbody_editRowSelect_2_listener($event) { return ctx.editRowSelect($event); })(\"multipleSelectRow\", function SmartIntelTableComponent_Template_tbody_multipleSelectRow_2_listener($event) { return ctx.multipleSelectRow($event); })(\"rowHover\", function SmartIntelTableComponent_Template_tbody_rowHover_2_listener($event) { return ctx.onRowHover($event); });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(3, SmartIntelTableComponent_smart_intel_table_pager_3_Template, 1, 2, \"smart-intel-table-pager\", 3);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n        }\n    }, dependencies: [i1.NgClass, i1.NgIf, PagerComponent, Ng2SmartTableTbodyComponent, Ng2SmartTableTheadComponent], styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableComponent, [{\n            type: Component,\n            args: [{ selector: 'smart-intel-table', template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n  <thead\\n    smart-table-thead\\n    *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n    [grid]=\\\"grid\\\"\\n    [isAllSelected]=\\\"isAllSelected\\\"\\n    [source]=\\\"source\\\"\\n    [createConfirm]=\\\"createConfirm\\\"\\n    (create)=\\\"create.emit($event)\\\"\\n    (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n    (sort)=\\\"sort($event)\\\"\\n    (filter)=\\\"filter($event)\\\"\\n  ></thead>\\n\\n  <tbody\\n    smart-table-body\\n    [grid]=\\\"grid\\\"\\n    [source]=\\\"source\\\"\\n    [deleteConfirm]=\\\"deleteConfirm\\\"\\n    [editConfirm]=\\\"editConfirm\\\"\\n    [rowClassFunction]=\\\"rowClassFunction\\\"\\n    (edit)=\\\"edit.emit($event)\\\"\\n    (delete)=\\\"delete.emit($event)\\\"\\n    (custom)=\\\"custom.emit($event)\\\"\\n    (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n    (editRowSelect)=\\\"editRowSelect($event)\\\"\\n    (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n    (rowHover)=\\\"onRowHover($event)\\\"\\n  ></tbody>\\n</table>\\n\\n<smart-intel-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</smart-intel-table-pager>\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"] }]\n        }], null, { source: [{\n                type: Input\n            }], settings: [{\n                type: Input\n            }], rowSelect: [{\n                type: Output\n            }], rowDeselect: [{\n                type: Output\n            }], userRowSelect: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], create: [{\n                type: Output\n            }], custom: [{\n                type: Output\n            }], deleteConfirm: [{\n                type: Output\n            }], editConfirm: [{\n                type: Output\n            }], createConfirm: [{\n                type: Output\n            }], rowHover: [{\n                type: Output\n            }] });\n})();\n\nclass SmartIntelTableModule {\n}\nSmartIntelTableModule.ɵfac = function SmartIntelTableModule_Factory(t) { return new (t || SmartIntelTableModule)(); };\nSmartIntelTableModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: SmartIntelTableModule });\nSmartIntelTableModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CellModule,\n        FilterModule,\n        PagerModule,\n        TbodyModule,\n        TheadModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SmartIntelTableModule, [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        CellModule,\n                        FilterModule,\n                        PagerModule,\n                        TbodyModule,\n                        TheadModule\n                    ],\n                    declarations: [\n                        SmartIntelTableComponent\n                    ],\n                    exports: [\n                        SmartIntelTableComponent\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(SmartIntelTableModule, { declarations: [SmartIntelTableComponent], imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            CellModule,\n            FilterModule,\n            PagerModule,\n            TbodyModule,\n            TheadModule], exports: [SmartIntelTableComponent] });\n})();\n\nclass ServerSourceConf {\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n        this.endPoint = endPoint ? endPoint : '';\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.sortFieldKey;\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.sortDirKey;\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.pagerPageKey;\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.pagerLimitKey;\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.filterFieldKey;\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.totalKey;\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.dataKey;\n    }\n}\nServerSourceConf.sortFieldKey = '_sort';\nServerSourceConf.sortDirKey = '_order';\nServerSourceConf.pagerPageKey = '_page';\nServerSourceConf.pagerLimitKey = '_limit';\nServerSourceConf.filterFieldKey = '#field#_like';\nServerSourceConf.totalKey = 'x-total-count';\nServerSourceConf.dataKey = '';\n\nclass ServerDataSource extends LocalDataSource {\n    constructor(http, conf = {}) {\n        super();\n        this.http = http;\n        this.lastRequestCount = 0;\n        this.conf = new ServerSourceConf(conf);\n        if (!this.conf.endPoint) {\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n        }\n    }\n    count() {\n        return this.lastRequestCount;\n    }\n    getElements() {\n        /** const observer$ = this.requestElements()\n        .pipe(map(res => {\n          this.lastRequestCount = this.extractTotalFromResponse(res);\n          this.data = this.extractDataFromResponse(res);\n          return this.data;\n        }));\n        return lastValueFrom(observer$);*/\n        return this.requestElements()\n            .pipe(map(res => {\n            this.lastRequestCount = this.extractTotalFromResponse(res);\n            this.data = this.extractDataFromResponse(res);\n            return this.data;\n        })).toPromise(); // TODO dis is deprecated\n    }\n    /**\n     * Extracts array of data from server response\n     *\n     * @param res\n     * @returns\n     */\n    extractDataFromResponse(res) {\n        const rawData = res.body;\n        const data = Boolean(this.conf.dataKey) ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n        if (data instanceof Array) {\n            return data;\n        }\n        throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n    }\n    /**\n     * Extracts total rows count from the server response\n     * Looks for the count in the heders first, then in the response body\n     *\n     * @param res\n     * @returns\n     */\n    extractTotalFromResponse(res) {\n        if (res.headers.has(this.conf.totalKey)) {\n            return Number(res.headers.get(this.conf.totalKey));\n        }\n        else {\n            const rawData = res.body;\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\n        }\n    }\n    requestElements() {\n        const httpParams = this.createRequesParams();\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n    }\n    createRequesParams() {\n        let httpParams = new HttpParams();\n        httpParams = this.addSortRequestParams(httpParams);\n        httpParams = this.addFilterRequestParams(httpParams);\n        return this.addPagerRequestParams(httpParams);\n    }\n    addSortRequestParams(httpParams) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n            });\n        }\n        return httpParams;\n    }\n    addFilterRequestParams(httpParams) {\n        if (this.filterConf.filters) {\n            this.filterConf.filters.forEach((fieldConf) => {\n                if (fieldConf.search) {\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf.field), fieldConf.search);\n                }\n            });\n        }\n        return httpParams;\n    }\n    addPagerRequestParams(httpParams) {\n        if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\n        }\n        return httpParams;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Cell, DefaultEditorBase, DefaultFilter, LocalDataSource, ServerDataSource, SmartIntelTableComponent, SmartIntelTableModule };\n//# sourceMappingURL=smart-intel-table.mjs.map\n","map":null},{"fileName":"smart-intel-table.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"smart-intel-table.mjs\",\"sources\":[\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/edit-cell-default.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/custom-edit.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/default-editor.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/checkbox-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/completer-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/input-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/select-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-editors/textarea-editor.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/default-edit.component.html\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/default-edit.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-edit-mode/edit-cell.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-view-mode/custom-view.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell-view-mode/view-cell.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/cell/cell.module.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-default.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/default-filter.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/checkbox-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/completer-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/input-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter-types/select-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/default-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/custom-filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/filter/filter.module.ts\",\"../../../projects/smart-intel-table/src/lib/components/pager/pager.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/pager/pager.module.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/cells/create-cancel.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/cells/edit-delete.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/cells/custom.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/tbody.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/tbody/tbody.component.html\",\"../../../projects/smart-intel-table/src/lib/components/tbody/tbody.module.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/add-button.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/rows/thead-filters-row.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/actions.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/rows/thead-form-row.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/actions-title.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/checkbox-select-all.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/title/title.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/cells/column-title.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/rows/thead-titles-row.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/thead.component.ts\",\"../../../projects/smart-intel-table/src/lib/components/thead/thead.component.html\",\"../../../projects/smart-intel-table/src/lib/components/thead/thead.module.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/data-source.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/helpers.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/loca-data-filter.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/local-data-pager.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/local-data-sorter.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/local-data-source/local-data-source.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-set/column.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-set/cell.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-set/row.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-set/data-set.define.ts\",\"../../../projects/smart-intel-table/src/lib/defines/grid.define.ts\",\"../../../projects/smart-intel-table/src/lib/smart-intel-table.component.ts\",\"../../../projects/smart-intel-table/src/lib/smart-intel-table.component.html\",\"../../../projects/smart-intel-table/src/lib/smart-intel-table.module.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/server-data-source/server-data-source.conf.ts\",\"../../../projects/smart-intel-table/src/lib/defines/data-source/server-data-source/server-data-source.define.ts\",\"../../../projects/smart-intel-table/src/smart-intel-table.ts\"],\"sourcesContent\":[\"import { Component, Output, EventEmitter, Input } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class EditCellDefault {\\n  @Input() cell: Cell;\\n  @Input() inputClass = '';\\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\\n  @Output() edited = new EventEmitter<any>();\\n\\n  editedEvent(event) {\\n    this.edited.next(event);\\n    return false;\\n  }\\n\\n  stoppedEditingEvent() {\\n    this.cell.getRow().isInEditing = false;\\n    return false;\\n  }\\n\\n  clickedEvent(event) {\\n    event.stopPropagation();\\n  }\\n}\\n\",\"import {\\n  Component,\\n  ComponentFactoryResolver,\\n  ViewChild,\\n  ViewContainerRef,\\n  SimpleChanges,\\n  OnChanges,\\n  OnDestroy,\\n} from '@angular/core';\\nimport { EditCellDefault } from './edit-cell-default';\\n\\n@Component({\\n  selector: 'table-cell-custom-editor',\\n  template: `\\n    <ng-template #dynamicTarget></ng-template>\\n  `,\\n})\\nexport class CustomEditComponent \\n  extends EditCellDefault \\n  implements OnChanges, OnDestroy {\\n  customComponent;\\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget;\\n\\n  constructor(private resolver: ComponentFactoryResolver) {\\n    super();\\n  }\\n\\n  ngOnChanges(\\n    changes: SimpleChanges\\n  ) {\\n    if (this.cell && !this.customComponent) {\\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\\n\\n      // set @Inputs and @Outputs of custom component\\n      this.customComponent.instance.cell = this.cell;\\n      this.customComponent.instance.inputClass = this.inputClass;\\n      this.customComponent.instance.stoppedEditingEvent.subscribe(() => this.stoppedEditingEvent());\\n      this.customComponent.instance.editedEvent.subscribe((event) => this.editedEvent(event));\\n      this.customComponent.instance.clickedEvent.subscribe((event) => this.clickedEvent(event));\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.customComponent) {\\n      this.customComponent.destroy();\\n    }\\n  }\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Component, Output, EventEmitter, Input } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class DefaultEditorBase implements Ieditor {\\n  @Input() cell: Cell;\\n  @Input() inputClass: string;\\n  @Output() stoppedEditingEvent = new EventEmitter<any>();\\n  @Output() editedEvent = new EventEmitter<any>();\\n  @Output() clickedEvent = new EventEmitter<any>();\\n}\\n\\nexport interface Ieditor {\\n  cell: Cell;\\n  inputClass: string;\\n  stoppedEditingEvent: EventEmitter<any>;\\n  editedEvent: EventEmitter<any>;\\n  clickedEvent: EventEmitter<any>;\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'checkbox-editor',\\n  styleUrls: ['./editor.component.scss'],\\n  template: `\\n    <input [ngClass]=\\\"inputClass\\\"\\n          type=\\\"checkbox\\\"\\n          class=\\\"form-control\\\"\\n          [name]=\\\"cell.getId()\\\"\\n          [disabled]=\\\"!cell.isEditable()\\\"\\n          [checked]=\\\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\\\"\\n          (click)=\\\"clickedEvent.emit($event)\\\"\\n          (change)=\\\"onChange($event)\\\">\\n    `,\\n})\\nexport class CheckboxEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  onChange(event) {\\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\\n  }\\n}\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { CompleterService } from 'ng2-completer';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'completer-editor',\\n  template: `\\n    <ng2-completer [(ngModel)]=\\\"completerStr\\\"\\n                    [dataService]=\\\"cell.getColumn().getConfig().completer.dataService\\\"\\n                    [minSearchLength]=\\\"cell.getColumn().getConfig().completer.minSearchLength || 0\\\"\\n                    [pause]=\\\"cell.getColumn().getConfig().completer.pause || 0\\\"\\n                    [placeholder]=\\\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\\\"\\n                    (selected)=\\\"onEditedCompleter($event)\\\">\\n    </ng2-completer>\\n    `,\\n})\\nexport class CompleterEditorComponent \\nextends DefaultEditorBase implements OnInit {\\n  completerStr: string = '';\\n\\n  constructor(\\n    private completerService: CompleterService\\n  ) {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\\n      const config = this.cell.getColumn().getConfig().completer;\\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\\n      config.dataService.descriptionField(config.descriptionField);\\n    }\\n  }\\n\\n  onEditedCompleter(event: { title: '' }): boolean {\\n    this.cell.newValue = event.title;\\n    return false;\\n  }\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'input-editor',\\n  styleUrls: ['./editor.component.scss'],\\n  template: `\\n    <input [ngClass]=\\\"inputClass\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"cell.newValue\\\"\\n          [name]=\\\"cell.getId()\\\"\\n          [placeholder]=\\\"cell.getTitle()\\\"\\n          [disabled]=\\\"!cell.isEditable()\\\"\\n          (click)=\\\"clickedEvent.emit($event)\\\"\\n          (keydown.enter)=\\\"editedEvent.emit($event)\\\"\\n          (keydown.esc)=\\\"stoppedEditingEvent.emit()\\\">\\n    `,\\n})\\nexport class InputEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'select-editor',\\n  template: `\\n    <select [ngClass]=\\\"inputClass\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"cell.newValue\\\"\\n            [name]=\\\"cell.getId()\\\"\\n            [disabled]=\\\"!cell.isEditable()\\\"\\n            (click)=\\\"clickedEvent.emit($event)\\\"\\n            (keydown.enter)=\\\"editedEvent.emit($event)\\\"\\n            (keydown.esc)=\\\"stoppedEditingEvent.emit()\\\">\\n\\n        <option *ngFor=\\\"let option of cell.getColumn().getConfig()?.list\\\" [value]=\\\"option.value\\\"\\n                [selected]=\\\"option.value === cell.getValue()\\\">{{ option.title }}\\n        </option>\\n    </select>\\n    `,\\n})\\nexport class SelectEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n}\\n\",\"import { Component } from '@angular/core';\\nimport { DefaultEditorBase } from './default-editor';\\n\\n@Component({\\n  selector: 'textarea-editor',\\n  styleUrls: ['./editor.component.scss'],\\n  template: `\\n    <textarea [ngClass]=\\\"inputClass\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"cell.newValue\\\"\\n              [name]=\\\"cell.getId()\\\"\\n              [disabled]=\\\"!cell.isEditable()\\\"\\n              [placeholder]=\\\"cell.getTitle()\\\"\\n              (click)=\\\"clickedEvent.emit($event)\\\"\\n              (keydown.enter)=\\\"editedEvent.emit($event)\\\"\\n              (keydown.esc)=\\\"stoppedEditingEvent.emit()\\\">\\n    </textarea>\\n    `,\\n})\\nexport class TextareaEditorComponent \\nextends DefaultEditorBase {\\n\\n  constructor() {\\n    super();\\n  }\\n}\\n\",\"<div [ngSwitch]=\\\"getEditorType()\\\">\\n  <select-editor\\n    *ngSwitchCase=\\\"'list'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </select-editor>\\n\\n  <textarea-editor\\n    *ngSwitchCase=\\\"'textarea'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </textarea-editor>\\n\\n  <checkbox-editor\\n    *ngSwitchCase=\\\"'checkbox'\\\"\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n  >\\n  </checkbox-editor>\\n\\n  <completer-editor *ngSwitchCase=\\\"'completer'\\\" [cell]=\\\"cell\\\">\\n  </completer-editor>\\n\\n  <input-editor\\n    *ngSwitchDefault\\n    [cell]=\\\"cell\\\"\\n    [inputClass]=\\\"inputClass\\\"\\n    (clickedEvent)=\\\"clickedEvent($event)\\\"\\n    (editedEvent)=\\\"editedEvent($event)\\\"\\n    (stoppedEditing\\n    Event)=\\\"stoppedEditingEvent()\\\"\\n  >\\n  </input-editor>\\n</div>\\n\",\"import { Component } from '@angular/core';\\nimport { EditCellDefault } from './edit-cell-default';\\n\\n@Component({\\n  selector: 'table-cell-default-editor',\\n  templateUrl: './default-edit.component.html'\\n})\\nexport class DefaultEditComponent\\n  extends EditCellDefault {\\n  constructor() {\\n    super();\\n  }\\n\\n  getEditorType(): string {\\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\\n  }\\n}\\n\",\"import { Component, Input, Output, EventEmitter } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  selector: 'table-cell-edit-mode',\\n  template: `\\n      <div [ngSwitch]=\\\"getEditorType()\\\">\\n        <table-cell-custom-editor *ngSwitchCase=\\\"'custom'\\\"\\n                                  [cell]=\\\"cell\\\"\\n                                  [inputClass]=\\\"inputClass\\\"\\n                                  (edited)=\\\"editedEvent($event)\\\">\\n        </table-cell-custom-editor>\\n        <table-cell-default-editor *ngSwitchDefault\\n                                  [cell]=\\\"cell\\\"\\n                                  [inputClass]=\\\"inputClass\\\"\\n                                  (edited)=\\\"editedEvent($event)\\\">\\n        </table-cell-default-editor>\\n      </div>\\n    `,\\n})\\nexport class EditCellComponent {\\n  @Input() cell: Cell;\\n  @Input() inputClass: string = '';\\n  @Output() edited = new EventEmitter<any>();\\n  editedEvent(event): boolean {\\n    this.edited.next(event);\\n    return false;\\n  }\\n\\n  getEditorType(): string {\\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\\n  }\\n}\\n\",\"import {\\n  Component,\\n  Input,\\n  ComponentFactoryResolver,\\n  ViewChild,\\n  ViewContainerRef,\\n  OnInit,\\n  OnDestroy,\\n} from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\nimport { IviewCell } from './view-cell';\\n\\n@Component({\\n  selector: 'custom-view-component',\\n  template: `\\n    <ng-template #dynamicTarget></ng-template>\\n  `,\\n})\\nexport class CustomViewComponent \\nimplements OnInit, OnDestroy {\\n  customComponent;\\n  @Input() cell: Cell;\\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget;\\n\\n  constructor(\\n    private resolver: ComponentFactoryResolver\\n  ) { }\\n\\n  ngOnInit() {\\n    if (this.cell && !this.customComponent) {\\n      this.createCustomComponent();\\n      this.callOnComponentInit();\\n      this.patchInstance();\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.customComponent) {\\n      this.customComponent.destroy();\\n    }\\n  }\\n\\n  protected createCustomComponent() {\\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\\n  }\\n\\n  protected callOnComponentInit() {\\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\\n    // TODO onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\\n    onComponentInitFunction && onComponentInitFunction();\\n  }\\n\\n  protected patchInstance() {\\n    Object.assign(this.customComponent.instance, this.getPatch());\\n  }\\n\\n  protected getPatch(): IviewCell {\\n    return {\\n      value: this.cell.getValue(),\\n      rowData: this.cell.getRow().getData()\\n    }\\n  }\\n}\\n\",\"import {Component, Input, ChangeDetectionStrategy } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\n\\n@Component({\\n  selector: 'table-cell-view-mode',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  template: `\\n    <div [ngSwitch]=\\\"cell.getColumn().type\\\">\\n        <custom-view-component *ngSwitchCase=\\\"'custom'\\\" [cell]=\\\"cell\\\"></custom-view-component>\\n        <div *ngSwitchCase=\\\"'html'\\\" [innerHTML]=\\\"cell.getValue()\\\"></div>\\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\\n    </div>\\n    `,\\n})\\nexport class ViewCellComponent {\\n  @Input() cell: Cell;\\n}\\n\",\"import { Component, Input, Output, EventEmitter } from '@angular/core';\\nimport { Cell } from '../../defines/data-set/cell.define';\\nimport { Row } from '../../defines/data-set/row.define';\\nimport { Grid } from '../../defines/grid.define';\\n\\n@Component({\\n  selector: 'smart-intel-table-cell',\\n  template: `\\n    <table-cell-view-mode *ngIf=\\\"!isInEditing\\\" [cell]=\\\"cell\\\"></table-cell-view-mode>\\n    <table-cell-edit-mode *ngIf=\\\"isInEditing\\\" [cell]=\\\"cell\\\"\\n                          [inputClass]=\\\"inputClass\\\"\\n                          (edited)=\\\"editedEvent($event)\\\">\\n    </table-cell-edit-mode>\\n  `,\\n})\\nexport class CellComponent {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() editConfirm: EventEmitter<any>;\\n  @Input() createConfirm: EventEmitter<any>;\\n  @Input() isNew: boolean;\\n  @Input() cell: Cell;\\n  @Input() inputClass: string = '';\\n  @Input() mode: string = 'inline';\\n  @Input() isInEditing: boolean = false;\\n  @Output() edited = new EventEmitter<any>();\\n\\n  editedEvent(event) {\\n    if (this.isNew) {\\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\\n    } else {\\n      this.grid.save(this.row, this.editConfirm);\\n    }\\n  }\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { Ng2CompleterModule } from 'ng2-completer';\\nimport { CellComponent } from './cell.component';\\nimport { CustomEditComponent } from './cell-edit-mode/custom-edit.component';\\nimport { DefaultEditComponent } from './cell-edit-mode/default-edit.component';\\nimport { EditCellComponent } from './cell-edit-mode/edit-cell.component';\\nimport { CheckboxEditorComponent } from './cell-editors/checkbox-editor.component';\\nimport { CompleterEditorComponent } from './cell-editors/completer-editor.component';\\nimport { InputEditorComponent } from './cell-editors/input-editor.component';\\nimport { SelectEditorComponent } from './cell-editors/select-editor.component';\\nimport { TextareaEditorComponent } from './cell-editors/textarea-editor.component';\\nimport { CustomViewComponent } from './cell-view-mode/custom-view.component';\\nimport { ViewCellComponent } from './cell-view-mode/view-cell.component';\\nimport { EditCellDefault } from './cell-edit-mode/edit-cell-default';\\nimport { DefaultEditorBase } from './cell-editors/default-editor';\\n\\nconst CELL_COMPONENTS = [\\n  CellComponent,\\n  EditCellDefault,\\n  DefaultEditorBase,\\n  CustomEditComponent,\\n  DefaultEditComponent,\\n  EditCellComponent,\\n  CheckboxEditorComponent,\\n  CompleterEditorComponent,\\n  InputEditorComponent,\\n  SelectEditorComponent,\\n  TextareaEditorComponent,\\n  CustomViewComponent,\\n  ViewCellComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    Ng2CompleterModule\\n  ],\\n  declarations: [\\n    ...CELL_COMPONENTS\\n  ],\\n  exports: [\\n    ...CELL_COMPONENTS\\n  ]\\n})\\nexport class CellModule { }\\n\",\"import { Output, EventEmitter, Input, Component } from '@angular/core';\\nimport { Column } from '../../defines/data-set/column.define';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class FilterDefault {\\n  @Input() column: Column;\\n  @Input() source: DataSource;\\n  @Input() inputClass = '';\\n  @Output() filter = new EventEmitter<any>();\\n  query = '';\\n\\n  onFilter(query: string) {\\n    this.source.addFilter({\\n      field: this.column.id,\\n      search: query,\\n      filter: this.column.getFilterFunction()\\n    });\\n  }\\n}\\n\",\"import { Input, Output, EventEmitter, OnDestroy, Component } from '@angular/core';\\nimport { Subscription } from 'rxjs';\\nimport { Column } from '../../../defines/data-set/column.define';\\n\\n@Component({\\n  template: ''\\n})\\nexport class DefaultFilter\\nimplements Ifilter, OnDestroy {\\n  @Input() query: string;\\n  @Input() inputClass: string;\\n  @Input() column: Column;\\n  @Output() filter = new EventEmitter<string>();\\n  delay = 300;\\n  changesSubscription: Subscription;\\n\\n  ngOnDestroy() {\\n    if (this.changesSubscription) {\\n      this.changesSubscription.unsubscribe();\\n    }\\n  }\\n\\n  setFilter() {\\n    this.filter.emit(this.query);\\n  }\\n}\\n\\nexport interface Ifilter {\\n  delay?: number;\\n  changesSubscription?: Subscription;\\n  query: string;\\n  inputClass: string;\\n  column: Column;\\n  filter: EventEmitter<string>;\\n}\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { UntypedFormControl } from '@angular/forms';\\nimport { DefaultFilter } from './default-filter';\\nimport { debounceTime } from 'rxjs/operators';\\n\\n@Component({\\n  selector: 'checkbox-filter',\\n  template: `\\n    <input type=\\\"checkbox\\\" [formControl]=\\\"inputControl\\\" [ngClass]=\\\"inputClass\\\" class=\\\"form-control\\\">\\n    <a href=\\\"#\\\" *ngIf=\\\"filterActive\\\"\\n                (click)=\\\"resetFilter($event)\\\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\\n  `,\\n})\\nexport class CheckboxFilterComponent \\n  extends DefaultFilter \\n  implements OnInit {\\n  filterActive: boolean = false;\\n  inputControl = new UntypedFormControl();\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    this.changesSubscription = this.inputControl.valueChanges\\n      .pipe(debounceTime(this.delay))\\n      .subscribe((checked: boolean) => {\\n        this.filterActive = true;\\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\\n        this.query = checked ? trueVal : falseVal;\\n        this.setFilter();\\n      });\\n  }\\n\\n  resetFilter(event) {\\n    event.preventDefault();\\n    this.query = '';\\n    this.inputControl.setValue(false, { emitEvent: false });\\n    this.filterActive = false;\\n    this.setFilter();\\n  }\\n}\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { Subject } from 'rxjs';\\nimport { CompleterService } from 'ng2-completer';\\nimport { DefaultFilter } from './default-filter';\\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\\n\\n@Component({\\n  selector: 'completer-filter',\\n  template: `\\n    <ng2-completer [(ngModel)]=\\\"query\\\"\\n                    (ngModelChange)=\\\"inputTextChanged($event)\\\"\\n                    [dataService]=\\\"column.getFilterConfig().completer.dataService\\\"\\n                    [minSearchLength]=\\\"column.getFilterConfig().completer.minSearchLength || 0\\\"\\n                    [pause]=\\\"column.getFilterConfig().completer.pause || 0\\\"\\n                    [placeholder]=\\\"column.getFilterConfig().completer.placeholder || 'Start typing...'\\\"\\n                    (selected)=\\\"completerContent.next($event)\\\">\\n    </ng2-completer>\\n  `,\\n})\\nexport class CompleterFilterComponent \\nextends DefaultFilter implements OnInit {\\n  completerContent = new Subject<any>();\\n\\n  constructor(\\n    private completerService: CompleterService\\n  ) {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    const config = this.column.getFilterConfig().completer;\\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\\n    config.dataService.descriptionField(config.descriptionField);\\n\\n    this.changesSubscription = this.completerContent\\n      .pipe(\\n        map((ev) => (ev && ev.title) || ev || ''),\\n        distinctUntilChanged(),\\n        debounceTime(this.delay)\\n      )\\n      .subscribe((search: string) => {\\n        this.query = search;\\n        this.setFilter();\\n      });\\n  }\\n\\n  inputTextChanged(event: string) {\\n    // workaround to trigger the search event when the home/end buttons are clicked\\n    // when this happens the [(ngModel)]=\\\"query\\\" is set to \\\"\\\" but the (selected) method is not called\\n    // so here it gets called manually\\n    if (event === '') {\\n      this.completerContent.next(event);\\n    }\\n  }\\n}\\n\",\"import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\\nimport { UntypedFormControl } from '@angular/forms';\\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\\nimport { DefaultFilter } from './default-filter';\\n\\n@Component({\\n  selector: 'input-filter',\\n  template: `\\n    <input\\n      [ngClass]=\\\"inputClass\\\"\\n      [formControl]=\\\"inputControl\\\"\\n      class=\\\"form-control\\\"\\n      type=\\\"text\\\"\\n      placeholder=\\\"{{ column.title }}\\\"/>\\n  `,\\n})\\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\\n\\n  inputControl = new UntypedFormControl();\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    if (this.query) {\\n      this.inputControl.setValue(this.query);\\n    }\\n    this.inputControl.valueChanges\\n      .pipe(\\n        distinctUntilChanged(),\\n        debounceTime(this.delay),\\n      )\\n      .subscribe((value: string) => {\\n        this.query = this.inputControl.value;\\n        this.setFilter();\\n      });\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.query) {\\n      this.inputControl.setValue(this.query);\\n    }\\n  }\\n}\\n\",\"import { Component, OnInit, ViewChild } from '@angular/core';\\nimport { NgControl } from '@angular/forms';\\nimport { distinctUntilChanged, debounceTime, skip } from 'rxjs/operators';\\nimport { DefaultFilter } from './default-filter';\\n\\n@Component({\\n  selector: 'select-filter',\\n  template: `\\n    <select [ngClass]=\\\"inputClass\\\"\\n            class=\\\"form-control\\\"\\n            #inputControl\\n            [(ngModel)]=\\\"query\\\">\\n\\n        <option value=\\\"\\\">{{ column.getFilterConfig().selectText }}</option>\\n        <option *ngFor=\\\"let option of column.getFilterConfig().list\\\" [value]=\\\"option.value\\\">\\n          {{ option.title }}\\n        </option>\\n    </select>\\n  `,\\n})\\nexport class SelectFilterComponent \\nextends DefaultFilter \\nimplements OnInit {\\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl: NgControl;\\n\\n  constructor() {\\n    super();\\n  }\\n\\n  ngOnInit() {\\n    this.inputControl.valueChanges\\n      .pipe(\\n        skip(1),\\n        distinctUntilChanged(),\\n        debounceTime(this.delay)\\n      )\\n      .subscribe((value: string) => this.setFilter());\\n  }\\n}\\n\",\"import {Component, Input} from '@angular/core';\\nimport {FilterDefault} from \\\"./filter-default\\\";\\n\\n@Component({\\n  selector: 'default-table-filter',\\n  template: `\\n    <ng-container [ngSwitch]=\\\"column.getFilterType()\\\">\\n      <select-filter *ngSwitchCase=\\\"'list'\\\"\\n                      [query]=\\\"query\\\"\\n                      [ngClass]=\\\"inputClass\\\"\\n                      [column]=\\\"column\\\"\\n                      (filter)=\\\"onFilter($event)\\\">\\n      </select-filter>\\n      <checkbox-filter *ngSwitchCase=\\\"'checkbox'\\\"\\n                        [query]=\\\"query\\\"\\n                        [ngClass]=\\\"inputClass\\\"\\n                        [column]=\\\"column\\\"\\n                        (filter)=\\\"onFilter($event)\\\">\\n      </checkbox-filter>\\n      <completer-filter *ngSwitchCase=\\\"'completer'\\\"\\n                        [query]=\\\"query\\\"\\n                        [ngClass]=\\\"inputClass\\\"\\n                        [column]=\\\"column\\\"\\n                        (filter)=\\\"onFilter($event)\\\">\\n      </completer-filter>\\n      <input-filter *ngSwitchDefault\\n                    [query]=\\\"query\\\"\\n                    [ngClass]=\\\"inputClass\\\"\\n                    [column]=\\\"column\\\"\\n                    (filter)=\\\"onFilter($event)\\\">\\n      </input-filter>\\n    </ng-container>\\n  `,\\n})\\nexport class DefaultFilterComponent extends FilterDefault {\\n  @Input() query: string;\\n}\\n\",\"import {\\n  Component,\\n  ComponentFactoryResolver, Input,\\n  OnChanges,\\n  OnDestroy,\\n  SimpleChanges,\\n  ViewChild,\\n  ViewContainerRef\\n} from '@angular/core';\\nimport { FilterDefault } from './filter-default';\\n\\n@Component({\\n  selector: 'custom-table-filter',\\n  template: `<ng-template #dynamicTarget></ng-template>`,\\n})\\nexport class CustomFilterComponent \\nextends FilterDefault \\nimplements OnChanges, OnDestroy {\\n  @Input() query: string;\\n  customComponent;\\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget;\\n\\n  constructor(private resolver: ComponentFactoryResolver) {\\n    super();\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (this.column && !this.customComponent) {\\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\\n\\n      // set @Inputs and @Outputs of custom component\\n      this.customComponent.instance.query = this.query;\\n      this.customComponent.instance.column = this.column;\\n      this.customComponent.instance.source = this.source;\\n      this.customComponent.instance.inputClass = this.inputClass;\\n      this.customComponent.instance.filter.subscribe((event) => this.onFilter(event));\\n    }\\n    if (this.customComponent) {\\n      this.customComponent.instance.ngOnChanges(changes);\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.customComponent) {\\n      this.customComponent.destroy();\\n    }\\n  }\\n}\\n\",\"import { Component, OnChanges, SimpleChanges } from '@angular/core';\\nimport { FilterDefault } from './filter-default';\\nimport { Subscription } from 'rxjs';\\n\\n@Component({\\n  selector: 'smart-intel-table-filter',\\n  styleUrls: ['./filter.component.scss'],\\n  template: `\\n      <div class=\\\"smart-table-filter\\\" *ngIf=\\\"column.isFilterable\\\" [ngSwitch]=\\\"column.getFilterType()\\\">\\n        <custom-table-filter *ngSwitchCase=\\\"'custom'\\\"\\n                              [query]=\\\"query\\\"\\n                              [column]=\\\"column\\\"\\n                              [source]=\\\"source\\\"\\n                              [inputClass]=\\\"inputClass\\\"\\n                              (filter)=\\\"onFilter($event)\\\">\\n        </custom-table-filter>\\n        <default-table-filter *ngSwitchDefault\\n                              [query]=\\\"query\\\"\\n                              [column]=\\\"column\\\"\\n                              [source]=\\\"source\\\"\\n                              [inputClass]=\\\"inputClass\\\"\\n                              (filter)=\\\"onFilter($event)\\\">\\n        </default-table-filter>\\n      </div>\\n    `,\\n})\\nexport class FilterComponent \\nextends FilterDefault \\nimplements OnChanges {\\n  query: string = '';\\n  protected dataChangedSub: Subscription;\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.source) {\\n      if (!changes.source.firstChange) {\\n        this.dataChangedSub.unsubscribe();\\n      }\\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\\n        const filterConf = this.source.getFilter();\\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\\n          this.query = '';\\n\\n          // add a check for existing filters an set the query if one exists for this column\\n          // this covers instances where the filter is set by user code while maintaining existing functionality\\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\\n          filterConf.filters.forEach((k, v) => {\\n            if (k.field == this.column.id) {\\n              this.query = k.search;\\n            }\\n          });\\n        }\\n      });\\n    }\\n  }\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\\nimport { Ng2CompleterModule } from 'ng2-completer';\\nimport { FilterComponent } from './filter.component';\\nimport { DefaultFilterComponent } from './default-filter.component';\\nimport { CustomFilterComponent } from './custom-filter.component';\\nimport { CheckboxFilterComponent } from './filter-types/checkbox-filter.component';\\nimport { CompleterFilterComponent } from './filter-types/completer-filter.component';\\nimport { InputFilterComponent } from './filter-types/input-filter.component';\\nimport { SelectFilterComponent } from './filter-types/select-filter.component';\\nimport { DefaultFilter } from './filter-types/default-filter';\\nimport { FilterDefault } from './filter-default';\\n\\nconst FILTER_COMPONENTS = [\\n  FilterDefault,\\n  DefaultFilter,\\n  FilterComponent,\\n  DefaultFilterComponent,\\n  CustomFilterComponent,\\n  CheckboxFilterComponent,\\n  CompleterFilterComponent,\\n  InputFilterComponent,\\n  SelectFilterComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    Ng2CompleterModule\\n  ],\\n  declarations: [\\n    ...FILTER_COMPONENTS\\n  ],\\n  exports: [\\n    ...FILTER_COMPONENTS\\n  ]\\n})\\nexport class FilterModule { }\\n\",\"import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\\nimport { Subscription } from 'rxjs';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\n\\n@Component({\\n  selector: 'smart-intel-table-pager',\\n  styleUrls: ['./pager.component.scss'],\\n  template: `\\n    <nav *ngIf=\\\"shouldShow()\\\" class=\\\"smart-table-pagination-nav\\\">\\n      <ul class=\\\"smart-table-pagination pagination\\\">\\n        <li class=\\\"smart-table-page-item page-item\\\" [ngClass]=\\\"{disabled: getPage() == 1}\\\">\\n          <a class=\\\"smart-table-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"getPage() == 1 ? false : paginate(1)\\\" aria-label=\\\"First\\\">\\n            <span aria-hidden=\\\"true\\\">&laquo;</span>\\n            <span class=\\\"sr-only\\\">First</span>\\n          </a>\\n        </li>\\n        <li class=\\\"smart-table-page-item page-item\\\" [ngClass]=\\\"{disabled: getPage() == 1}\\\">\\n          <a class=\\\"smart-table-page-link page-link page-link-prev\\\" href=\\\"#\\\"\\n             (click)=\\\"getPage() == 1 ? false : prev()\\\" aria-label=\\\"Prev\\\">\\n            <span aria-hidden=\\\"true\\\">&lt;</span>\\n            <span class=\\\"sr-only\\\">Prev</span>\\n          </a>\\n        </li>\\n        <li class=\\\"smart-table-page-item page-item\\\"\\n        [ngClass]=\\\"{active: getPage() == page}\\\" *ngFor=\\\"let page of getPages()\\\">\\n          <span class=\\\"smart-table-page-link page-link\\\"\\n          *ngIf=\\\"getPage() == page\\\">{{ page }} <span class=\\\"sr-only\\\">(current)</span></span>\\n          <a class=\\\"smart-table-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"paginate(page)\\\" *ngIf=\\\"getPage() != page\\\">{{ page }}</a>\\n        </li>\\n\\n        <li class=\\\"smart-table-page-item page-item\\\"\\n            [ngClass]=\\\"{disabled: getPage() == getLast()}\\\">\\n          <a class=\\\"smart-table-page-link page-link page-link-next\\\" href=\\\"#\\\"\\n             (click)=\\\"getPage() == getLast() ? false : next()\\\" aria-label=\\\"Next\\\">\\n            <span aria-hidden=\\\"true\\\">&gt;</span>\\n            <span class=\\\"sr-only\\\">Next</span>\\n          </a>\\n        </li>\\n        \\n        <li class=\\\"smart-table-page-item page-item\\\"\\n        [ngClass]=\\\"{disabled: getPage() == getLast()}\\\">\\n          <a class=\\\"smart-table-page-link page-link\\\" href=\\\"#\\\"\\n          (click)=\\\"getPage() == getLast() ? false : paginate(getLast())\\\" aria-label=\\\"Last\\\">\\n            <span aria-hidden=\\\"true\\\">&raquo;</span>\\n            <span class=\\\"sr-only\\\">Last</span>\\n          </a>\\n        </li>\\n      </ul>\\n    </nav>\\n    \\n    <nav *ngIf=\\\"perPageSelect && perPageSelect.length > 0\\\" class=\\\"smart-table-pagination-per-page\\\">\\n      <label for=\\\"per-page\\\">\\n        Per Page:\\n      </label>\\n      <select (change)=\\\"onChangePerPage($event)\\\" [(ngModel)]=\\\"currentPerPage\\\" id=\\\"per-page\\\">\\n        <option *ngFor=\\\"let item of perPageSelect\\\" [value]=\\\"item\\\">{{ item }}</option>\\n      </select>\\n    </nav>\\n  `,\\n})\\nexport class PagerComponent \\nimplements OnChanges {\\n  @Input() source: DataSource;\\n  @Input() perPageSelect = [];\\n  @Output() changePage = new EventEmitter<any>();\\n  currentPerPage;\\n  protected pages: Array<any>;\\n  protected page: number;\\n  protected count: number = 0;\\n  protected perPage: number;\\n  protected dataChangedSub: Subscription;\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.source) {\\n      if (!changes.source.firstChange) {\\n        this.dataChangedSub.unsubscribe();\\n      }\\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\\n        this.page = this.source.getPaging().page;\\n        this.perPage = this.source.getPaging().perPage;\\n        this.currentPerPage = this.perPage;\\n        this.count = this.source.count();\\n        if (this.isPageOutOfBounce()) {\\n          this.source.setPage(--this.page);\\n        }\\n\\n        this.processPageChange(dataChanges);\\n        this.initPages();\\n      });\\n    }\\n  }\\n\\n  /**\\n   * We change the page here depending on the action performed against data source\\n   * if a new element was added to the end of the table - then change the page to the last\\n   * if a new element was added to the beginning of the table - then to the first page\\n   * @param changes\\n   */\\n  processPageChange(changes) {\\n    if (changes['action'] === 'prepend') {\\n      this.source.setPage(1);\\n    }\\n    if (changes['action'] === 'append') {\\n      this.source.setPage(this.getLast());\\n    }\\n  }\\n\\n  shouldShow(): boolean {\\n    return this.source.count() > this.perPage;\\n  }\\n\\n  paginate(page: number): boolean {\\n    this.source.setPage(page);\\n    this.page = page;\\n    this.changePage.emit({ page });\\n    return false;\\n  }\\n\\n  next(): boolean {\\n    return this.paginate(this.getPage() + 1);\\n  }\\n\\n  prev(): boolean {\\n    return this.paginate(this.getPage() - 1);\\n  }\\n\\n  getPage(): number {\\n    return this.page;\\n  }\\n\\n  getPages(): Array<any> {\\n    return this.pages;\\n  }\\n\\n  getLast(): number {\\n    return Math.ceil(this.count / this.perPage);\\n  }\\n\\n  isPageOutOfBounce(): boolean {\\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\\n  }\\n\\n  initPages() {\\n    const pagesCount = this.getLast();\\n    let showPagesCount = 4;\\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\\n    this.pages = [];\\n\\n    if (this.shouldShow()) {\\n\\n      let middleOne = Math.ceil(showPagesCount / 2);\\n      middleOne = this.page >= middleOne ? this.page : middleOne;\\n\\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\\n\\n      const firstOne = lastOne - showPagesCount + 1;\\n\\n      for (let i = firstOne; i <= lastOne; i++) {\\n        this.pages.push(i);\\n      }\\n    }\\n  }\\n\\n  onChangePerPage(event) {\\n    if (this.currentPerPage) {\\n\\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\\n        this.source.getPaging().perPage = null;\\n      } else {\\n        this.source.getPaging().perPage = this.currentPerPage * 1;\\n        this.source.refresh();\\n      }\\n      this.initPages();\\n    }\\n  }\\n\\n}\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { PagerComponent } from './pager.component';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule\\n  ],\\n  declarations: [\\n    PagerComponent\\n  ],\\n  exports: [\\n    PagerComponent\\n  ]\\n})\\nexport class PagerModule { }\\n\",\"import { Component, Input, EventEmitter, OnChanges } from '@angular/core';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: 'smart-table-body-create-cancel',\\n  template: `\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-edit-save\\\"\\n        [innerHTML]=\\\"saveButtonContent\\\" (click)=\\\"onSave($event)\\\"></a>\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-edit-cancel\\\"\\n        [innerHTML]=\\\"cancelButtonContent\\\" (click)=\\\"onCancelEdit($event)\\\"></a>\\n  `,\\n})\\nexport class TbodyCreateCancelComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() editConfirm: EventEmitter<any>;\\n  cancelButtonContent: string;\\n  saveButtonContent: string;\\n\\n  onSave(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n\\n    this.grid.save(this.row, this.editConfirm);\\n  }\\n\\n  onCancelEdit(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n\\n    this.row.isInEditing = false;\\n  }\\n\\n  ngOnChanges() {\\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\\n  }\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: 'smart-table-body-edit-delete',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  template: `\\n    <a href=\\\"#\\\" *ngIf=\\\"isActionEdit\\\" class=\\\"smart-table-action smart-table-action-edit-edit\\\"\\n        [innerHTML]=\\\"editRowButtonContent\\\" (click)=\\\"onEdit($event)\\\"></a>\\n    <a href=\\\"#\\\" *ngIf=\\\"isActionDelete\\\" class=\\\"smart-table-action smart-table-action-delete-delete\\\"\\n        [innerHTML]=\\\"deleteRowButtonContent\\\" (click)=\\\"onDelete($event)\\\"></a>\\n  `,\\n})\\nexport class TbodyEditDeleteComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() source: DataSource;\\n  @Input() deleteConfirm: EventEmitter<any>;\\n  @Input() editConfirm: EventEmitter<any>;\\n  @Output() edit = new EventEmitter<any>();\\n  @Output() delete = new EventEmitter<any>();\\n  @Output() editRowSelect = new EventEmitter<any>();\\n\\n  isActionEdit: boolean;\\n  isActionDelete: boolean;\\n  editRowButtonContent: string;\\n  deleteRowButtonContent: string;\\n\\n  onEdit(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n\\n    this.editRowSelect.emit(this.row);\\n\\n    if (this.grid.getSetting('mode') === 'external') {\\n      this.edit.emit({\\n        data: this.row.getData(),\\n        source: this.source,\\n      });\\n    } else {\\n      this.grid.edit(this.row);\\n    }\\n  }\\n\\n  onDelete(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n    if (this.grid.getSetting('mode') === 'external') {\\n      this.delete.emit({\\n        data: this.row.getData(),\\n        source: this.source,\\n      });\\n    } else {\\n      this.grid.delete(this.row, this.deleteConfirm);\\n    }\\n  }\\n\\n  ngOnChanges(){\\n    this.isActionEdit = this.grid.getSetting('actions.edit');\\n    this.isActionDelete = this.grid.getSetting('actions.delete');\\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\\n  }\\n}\\n\",\"import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n    selector: 'smart-table-body-custom',\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    template: `\\n      <a *ngFor=\\\"let action of grid.getSetting('actions.custom')\\\" href=\\\"#\\\"\\n        class=\\\"smart-table-action smart-table-action-custom-custom\\\" \\n        [innerHTML]=\\\"action.title\\\"\\n        (click)=\\\"onCustom(action, $event)\\\"></a>\\n        `\\n})\\nexport class TbodyCustomComponent {\\n    @Input() grid: Grid;\\n    @Input() row: Row;\\n    @Input() source;\\n    @Output() custom = new EventEmitter<any>();\\n\\n    onCustom(action, event) {\\n        event.preventDefault();\\n        event.stopPropagation();\\n\\n        this.custom.emit({\\n            action: action.name,\\n            data: this.row.getData(),\\n            source: this.source\\n        });\\n    }\\n\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { Cell } from '../../defines/data-set/cell.define';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\nimport { Grid } from '../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-body]',\\n  styleUrls: ['./tbody.component.scss'],\\n  templateUrl: './tbody.component.html'\\n})\\nexport class Ng2SmartTableTbodyComponent\\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Input() deleteConfirm: EventEmitter<any>;\\n  @Input() editConfirm: EventEmitter<any>;\\n  @Input() rowClassFunction: (...args) => any; // Function ;\\n  @Output() save = new EventEmitter<any>();\\n  @Output() cancel = new EventEmitter<any>();\\n  @Output() edit = new EventEmitter<any>();\\n  @Output() delete = new EventEmitter<any>();\\n  @Output() custom = new EventEmitter<any>();\\n  @Output() edited = new EventEmitter<any>();\\n  @Output() userSelectRow = new EventEmitter<any>();\\n  @Output() editRowSelect = new EventEmitter<any>();\\n  @Output() multipleSelectRow = new EventEmitter<any>();\\n  @Output() rowHover = new EventEmitter<any>();\\n\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n  mode: string;\\n  editInputClass: string;\\n  isActionAdd: boolean;\\n  isActionEdit: boolean;\\n  isActionDelete: boolean;\\n  noDataMessage: boolean;\\n\\n  get tableColumnsCount() {\\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\\n    return this.grid.getColumns().length + actionColumns;\\n  }\\n\\n  ngOnChanges() {\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.mode = this.grid.getSetting('mode');\\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n    this.isActionAdd = this.grid.getSetting('actions.add');\\n    this.isActionEdit = this.grid.getSetting('actions.edit');\\n    this.isActionDelete = this.grid.getSetting('actions.delete');\\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\\n  }\\n\\n  getVisibleCells(cells: Cell[]): Cell[] {\\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\\n  }\\n}\\n\",\"<tr\\n  *ngFor=\\\"let row of grid.getRows()\\\"\\n  (click)=\\\"userSelectRow.emit(row)\\\"\\n  (mouseover)=\\\"rowHover.emit(row)\\\"\\n  class=\\\"smart-table-row\\\"\\n  [className]=\\\"rowClassFunction(row)\\\"\\n  [ngClass]=\\\"{ selected: row.isSelected }\\\"\\n>\\n  <td\\n    *ngIf=\\\"isMultiSelectVisible\\\"\\n    class=\\\"smart-table-actions smart-table-action-multiple-select\\\"\\n    (click)=\\\"multipleSelectRow.emit(row)\\\"\\n  >\\n    <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [ngModel]=\\\"row.isSelected\\\" />\\n  </td>\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n  <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n    <smart-intel-table-cell\\n      [cell]=\\\"cell\\\"\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [isNew]=\\\"false\\\"\\n      [mode]=\\\"mode\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [inputClass]=\\\"editInputClass\\\"\\n      [isInEditing]=\\\"row.isInEditing\\\"\\n    >\\n    </smart-intel-table-cell>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-create-cancel\\n      [grid]=\\\"grid\\\"\\n      [row]=\\\"row\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n    ></smart-table-body-create-cancel>\\n  </td>\\n\\n  <td\\n    *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\"\\n    class=\\\"smart-table-actions\\\"\\n  >\\n    <smart-table-body-custom\\n      [grid]=\\\"grid\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n    ></smart-table-body-custom>\\n\\n    <smart-table-body-edit-delete\\n      [grid]=\\\"grid\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [row]=\\\"row\\\"\\n      [source]=\\\"source\\\"\\n      (edit)=\\\"edit.emit(row)\\\"\\n      (delete)=\\\"delete.emit(row)\\\"\\n      (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n    >\\n    </smart-table-body-edit-delete>\\n  </td>\\n</tr>\\n\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { CellModule } from '../cell/cell.module';\\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\\nimport { TbodyCreateCancelComponent } from './cells/create-cancel.component';\\nimport { TbodyEditDeleteComponent } from './cells/edit-delete.component';\\nimport { TbodyCustomComponent } from './cells/custom.component';\\n\\nconst TBODY_COMPONENTS = [\\n  TbodyCreateCancelComponent,\\n  TbodyEditDeleteComponent,\\n  TbodyCustomComponent,\\n  Ng2SmartTableTbodyComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    CellModule\\n  ],\\n  declarations: [\\n    ...TBODY_COMPONENTS\\n  ],\\n  exports: [\\n    ...TBODY_COMPONENTS\\n  ]\\n})\\nexport class TbodyModule { }\\n\",\"import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef, OnChanges } from '@angular/core';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-add-button]',\\n  template: `\\n    <a *ngIf=\\\"isActionAdd\\\" href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-add-add\\\"\\n        [innerHTML]=\\\"addNewButtonContent\\\" (click)=\\\"onAdd($event)\\\"></a>\\n  `,\\n})\\nexport class AddButtonComponent \\nimplements AfterViewInit, OnChanges {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Output() create = new EventEmitter<any>();\\n  isActionAdd: boolean;\\n  addNewButtonContent: string;\\n\\n  constructor(private ref: ElementRef) { }\\n\\n  ngAfterViewInit() {\\n    this.ref.nativeElement.classList.add('smart-table-actions-title', 'smart-table-actions-title-add');\\n  }\\n\\n  ngOnChanges() {\\n    this.isActionAdd = this.grid.getSetting('actions.add');\\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\\n  }\\n\\n  onAdd(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n    if (this.grid.getSetting('mode') === 'external') {\\n      this.create.emit({\\n        source: this.source,\\n      });\\n    } else {\\n      this.grid.createFormShown = true;\\n    }\\n  }\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\\nimport { Column } from '../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-thead-filters-row]',\\n  template: `\\n    <th *ngIf=\\\"isMultiSelectVisible\\\"></th>\\n    <th smart-table-add-button *ngIf=\\\"showActionColumnLeft\\\"\\n                          [grid]=\\\"grid\\\"\\n                          (create)=\\\"create.emit($event)\\\">\\n    </th>\\n    <th *ngFor=\\\"let column of getVisibleColumns(grid.getColumns())\\\" class=\\\"smart-table-th {{ column.id }}\\\">\\n      <smart-intel-table-filter [source]=\\\"source\\\"\\n                              [column]=\\\"column\\\"\\n                              [inputClass]=\\\"filterInputClass\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n      </smart-intel-table-filter>\\n    </th>\\n    <th smart-table-add-button *ngIf=\\\"showActionColumnRight\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [source]=\\\"source\\\"\\n                          (create)=\\\"create.emit($event)\\\">\\n    </th>\\n  `,\\n})\\nexport class TheadFitlersRowComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Output() create = new EventEmitter<any>();\\n  @Output() filter = new EventEmitter<any>();\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n  filterInputClass: string;\\n\\n  ngOnChanges() {\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\\n  }\\n\\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\\n    return (columns || []).filter((column: Column) => !column.hide);\\n  }\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n\\n@Component({\\n  selector: 'ng2-st-actions',\\n  template: `\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-add-create\\\"\\n        [innerHTML]=\\\"createButtonContent\\\"\\n        (click)=\\\"$event.preventDefault();create.emit($event)\\\"></a>\\n    <a href=\\\"#\\\" class=\\\"smart-table-action smart-table-action-add-cancel\\\"\\n        [innerHTML]=\\\"cancelButtonContent\\\"\\n        (click)=\\\"$event.preventDefault();grid.createFormShown = false;\\\"></a>\\n  `,\\n})\\nexport class ActionsComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Output() create = new EventEmitter<any>();\\n\\n  createButtonContent: string;\\n  cancelButtonContent: string;\\n\\n  ngOnChanges() {\\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\\n  }\\n}\\n\",\"import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { Cell } from '../../../defines/data-set/cell.define';\\nimport { Row } from '../../../defines/data-set/row.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n\\n@Component({\\n  selector: '[smart-table-thead-form-row]',\\n  template: `\\n      <td *ngIf=\\\"\\\"></td>\\n      <td  *ngIf=\\\"showActionColumnLeft\\\"  class=\\\"smart-table-actions\\\">\\n        <ng2-st-actions [grid]=\\\"grid\\\" (create)=\\\"onCreate($event)\\\"></ng2-st-actions>\\n      </td>\\n      <td *ngFor=\\\"let cell of getVisibleCells(grid.getNewRow().getCells())\\\">\\n        <smart-intel-table-cell [cell]=\\\"cell\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [isNew]=\\\"true\\\"\\n                              [createConfirm]=\\\"createConfirm\\\"\\n                              [inputClass]=\\\"addInputClass\\\"\\n                              [isInEditing]=\\\"grid.getNewRow().isInEditing\\\"\\n                              (edited)=\\\"onCreate($event)\\\">\\n        </smart-intel-table-cell>\\n      </td>\\n      <td  *ngIf=\\\"showActionColumnRight\\\"  class=\\\"smart-table-actions\\\">\\n        <ng2-st-actions [grid]=\\\"grid\\\" (create)=\\\"onCreate($event)\\\"></ng2-st-actions>\\n      </td>\\n  `,\\n})\\nexport class TheadFormRowComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() row: Row;\\n  @Input() createConfirm: EventEmitter<any>;\\n  @Output() create = new EventEmitter<any>();\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n  addInputClass: string;\\n\\n  onCreate(event) {\\n    event.stopPropagation();\\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\\n  }\\n\\n  ngOnChanges(){\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n    this.addInputClass = this.grid.getSetting('add.inputClass');\\n  }\\n\\n  getVisibleCells(cells: Array<Cell>): Array<Cell> {\\n    return (cells || []).filter((cell: Cell) => !cell.getColumn().hide);\\n  }\\n}\\n\",\"import {Component, Input, AfterViewInit, ElementRef, OnChanges} from '@angular/core';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[ng2-st-actions-title]',\\n  template: `\\n    <div class=\\\"smart-table-title\\\">{{ actionsColumnTitle }}</div>\\n  `,\\n})\\nexport class ActionsTitleComponent \\nimplements AfterViewInit, OnChanges {\\n  @Input() grid: Grid;\\n  actionsColumnTitle: string;\\n\\n  constructor(private ref: ElementRef) { }\\n\\n  ngAfterViewInit() {\\n    this.ref.nativeElement.classList.add('smart-table-actions');\\n  }\\n\\n  ngOnChanges() {\\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\\n  }\\n}\\n\",\"import { Component, Input } from '@angular/core';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-checkbox-select-all]',\\n  template: `\\n    <input type=\\\"checkbox\\\" [ngModel]=\\\"isAllSelected\\\">\\n  `,\\n})\\nexport class CheckboxSelectAllComponent {\\n  @Input() grid: Grid;\\n  @Input() source: DataSource;\\n  @Input() isAllSelected: boolean;\\n}\\n\",\"import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\\nimport { Subscription } from 'rxjs';\\nimport { Column } from '../../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../../defines/data-source/data-source.define';\\n\\n@Component({\\n  selector: 'smart-intel-table-title',\\n  styleUrls: ['./title.component.scss'],\\n  template: `\\n    <a href=\\\"#\\\" *ngIf=\\\"column.isSortable\\\"\\n                (click)=\\\"_sort($event)\\\"\\n                class=\\\"smart-table-sort-link sort\\\"\\n                [ngClass]=\\\"currentDirection\\\">\\n      {{ column.title }}\\n    </a>\\n    <span class=\\\"smart-table-sort\\\" *ngIf=\\\"!column.isSortable\\\">{{ column.title }}</span>\\n  `,\\n})\\nexport class TitleComponent \\nimplements OnChanges {\\n  currentDirection = '';\\n  @Input() column: Column;\\n  @Input() source: DataSource;\\n  @Output() sort = new EventEmitter<any>();\\n  protected dataChangedSub: Subscription;\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes.source) {\\n      if (!changes.source.firstChange) {\\n        this.dataChangedSub.unsubscribe();\\n      }\\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\\n        const sortConf = this.source.getSort();\\n\\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\\n          this.currentDirection = sortConf[0]['direction'];\\n        } else {\\n          this.currentDirection = '';\\n        }\\n\\n        sortConf.forEach((fieldConf) => {\\n\\n        });\\n      });\\n    }\\n  }\\n\\n  _sort(event) {\\n    event.preventDefault();\\n    this.changeSortDirection();\\n    this.source.setSort([\\n      {\\n        field: this.column.id,\\n        direction: this.currentDirection,\\n        compare: this.column.getCompareFunction(),\\n      },\\n    ]);\\n    this.sort.emit(null);\\n  }\\n\\n  changeSortDirection(): string {\\n    if (this.currentDirection) {\\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\\n      this.currentDirection = newDirection;\\n    } else {\\n      this.currentDirection = this.column.sortDirection;\\n    }\\n    return this.currentDirection;\\n  }\\n}\\n\",\"import { Component, Input, Output, EventEmitter } from '@angular/core';\\nimport { Column } from '../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\n\\n@Component({\\n  selector: 'smart-table-column-title',\\n  template: `\\n    <div class=\\\"smart-table-title\\\">\\n      <smart-intel-table-title [source]=\\\"source\\\" [column]=\\\"column\\\" (sort)=\\\"sort.emit($event)\\\"></smart-intel-table-title>\\n    </div>\\n  `,\\n})\\nexport class ColumnTitleComponent {\\n  @Input() column: Column;\\n  @Input() source: DataSource;\\n  @Output() sort = new EventEmitter<any>();\\n\\n}\\n\",\"import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\\nimport { Column } from '../../../defines/data-set/column.define';\\nimport { DataSource } from '../../../defines/data-source/data-source.define';\\nimport { Grid } from '../../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-thead-titles-row]',\\n  template: `\\n    <th smart-table-checkbox-select-all *ngIf=\\\"isMultiSelectVisible\\\"\\n                                  [grid]=\\\"grid\\\"\\n                                  [source]=\\\"source\\\"\\n                                  [isAllSelected]=\\\"isAllSelected\\\"\\n                                  (click)=\\\"selectAllRows.emit($event)\\\">\\n    </th>\\n    <th ng2-st-actions-title *ngIf=\\\"showActionColumnLeft\\\" [grid]=\\\"grid\\\"></th>\\n    <th *ngFor=\\\"let column of getVisibleColumns(grid.getColumns())\\\"\\n        class=\\\"smart-table-th {{ column.id }}\\\"\\n        [ngClass]=\\\"column.class\\\"\\n        [style.width]=\\\"column.width\\\">\\n      <smart-table-column-title [source]=\\\"source\\\" [column]=\\\"column\\\" (sort)=\\\"sort.emit($event)\\\"></smart-table-column-title>\\n    </th>\\n    <th ng2-st-actions-title *ngIf=\\\"showActionColumnRight\\\" [grid]=\\\"grid\\\"></th>\\n  `,\\n})\\nexport class TheadTitlesRowComponent \\nimplements OnChanges {\\n  @Input() grid: Grid;\\n  @Input() isAllSelected: boolean;\\n  @Input() source: DataSource;\\n  @Output() sort = new EventEmitter<any>();\\n  @Output() selectAllRows = new EventEmitter<any>();\\n  isMultiSelectVisible: boolean;\\n  showActionColumnLeft: boolean;\\n  showActionColumnRight: boolean;\\n\\n  ngOnChanges() {\\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\\n    this.showActionColumnRight = this.grid.showActionColumn('right');\\n  }\\n\\n  getVisibleColumns(columns: Array<Column>): Array<Column> {\\n    return (columns || []).filter((column: Column) => !column.hide);\\n  }\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\\nimport { DataSource } from '../../defines/data-source/data-source.define';\\nimport { Grid } from '../../defines/grid.define';\\n\\n@Component({\\n  selector: '[smart-table-thead]',\\n  templateUrl: './thead.component.html'\\n})\\nexport class Ng2SmartTableTheadComponent\\nimplements OnChanges {\\n    @Input() grid: Grid;\\n    @Input() source: DataSource;\\n    @Input() isAllSelected: boolean;\\n    @Input() createConfirm: EventEmitter<any>;\\n    @Output() sort = new EventEmitter<any>();\\n    @Output() selectAllRows = new EventEmitter<any>();\\n    @Output() create = new EventEmitter<any>();\\n    @Output() filter = new EventEmitter<any>();\\n    isHideHeader: boolean;\\n    isHideSubHeader: boolean;\\n\\n    ngOnChanges() {\\n      this.isHideHeader = this.grid.getSetting('hideHeader');\\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\\n    }\\n}\\n\",\"<tr\\n  smart-table-thead-titles-row\\n  *ngIf=\\\"!isHideHeader\\\"\\n  class=\\\"smart-table-titles\\\"\\n  [grid]=\\\"grid\\\"\\n  [isAllSelected]=\\\"isAllSelected\\\"\\n  [source]=\\\"source\\\"\\n  (sort)=\\\"sort.emit($event)\\\"\\n  (selectAllRows)=\\\"selectAllRows.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-filters-row\\n  *ngIf=\\\"!isHideSubHeader\\\"\\n  class=\\\"smart-table-filters\\\"\\n  [grid]=\\\"grid\\\"\\n  [source]=\\\"source\\\"\\n  (create)=\\\"create.emit($event)\\\"\\n  (filter)=\\\"filter.emit($event)\\\"\\n></tr>\\n\\n<tr\\n  smart-table-thead-form-row\\n  *ngIf=\\\"grid.createFormShown\\\"\\n  [grid]=\\\"grid\\\"\\n  [createConfirm]=\\\"createConfirm\\\"\\n></tr>\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule } from '@angular/forms';\\nimport { FilterModule } from '../filter/filter.module';\\nimport { CellModule } from '../cell/cell.module';\\nimport { Ng2SmartTableTheadComponent } from './thead.component';\\nimport { ActionsComponent } from './cells/actions.component';\\nimport { ActionsTitleComponent } from './cells/actions-title.component';\\nimport { AddButtonComponent } from './cells/add-button.component';\\nimport { CheckboxSelectAllComponent } from './cells/checkbox-select-all.component';\\nimport { ColumnTitleComponent } from './cells/column-title.component';\\nimport { TitleComponent } from './cells/title/title.component';\\nimport { TheadFitlersRowComponent } from './rows/thead-filters-row.component';\\nimport { TheadFormRowComponent } from './rows/thead-form-row.component';\\nimport { TheadTitlesRowComponent } from './rows/thead-titles-row.component';\\n\\nconst THEAD_COMPONENTS = [\\n  ActionsComponent,\\n  ActionsTitleComponent,\\n  AddButtonComponent,\\n  CheckboxSelectAllComponent,\\n  ColumnTitleComponent,\\n  TitleComponent,\\n  TheadFitlersRowComponent,\\n  TheadFormRowComponent,\\n  TheadTitlesRowComponent,\\n  Ng2SmartTableTheadComponent\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    FilterModule,\\n    CellModule\\n  ],\\n  declarations: [\\n    ...THEAD_COMPONENTS\\n  ],\\n  exports: [\\n    ...THEAD_COMPONENTS\\n  ]\\n})\\nexport class TheadModule { }\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Subject } from 'rxjs';\\nimport { Observable } from 'rxjs';\\n\\nexport abstract class DataSource {\\n  protected onChangedSource = new Subject<any>();\\n  protected onAddedSource = new Subject<any>();\\n  protected onUpdatedSource = new Subject<any>();\\n  protected onRemovedSource = new Subject<any>();\\n\\n  refresh() {\\n    this.emitOnChanged('refresh');\\n  }\\n\\n  load(data: unknown[]): Promise<any> {\\n    this.emitOnChanged('load');\\n    return Promise.resolve();\\n  }\\n\\n  onChanged(): Observable<any> {\\n    return this.onChangedSource.asObservable();\\n  }\\n\\n  onAdded(): Observable<any> {\\n    return this.onAddedSource.asObservable();\\n  }\\n\\n  onUpdated(): Observable<any> {\\n    return this.onUpdatedSource.asObservable();\\n  }\\n\\n  onRemoved(): Observable<any> {\\n    return this.onRemovedSource.asObservable();\\n  }\\n\\n  prepend(element): Promise<any> {\\n    this.emitOnAdded(element);\\n    this.emitOnChanged('prepend');\\n    return Promise.resolve();\\n  }\\n\\n  append(element): Promise<any> {\\n    this.emitOnAdded(element);\\n    this.emitOnChanged('append');\\n    return Promise.resolve();\\n  }\\n\\n  add(element): Promise<any> {\\n    this.emitOnAdded(element);\\n    this.emitOnChanged('add');\\n    return Promise.resolve();\\n  }\\n\\n  remove(element): Promise<any> {\\n    this.emitOnRemoved(element);\\n    this.emitOnChanged('remove');\\n    return Promise.resolve();\\n  }\\n\\n  update(element, values): Promise<any> {\\n    this.emitOnUpdated(element);\\n    this.emitOnChanged('update');\\n    return Promise.resolve();\\n  }\\n\\n  empty(): Promise<any> {\\n    this.emitOnChanged('empty');\\n    return Promise.resolve();\\n  }\\n\\n  setSort(conf: any[], doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('sort');\\n    }\\n  }\\n\\n  setFilter(conf: any[], andOperator?: boolean, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('filter');\\n    }\\n  }\\n\\n  addFilter(fieldConf: object, andOperator?: boolean, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('filter');\\n    }\\n  }\\n\\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('paging');\\n    }\\n  }\\n\\n  setPage(page: number, doEmit?: boolean) {\\n    if (doEmit) {\\n      this.emitOnChanged('page');\\n    }\\n  }\\n\\n  protected emitOnRemoved(element) {\\n    this.onRemovedSource.next(element);\\n  }\\n\\n  protected emitOnUpdated(element) {\\n    this.onUpdatedSource.next(element);\\n  }\\n\\n  protected emitOnAdded(element) {\\n    this.onAddedSource.next(element);\\n  }\\n\\n  protected emitOnChanged(action: string) {\\n    this.getElements().then((elements) => this.onChangedSource.next({\\n      action,\\n      elements,\\n      paging: this.getPaging(),\\n      filter: this.getFilter(),\\n      sort: this.getSort()\\n    }));\\n  }\\n\\n  abstract getAll(): Promise<any>;\\n  abstract getElements(): Promise<any>;\\n  abstract getSort();\\n  abstract getFilter();\\n  abstract getPaging();\\n  abstract count(): number;\\n}\\n\",\"import { cloneDeep } from 'lodash';\\n\\n/**\\n * Extending object that entered in first argument.\\n *\\n * Returns extended object or false if have no target object or incorrect type.\\n *\\n * If you wish to clone source object (without modify it), just use empty new\\n * object as first argument, like this:\\n *   deepExtend({}, yourObj_1, [yourObj_N]);\\n */\\nexport const deepExtend = (...objects: any[]): any => {\\n  if (objects.length < 1 || typeof objects[0] !== 'object') {\\n    return false;\\n  }\\n\\n  if (objects.length < 2) {\\n    return objects[0];\\n  }\\n\\n  const target = objects[0];\\n\\n  // convert arguments to array and cut off target object\\n  const args = Array.prototype.slice.call(objects, 1);\\n\\n  let val;\\n  let src;\\n\\n  args.forEach((obj: any) => {\\n    // skip argument if it is array or isn't object\\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\\n      return;\\n    }\\n\\n    Object.keys(obj).forEach((key) => {\\n      src = target[key]; // source value\\n      val = obj[key]; // new value\\n\\n      // recursion prevention\\n      if (val === target) {\\n        return;\\n\\n        /**\\n         * if new value isn't object then just overwrite by new value\\n         * instead of extending.\\n         */\\n      } else if (typeof val !== 'object' || val === null) {\\n        target[key] = val;\\n        return;\\n\\n        // just clone arrays (and recursive clone objects inside)\\n      } else if (Array.isArray(val)) {\\n        target[key] = cloneDeep(val);\\n        return;\\n\\n        // overwrite by new value if source isn't object or array\\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\\n        target[key] = deepExtend({}, val);\\n        return;\\n\\n        // source value and new value is objects both, extending...\\n      } else {\\n        target[key] = deepExtend(src, val);\\n        return;\\n      }\\n    });\\n  });\\n\\n  return target;\\n};\\n\\nexport class Deferred {\\n  promise: Promise<any>;\\n  resolve: any;\\n  reject: any;\\n\\n  constructor() {\\n    this.promise = new Promise((resolve, reject) => {\\n      this.resolve = resolve;\\n      this.reject = reject;\\n    });\\n  }\\n}\\n\\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\\nexport const getDeepFromObject = (object = {}, name: string, defaultValue?: any) => {\\n  const keys = name.split('.');\\n  // clone the object\\n  let level = deepExtend({}, object);\\n  keys.forEach((k) => {\\n    if (level && typeof level[k] !== 'undefined') {\\n      level = level[k];\\n    }\\n  });\\n\\n  return typeof level === 'undefined' ? defaultValue : level;\\n};\\n\\nexport const getPageForRowIndex = (index: number, perPage: number): number =>\\n  // we need to add 1 to convert 0-based index to 1-based page number.\\n  Math.floor(index / perPage) + 1\\n;\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nexport const filterValues = (value: string, search: string) => value.toString().toLowerCase().includes(search.toString().toLowerCase());\\n\\nexport class LocalFilter {\\n  static filter(data: unknown[], field: string, search: string, customFilter?: (...args) => unknown): unknown[] {\\n    const filter: (...args) => any = customFilter ? customFilter : filterValues;\\n\\n    return data.filter((el) => {\\n      const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\\n      // return filter.call(null, value, search); // FIXME just fallback dis in case direct call not working\\n      return filter(null, value, search);\\n    });\\n  }\\n}\\n\",\"export class LocalPager {\\n  static paginate(data: unknown[], page: number, perPage: number): unknown[] {\\n    return data.slice(perPage * (page - 1), perPage * page);\\n  }\\n}\\n\",\"export const compareValues = (direction: number, a: number, b: number) => {\\n  if (a < b) {\\n    return -1 * direction;\\n  }\\n  if (a > b) {\\n    return direction;\\n  }\\n  return 0;\\n};\\n\\nexport class LocalSorter {\\n  static sort(data: unknown[], field: string, direction: string, customCompare?: (...args) => number): unknown[] {\\n    const dir: number = (direction === 'asc') ? 1 : -1;\\n    const compare: (...args) => number = customCompare ? customCompare : compareValues;\\n\\n    // return data.sort((a, b) => compare.call(null, dir, a[field], b[field])); // FIXME fallback to dis in cas direct call fails\\n    return data.sort((a, b) => compare(null, dir, a[field], b[field]));\\n  }\\n}\\n\",\"import { deepExtend } from '../../helpers.define';\\nimport { DataSource } from '../data-source.define';\\nimport { LocalFilter } from './loca-data-filter.define';\\nimport { LocalPager } from './local-data-pager.define';\\nimport { LocalSorter } from './local-data-sorter.define';\\n\\n/* eslint-disable @typescript-eslint/no-unsafe-return */\\nexport class LocalDataSource\\n  extends DataSource {\\n  protected data = [];\\n  protected filteredAndSorted = [];\\n  protected sortConf = [];\\n  protected filterConf: any = {\\n    filters: [],\\n    andOperator: true\\n  };\\n  protected pagingConf: any = {};\\n\\n  constructor(data = []) {\\n    super();\\n    this.data = data;\\n  }\\n\\n  load(data: unknown[]) {\\n    this.data = data;\\n    return super.load(data);\\n  }\\n\\n  prepend(element) {\\n    this.reset(true);\\n\\n    this.data.unshift(element);\\n    return super.prepend(element);\\n  }\\n\\n  append(element) {\\n    this.reset(true);\\n\\n    this.data.push(element);\\n    return super.append(element);\\n  }\\n\\n  add(element) {\\n    this.data.push(element);\\n\\n    return super.add(element);\\n  }\\n\\n  remove(element) {\\n    this.data = this.data.filter(el => el !== element);\\n\\n    return super.remove(element);\\n  }\\n\\n  update(element, values) {\\n    return new Promise((resolve, reject) => {\\n      this.find(element).then((found) => {\\n        found = deepExtend(found, values);\\n        super.update(found, values).then(resolve).catch(reject);\\n      }).catch(reject);\\n    });\\n  }\\n\\n  find(element) {\\n    const found = this.data.find(el => el === element);\\n    if (found) {\\n      return Promise.resolve(found);\\n    }\\n\\n    return Promise.reject(new Error('Element was not found in the dataset'));\\n  }\\n\\n  getElements() {\\n    const data = this.data.slice(0);\\n    return Promise.resolve(this.prepareData(data));\\n  }\\n\\n  getFilteredAndSorted() {\\n    const data = this.data.slice(0);\\n    this.prepareData(data);\\n    return Promise.resolve(this.filteredAndSorted);\\n  }\\n\\n  getAll() {\\n    const data = this.data.slice(0);\\n    return Promise.resolve(data);\\n  }\\n\\n  reset(silent = false) {\\n    if (silent) {\\n      this.filterConf = {\\n        filters: [],\\n        andOperator: true\\n      };\\n      this.sortConf = [];\\n      this.pagingConf.page = 1;\\n    } else {\\n      this.setFilter([], true, false);\\n      this.setSort([], false);\\n      this.setPage(1);\\n    }\\n  }\\n\\n  empty() {\\n    this.data = [];\\n\\n    return super.empty();\\n  }\\n\\n  count(): number {\\n    return this.filteredAndSorted.length;\\n  }\\n\\n  /**\\n   *\\n   * Array of conf objects\\n   * [\\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\\n   * ]\\n   *\\n   * @param conf\\n   * @param doEmit\\n   * @returns\\n   */\\n  setSort(conf: any[], doEmit = true): LocalDataSource {\\n    if (conf !== null) {\\n      conf.forEach((fieldConf) => {\\n        if (!fieldConf.field || typeof fieldConf.direction === 'undefined') {\\n          throw new Error('Sort configuration object is not valid');\\n        }\\n      });\\n      this.sortConf = conf;\\n    }\\n\\n    super.setSort(conf, doEmit);\\n    return this;\\n  }\\n\\n  /**\\n   *\\n   * Array of conf objects\\n   * [\\n   *  {field: string, search: string, filter: Function|null},\\n   * ]\\n   *\\n   * @param conf\\n   * @param andOperator\\n   * @param doEmit\\n   * @returns\\n   */\\n  setFilter(conf: any[], andOperator = true, doEmit = true): LocalDataSource {\\n    if (conf && conf.length > 0) {\\n      conf.forEach((fieldConf) => {\\n        this.addFilter(fieldConf, andOperator, false);\\n      });\\n    } else {\\n      this.filterConf = {\\n        filters: [],\\n        andOperator: true\\n      };\\n    }\\n    this.filterConf.andOperator = andOperator;\\n    this.pagingConf.page = 1;\\n\\n    super.setFilter(conf, andOperator, doEmit);\\n    return this;\\n  }\\n\\n  addFilter(fieldConf: any, andOperator = true, doEmit: boolean = true): LocalDataSource {\\n    if (!fieldConf.field || typeof fieldConf.search === 'undefined') {\\n      throw new Error('Filter configuration object is not valid');\\n    }\\n\\n    let found = false;\\n    this.filterConf.filters.forEach((currentFieldConf: any, index: any) => {\\n      if (currentFieldConf.field === fieldConf.field) {\\n        this.filterConf.filters[index] = fieldConf;\\n        found = true;\\n      }\\n    });\\n    if (!found) {\\n      this.filterConf.filters.push(fieldConf);\\n    }\\n    this.filterConf.andOperator = andOperator;\\n    super.addFilter(fieldConf, andOperator, doEmit);\\n    return this;\\n  }\\n\\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\\n    this.pagingConf.page = page;\\n    this.pagingConf.perPage = perPage;\\n\\n    super.setPaging(page, perPage, doEmit);\\n    return this;\\n  }\\n\\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\\n    this.pagingConf.page = page;\\n    super.setPage(page, doEmit);\\n    return this;\\n  }\\n\\n  getSort() {\\n    return this.sortConf;\\n  }\\n\\n  getFilter() {\\n    return this.filterConf;\\n  }\\n\\n  getPaging() {\\n    return this.pagingConf;\\n  }\\n\\n  protected prepareData(data: unknown[]) {\\n    data = this.filter(data);\\n    data = this.sort(data);\\n    this.filteredAndSorted = data.slice(0);\\n    return this.paginate(data);\\n  }\\n\\n  protected sort(data: unknown[]) {\\n    if (this.sortConf) {\\n      this.sortConf.forEach((fieldConf) => {\\n        data = LocalSorter\\n          .sort(data, fieldConf.field, fieldConf.direction, fieldConf.compare);\\n      });\\n    }\\n    return data;\\n  }\\n\\n  // TODO: refactor?\\n  protected filter(data: unknown[]) {\\n    if (this.filterConf.filters) {\\n      if (this.filterConf.andOperator) {\\n        this.filterConf.filters.forEach((fieldConf) => {\\n          if (fieldConf.search.length > 0) {\\n            data = LocalFilter\\n              .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter);\\n          }\\n        });\\n      } else {\\n        let mergedData = [];\\n        this.filterConf.filters.forEach((fieldConf) => {\\n          if (fieldConf.search.length > 0) {\\n            mergedData = mergedData.concat(LocalFilter\\n              .filter(data, fieldConf.field, fieldConf.search, fieldConf.filter));\\n          }\\n        });\\n        // remove non unique items\\n        data = mergedData.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\\n      }\\n    }\\n    return data;\\n  }\\n\\n  protected paginate(data: unknown[]) {\\n    if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\\n      data = LocalPager.paginate(data, this.pagingConf.page, this.pagingConf.perPage);\\n    }\\n    return data;\\n  }\\n}\\n\",\"import { DataSet } from './data-set.define';\\n\\n/* eslint-disable @typescript-eslint/no-explicit-any */\\nexport class Column {\\n  title = '';\\n  type = '';\\n  class = '';\\n  width = '';\\n  hide = false;\\n  isSortable = false;\\n  isEditable = true;\\n  isAddable = true;\\n  isFilterable = false;\\n  sortDirection = '';\\n  defaultSortDirection = '';\\n  editor: { type: string; config; component } = { type: '', config: {}, component: null };\\n  filter: { type: string; config; component } = { type: '', config: {}, component: null };\\n  renderComponent = null;\\n  compareFunction: () => any;\\n  valuePrepareFunction: () => any;\\n  filterFunction: () => any;\\n  onComponentInitFunction: () => any;\\n\\n  constructor(\\n    public id: string,\\n    protected settings,\\n    protected dataSet: DataSet\\n  ) {\\n    this.process();\\n  }\\n\\n  getOnComponentInitFunction() {\\n    return this.onComponentInitFunction;\\n  }\\n\\n  getCompareFunction() {\\n    return this.compareFunction;\\n  }\\n\\n  getValuePrepareFunction() {\\n    return this.valuePrepareFunction;\\n  }\\n\\n  getFilterFunction() {\\n    return this.filterFunction;\\n  }\\n\\n  getConfig() {\\n    return this.editor && this.editor.config;\\n  }\\n\\n  getFilterType() {\\n    return this.filter && this.filter.type;\\n  }\\n\\n  getFilterConfig() {\\n    return this.filter && this.filter.config;\\n  }\\n\\n  prepareType(): string {\\n    return this.settings.type || this.determineType();\\n  }\\n\\n  prepareSortDirection(): string {\\n    return this.settings.sort === 'desc' ? 'desc' : 'asc';\\n  }\\n\\n  determineType(): string {\\n    // TODO: determine type by data\\n    return 'text';\\n  }\\n\\n  protected process() {\\n    this.title = this.settings.title;\\n    this.class = this.settings.class;\\n    this.width = this.settings.width;\\n    this.hide = Boolean(this.settings.hide);\\n    this.type = this.prepareType();\\n    this.editor = this.settings.editor;\\n    this.filter = this.settings.filter;\\n    this.renderComponent = this.settings.renderComponent;\\n\\n    this.isFilterable = typeof this.settings.filter === 'undefined' ? true : Boolean(this.settings.filter);\\n    this.defaultSortDirection = ['asc', 'desc']\\n      .indexOf(this.settings.sortDirection) !== -1 ? this.settings.sortDirection : '';\\n    this.isSortable = typeof this.settings.sort === 'undefined' ? true : Boolean(this.settings.sort);\\n    this.isEditable = typeof this.settings.editable === 'undefined' ? true : Boolean(this.settings.editable);\\n    this.isAddable = typeof this.settings.addable === 'undefined' ? true : Boolean(this.settings.addable);\\n    this.sortDirection = this.prepareSortDirection();\\n\\n    this.compareFunction = this.settings.compareFunction;\\n    this.valuePrepareFunction = this.settings.valuePrepareFunction;\\n    this.filterFunction = this.settings.filterFunction;\\n    this.onComponentInitFunction = this.settings.onComponentInitFunction;\\n  }\\n}\\n\",\"import { Column } from './column.define';\\nimport { DataSet } from './data-set.define';\\nimport { Row } from './row.define';\\n\\nexport const prepareValue = (value) => value;\\n\\n// @dynamic\\nexport class Cell {\\n  protected static prepareVal = prepareValue;\\n  newValue = '';\\n\\n  constructor(\\n    protected value,\\n    protected row: Row,\\n    protected column,\\n    protected dataSet: DataSet\\n  ) {\\n    this.newValue = value;\\n  }\\n\\n  getColumn(): Column {\\n    return this.column;\\n  }\\n\\n  getRow(): Row {\\n    return this.row;\\n  }\\n\\n  getValue() {\\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.prepareVal;\\n    // eslint-disable-next-line no-useless-call\\n    return prepare.call(null, this.value, this.row.getData(), this);\\n  }\\n\\n  setValue(value) {\\n    this.newValue = value;\\n  }\\n\\n  getId(): string {\\n    return this.getColumn().id;\\n  }\\n\\n  getTitle(): string {\\n    return this.getColumn().title;\\n  }\\n\\n  isEditable(): boolean {\\n    if (this.getRow().index === -1) {\\n      return this.getColumn().isAddable;\\n    }\\n    else {\\n      return this.getColumn().isEditable;\\n    }\\n  }\\n}\\n\",\"import { Cell } from './cell.define';\\nimport { Column } from './column.define';\\nimport { DataSet } from './data-set.define';\\n\\nexport class Row {\\n  isSelected = false;\\n  isInEditing = false;\\n  cells: Cell[] = [];\\n\\n  constructor(\\n    public index: number,\\n    protected data,\\n    protected dataSet: DataSet\\n  ) {\\n    this.process();\\n  }\\n\\n  getCell(column: Column): Cell {\\n    return this.cells.find(el => el.getColumn() === column);\\n  }\\n\\n  getCells() {\\n    return this.cells;\\n  }\\n\\n  getData() {\\n    return this.data;\\n  }\\n\\n  getIsSelected(): boolean {\\n    return this.isSelected;\\n  }\\n\\n  getNewData() {\\n    const values = Object.assign({}, this.data);\\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\\n    return values;\\n  }\\n\\n  setData(data) {\\n    this.data = data;\\n    this.process();\\n  }\\n\\n  process() {\\n    this.cells = [];\\n    this.dataSet.getColumns().forEach((column: Column) => {\\n      const cell = this.createCell(column);\\n      this.cells.push(cell);\\n    });\\n  }\\n\\n  createCell(column: Column): Cell {\\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\\n    return new Cell(value, this, column, this.dataSet);\\n  }\\n}\\n\",\"import { Column } from './column.define';\\nimport { Row } from './row.define';\\n\\nexport class DataSet {\\n  newRow: Row;\\n  protected data = [];\\n  protected columns: Column[] = [];\\n  protected rows: Row[] = [];\\n  protected selectedRow: Row;\\n  protected willSelect: string;\\n\\n  constructor(\\n    data = [],\\n    // eslint-disable-next-line @typescript-eslint/ban-types\\n    protected columnSettings: Object\\n  ) {\\n    this.createColumns(columnSettings);\\n    this.setData(data);\\n    this.createNewRow();\\n  }\\n\\n  setData(data: unknown[]) {\\n    this.data = data;\\n    this.createRows();\\n  }\\n\\n  getColumns(): Column[] {\\n    return this.columns;\\n  }\\n\\n  getRows(): Row[] {\\n    return this.rows;\\n  }\\n\\n  getFirstRow(): Row {\\n    return this.rows[0];\\n  }\\n\\n  getLastRow(): Row {\\n    return this.rows[this.rows.length - 1];\\n  }\\n\\n  findRowByData(data): Row {\\n    return this.rows.find((row: Row) => row.getData() === data);\\n  }\\n\\n  deselectAll() {\\n    this.rows.forEach((row) => {\\n      row.isSelected = false;\\n    });\\n    // we need to clear selectedRow field because no one row selected\\n    this.selectedRow = undefined;\\n  }\\n\\n  selectRow(row: Row): Row | undefined {\\n    const previousIsSelected = row.isSelected;\\n    this.deselectAll();\\n\\n    row.isSelected = !previousIsSelected;\\n    this.selectedRow = row;\\n\\n    return this.selectedRow;\\n  }\\n\\n  multipleSelectRow(row: Row): Row {\\n    row.isSelected = !row.isSelected;\\n    this.selectedRow = row;\\n\\n    return this.selectedRow;\\n  }\\n\\n  selectPreviousRow(): Row {\\n    if (this.rows.length > 0) {\\n      let index = this.selectedRow ? this.selectedRow.index : 0;\\n      if (index > this.rows.length - 1) {\\n        index = this.rows.length - 1;\\n      }\\n      this.selectRow(this.rows[index]);\\n      return this.selectedRow;\\n    }\\n  }\\n\\n  selectFirstRow(): Row | undefined {\\n    if (this.rows.length > 0) {\\n      this.selectRow(this.rows[0]);\\n      return this.selectedRow;\\n    }\\n  }\\n\\n  selectLastRow(): Row | undefined {\\n    if (this.rows.length > 0) {\\n      this.selectRow(this.rows[this.rows.length - 1]);\\n      return this.selectedRow;\\n    }\\n  }\\n\\n  selectRowByIndex(index: number): Row | undefined {\\n    const rowsLength: number = this.rows.length;\\n    if (rowsLength === 0) {\\n      return;\\n    }\\n    if (!index) {\\n      this.selectFirstRow();\\n      return this.selectedRow;\\n    }\\n    if (index > 0 && index < rowsLength) {\\n      this.selectRow(this.rows[index]);\\n      return this.selectedRow;\\n    }\\n    // we need to deselect all rows if we got an incorrect index\\n    this.deselectAll();\\n  }\\n\\n  willSelectFirstRow() {\\n    this.willSelect = 'first';\\n  }\\n\\n  willSelectLastRow() {\\n    this.willSelect = 'last';\\n  }\\n\\n  select(selectedRowIndex?: number): Row | undefined {\\n    if (this.getRows().length === 0) {\\n      return;\\n    }\\n    if (this.willSelect) {\\n      if (this.willSelect === 'first') {\\n        this.selectFirstRow();\\n      }\\n      if (this.willSelect === 'last') {\\n        this.selectLastRow();\\n      }\\n      this.willSelect = '';\\n    } else {\\n      this.selectRowByIndex(selectedRowIndex);\\n    }\\n\\n    return this.selectedRow;\\n  }\\n\\n  createNewRow() {\\n    this.newRow = new Row(-1, {}, this);\\n    this.newRow.isInEditing = true;\\n  }\\n\\n  /**\\n   * Create columns by mapping from the settings\\n   *\\n   * @param settings\\n   * @private\\n   */\\n  createColumns(settings) {\\n    for (const id in settings) {\\n      if (settings.hasOwnProperty(id)) {\\n        this.columns.push(new Column(id, settings[id], this));\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Create rows based on current data prepared in data source\\n   *\\n   * @private\\n   */\\n  createRows() {\\n    this.rows = [];\\n    this.data.forEach((el, index) => {\\n      this.rows.push(new Row(index, el, this));\\n    });\\n  }\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\nimport { Subject, Subscription } from 'rxjs';\\nimport { Observable } from 'rxjs';\\nimport { EventEmitter } from '@angular/core';\\nimport { DataSource } from './data-source/data-source.define';\\nimport { DataSet } from './data-set/data-set.define';\\nimport { Deferred, getDeepFromObject, getPageForRowIndex } from './helpers.define';\\nimport { Column } from './data-set/column.define';\\nimport { Row } from './data-set/row.define';\\n\\nexport class Grid {\\n  createFormShown = false;\\n  source: DataSource;\\n  settings;\\n  dataSet: DataSet;\\n  onSelectRowSource = new Subject<any>();\\n  onDeselectRowSource = new Subject<any>();\\n  private sourceOnChangedSubscription: Subscription;\\n  private sourceOnUpdatedSubscription: Subscription;\\n\\n  constructor(source: DataSource, settings) {\\n    this.setSettings(settings);\\n    this.setSource(source);\\n  }\\n\\n  detach(): void {\\n    if (this.sourceOnChangedSubscription) {\\n      this.sourceOnChangedSubscription.unsubscribe();\\n    }\\n    if (this.sourceOnUpdatedSubscription) {\\n      this.sourceOnUpdatedSubscription.unsubscribe();\\n    }\\n  }\\n\\n  showActionColumn(position: string): boolean {\\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\\n  }\\n\\n  isCurrentActionsPosition(position: string): boolean {\\n    // eslint-disable-next-line eqeqeq\\n    return position == this.getSetting('actions.position');\\n  }\\n\\n  isActionsVisible(): boolean {\\n    return this\\n      .getSetting(\\n        'actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\\n  }\\n\\n  isMultiSelectVisible(): boolean {\\n    return this.getSetting('selectMode') === 'multi';\\n  }\\n\\n  getNewRow(): Row {\\n    return this.dataSet.newRow;\\n  }\\n\\n  setSettings(settings: object) {\\n    this.settings = settings;\\n    this.dataSet = new DataSet([], this.getSetting('columns'));\\n\\n    if (this.source) {\\n      this.source.refresh();\\n    }\\n  }\\n\\n  getDataSet(): DataSet {\\n    return this.dataSet;\\n  }\\n\\n  setSource(source: DataSource) {\\n    this.source = this.prepareSource(source);\\n    this.detach();\\n\\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\\n\\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data: any) => {\\n      const changedRow = this.dataSet.findRowByData(data);\\n      changedRow.setData(data);\\n    });\\n  }\\n\\n  getSetting(name: string, defaultValue?) {\\n    return getDeepFromObject(this.settings, name, defaultValue);\\n  }\\n\\n  getColumns(): Column[] {\\n    return this.dataSet.getColumns();\\n  }\\n\\n  getRows(): Row[] {\\n    return this.dataSet.getRows();\\n  }\\n\\n  selectRow(row: Row) {\\n    this.dataSet.selectRow(row);\\n  }\\n\\n  multipleSelectRow(row: Row) {\\n    this.dataSet.multipleSelectRow(row);\\n  }\\n\\n  onSelectRow(): Observable<any> {\\n    return this.onSelectRowSource.asObservable();\\n  }\\n\\n  onDeselectRow(): Observable<any> {\\n    return this.onDeselectRowSource.asObservable();\\n  }\\n\\n  edit(row: Row) {\\n    row.isInEditing = true;\\n  }\\n\\n  create(row: Row, confirmEmitter: EventEmitter<any>) {\\n    const deferred = new Deferred();\\n    deferred.promise.then((newData) => {\\n      newData = newData ? newData : row.getNewData();\\n      if (deferred.resolve.skipAdd) {\\n        this.createFormShown = false;\\n      } else {\\n        this.source.prepend(newData).then(() => {\\n          this.createFormShown = false;\\n          this.dataSet.createNewRow();\\n        });\\n      }\\n    }).catch((err) => {\\n      // doing nothing\\n    });\\n\\n    if (this.getSetting('add.confirmCreate')) {\\n      confirmEmitter.emit({\\n        newData: row.getNewData(),\\n        source: this.source,\\n        confirm: deferred\\n      });\\n    } else {\\n      deferred.resolve();\\n    }\\n  }\\n\\n  save(row: Row, confirmEmitter: EventEmitter<any>) {\\n    const deferred = new Deferred();\\n    deferred.promise.then((newData) => {\\n      newData = newData ? newData : row.getNewData();\\n      if (deferred.resolve.skipEdit) {\\n        row.isInEditing = false;\\n      } else {\\n        this.source.update(row.getData(), newData).then(() => {\\n          row.isInEditing = false;\\n        });\\n      }\\n    }).catch((err) => {\\n      // doing nothing\\n    });\\n\\n    if (this.getSetting('edit.confirmSave')) {\\n      confirmEmitter.emit({\\n        data: row.getData(),\\n        newData: row.getNewData(),\\n        source: this.source,\\n        confirm: deferred\\n      });\\n    } else {\\n      deferred.resolve();\\n    }\\n  }\\n\\n  delete(row: Row, confirmEmitter: EventEmitter<any>) {\\n    const deferred = new Deferred();\\n    deferred.promise.then(() => {\\n      this.source.remove(row.getData());\\n    }).catch((err) => {\\n      // doing nothing\\n    });\\n\\n    if (this.getSetting('delete.confirmDelete')) {\\n      confirmEmitter.emit({\\n        data: row.getData(),\\n        source: this.source,\\n        confirm: deferred\\n      });\\n    } else {\\n      deferred.resolve();\\n    }\\n  }\\n\\n  processDataChange(changes) {\\n    if (this.shouldProcessChange(changes)) {\\n      this.dataSet.setData(changes.elements);\\n      if (this.getSetting('selectMode') !== 'multi') {\\n        const row = this.determineRowToSelect(changes);\\n\\n        if (row) {\\n          this.onSelectRowSource.next(row);\\n        } else {\\n          this.onDeselectRowSource.next(null);\\n        }\\n      }\\n    }\\n  }\\n\\n  shouldProcessChange(changes): boolean {\\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes.action) !== -1) {\\n      return true;\\n    } else if (['prepend', 'append'].indexOf(changes.action) !== -1 && !this.getSetting('pager.display')) {\\n      return true;\\n    }\\n\\n    return false;\\n  }\\n\\n  /**\\n   * @breaking-change 1.8.0\\n   * Need to add `| null` in return type\\n   *\\n   * TODO: move to selectable? Separate directive\\n   */\\n  determineRowToSelect(changes): Row {\\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes.action) !== -1) {\\n      return this.dataSet.select(this.getRowIndexToSelect());\\n    }\\n\\n    if (this.shouldSkipSelection()) {\\n      return null;\\n    }\\n\\n    if (changes.action === 'remove') {\\n      if (changes.elements.length === 0) {\\n        // we have to store which one to select as the data will be reloaded\\n        this.dataSet.willSelectLastRow();\\n      } else {\\n        return this.dataSet.selectPreviousRow();\\n      }\\n    }\\n    if (changes.action === 'append') {\\n      // we have to store which one to select as the data will be reloaded\\n      this.dataSet.willSelectLastRow();\\n    }\\n    if (changes.action === 'add') {\\n      return this.dataSet.selectFirstRow();\\n    }\\n    if (changes.action === 'update') {\\n      return this.dataSet.selectFirstRow();\\n    }\\n    if (changes.action === 'prepend') {\\n      // we have to store which one to select as the data will be reloaded\\n      this.dataSet.willSelectFirstRow();\\n    }\\n    return null;\\n  }\\n\\n  prepareSource(source): DataSource {\\n    const initialSource = this.getInitialSort();\\n    if (initialSource && initialSource.field && initialSource.direction) {\\n      source.setSort([initialSource], false);\\n    }\\n    if (this.getSetting('pager.display') === true) {\\n      source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\\n    }\\n\\n    source.refresh();\\n    return source;\\n  }\\n\\n  getInitialSort() {\\n    const sortConf: any = {};\\n    this.getColumns().forEach((column: Column) => {\\n      if (column.isSortable && column.defaultSortDirection) {\\n        sortConf.field = column.id;\\n        sortConf.direction = column.defaultSortDirection;\\n        sortConf.compare = column.getCompareFunction();\\n      }\\n    });\\n    return sortConf;\\n  }\\n\\n  getSelectedRows(): any[] {\\n    return this.dataSet.getRows()\\n      .filter(r => r.isSelected);\\n  }\\n\\n  selectAllRows(status) {\\n    this.dataSet.getRows()\\n      .forEach(r => r.isSelected = status);\\n  }\\n\\n  getFirstRow(): Row {\\n    return this.dataSet.getFirstRow();\\n  }\\n\\n  getLastRow(): Row {\\n    return this.dataSet.getLastRow();\\n  }\\n\\n  private getSelectionInfo(): { perPage: number; page: number; selectedRowIndex: number; switchPageToSelectedRowPage: boolean } {\\n    const switchPageToSelectedRowPage: boolean = this.getSetting('switchPageToSelectedRowPage');\\n    const selectedRowIndex: number = Number(this.getSetting('selectedRowIndex', 0)) || 0;\\n    const { perPage, page }: { perPage: number; page: number } = this.getSetting('pager');\\n    return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\\n  }\\n\\n  private getRowIndexToSelect(): number {\\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\\n    const dataAmount: number = this.source.count();\\n    /**\\n     * source - contains all table data\\n     * dataSet - contains data for current page\\n     * selectedRowIndex - contains index for data in all data\\n     *\\n     * because of that, we need to count index for a specific row in page\\n     * if\\n     * `switchPageToSelectedRowPage` - we need to change page automatically\\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\\n     *  if we return index witch not points to existing data - no line will be highlighted)\\n     */\\n    return (\\n      switchPageToSelectedRowPage &&\\n      selectedRowIndex < dataAmount &&\\n      selectedRowIndex >= 0\\n    ) ?\\n      selectedRowIndex % perPage :\\n      selectedRowIndex;\\n  }\\n\\n  private getPageToSelect(source: DataSource): number {\\n    const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\\n    let pageToSelect: number = Math.max(1, page);\\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\\n    }\\n    const maxPageAmount: number = Math.ceil(source.count() / perPage);\\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\\n  }\\n\\n  private shouldSkipSelection(): boolean {\\n    /**\\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\\n     *\\n     * Therefore, in order to select a row after some changes,\\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\\n     *\\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\\n     *\\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\\n     * because when < 0 all lines must be deselected\\n     */\\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\\n    return selectedRowIndex < 0;\\n  }\\n}\\n\",\"/* eslint-disable @typescript-eslint/no-explicit-any */\\n/* eslint-disable @typescript-eslint/no-unsafe-return */\\nimport { Component, Input, Output, SimpleChange, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\\nimport { Subject, Subscription } from 'rxjs';\\nimport { takeUntil } from 'rxjs/operators';\\nimport { Row } from './defines/data-set/row.define';\\nimport { DataSource } from './defines/data-source/data-source.define';\\nimport { LocalDataSource } from './defines/data-source/local-data-source/local-data-source.define';\\nimport { Grid } from './defines/grid.define';\\nimport { deepExtend, getPageForRowIndex } from './defines/helpers.define';\\n\\n@Component({\\n  selector: 'smart-intel-table',\\n  styleUrls: ['./smart-intel-table.component.scss'],\\n  templateUrl: './smart-intel-table.component.html'\\n})\\nexport class SmartIntelTableComponent\\nimplements OnChanges, OnDestroy {\\n  @Input() source;\\n  @Input() settings = {};\\n  @Output() rowSelect = new EventEmitter<any>();\\n  @Output() rowDeselect = new EventEmitter<any>();\\n  @Output() userRowSelect = new EventEmitter<any>();\\n  @Output() delete = new EventEmitter<any>();\\n  @Output() edit = new EventEmitter<any>();\\n  @Output() create = new EventEmitter<any>();\\n  @Output() custom = new EventEmitter<any>();\\n  @Output() deleteConfirm = new EventEmitter<any>();\\n  @Output() editConfirm = new EventEmitter<any>();\\n  @Output() createConfirm = new EventEmitter<any>();\\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\\n  tableClass: string;\\n  tableId: string;\\n  perPageSelect;\\n  isHideHeader: boolean;\\n  isHideSubHeader: boolean;\\n  isPagerDisplay: boolean;\\n  rowClassFunction: () => any;\\n  grid: Grid;\\n  defaultSettings = {\\n    mode: 'inline', // inline|external|click-to-edit\\n    selectMode: 'single', // single|multi\\n    /**\\n     * Points to an element in all data\\n     *\\n     * when < 0 all lines must be deselected\\n     */\\n    selectedRowIndex: 0,\\n    switchPageToSelectedRowPage: false,\\n    hideHeader: false,\\n    hideSubHeader: false,\\n    actions: {\\n      columnTitle: 'Actions',\\n      add: true,\\n      edit: true,\\n      delete: true,\\n      custom: [],\\n      position: 'left' // left|right\\n    },\\n    filter: {\\n      inputClass: ''\\n    },\\n    edit: {\\n      inputClass: '',\\n      editButtonContent: 'Edit',\\n      saveButtonContent: 'Update',\\n      cancelButtonContent: 'Cancel',\\n      confirmSave: false\\n    },\\n    add: {\\n      inputClass: '',\\n      addButtonContent: 'Add New',\\n      createButtonContent: 'Create',\\n      cancelButtonContent: 'Cancel',\\n      confirmCreate: false\\n    },\\n    delete: {\\n      deleteButtonContent: 'Delete',\\n      confirmDelete: false\\n    },\\n    attr: {\\n      id: '',\\n      class: ''\\n    },\\n    noDataMessage: 'No data found',\\n    columns: {},\\n    pager: {\\n      display: true,\\n      page: 1,\\n      perPage: 10\\n    },\\n    rowClassFunction: () => ''\\n  };\\n  isAllSelected = false;\\n  private onSelectRowSubscription: Subscription;\\n  private onDeselectRowSubscription: Subscription;\\n  private destroyed$: Subject<void> = new Subject<void>();\\n\\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\\n    if (this.grid) {\\n      if (changes.settings) {\\n        this.grid.setSettings(this.prepareSettings());\\n      }\\n      if (changes.source) {\\n        this.source = this.prepareSource();\\n        this.grid.setSource(this.source);\\n      }\\n    } else {\\n      this.initGrid();\\n    }\\n    this.tableId = this.grid.getSetting('attr.id');\\n    this.tableClass = this.grid.getSetting('attr.class');\\n    this.isHideHeader = this.grid.getSetting('hideHeader');\\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.destroyed$.next();\\n  }\\n\\n  selectRow(index: number, switchPageToSelectedRowPage: boolean = this.grid.getSetting('switchPageToSelectedRowPage')): void {\\n    if (!this.grid) {\\n      return;\\n    }\\n    this.grid.settings.selectedRowIndex = index;\\n    if (this.isIndexOutOfRange(index)) {\\n      // we need to deselect all rows if we got an incorrect index\\n      this.deselectAllRows();\\n      return;\\n    }\\n\\n    if (switchPageToSelectedRowPage) {\\n      const source: DataSource = this.source;\\n      const paging: { page: number; perPage: number } = source.getPaging();\\n      const page: number = getPageForRowIndex(index, paging.perPage);\\n      index %= paging.perPage;\\n      this.grid.settings.selectedRowIndex = index;\\n\\n      if (page !== paging.page) {\\n        source.setPage(page);\\n        return;\\n      }\\n    }\\n\\n    const row: Row = this.grid.getRows()[index];\\n    if (row) {\\n      this.onSelectRow(row);\\n    } else {\\n      // we need to deselect all rows if we got an incorrect index\\n      this.deselectAllRows();\\n    }\\n  }\\n\\n  editRowSelect(row: Row) {\\n    if (this.grid.getSetting('selectMode') === 'multi') {\\n      this.onMultipleSelectRow(row);\\n    } else {\\n      this.onSelectRow(row);\\n    }\\n  }\\n\\n  onUserSelectRow(row: Row) {\\n    if (this.grid.getSetting('selectMode') !== 'multi') {\\n      this.grid.selectRow(row);\\n      this.emitUserSelectRow(row);\\n      this.emitSelectRow(row);\\n    }\\n  }\\n\\n  onRowHover(row: Row) {\\n    this.rowHover.emit(row);\\n  }\\n\\n  multipleSelectRow(row: Row) {\\n    this.grid.multipleSelectRow(row);\\n    this.emitUserSelectRow(row);\\n    this.emitSelectRow(row);\\n  }\\n\\n  onSelectAllRows($event) {\\n    this.isAllSelected = !this.isAllSelected;\\n    this.grid.selectAllRows(this.isAllSelected);\\n\\n    this.emitUserSelectRow(null);\\n    this.emitSelectRow(null);\\n  }\\n\\n  onSelectRow(row: Row) {\\n    this.grid.selectRow(row);\\n    this.emitSelectRow(row);\\n  }\\n\\n  onMultipleSelectRow(row: Row) {\\n    this.emitSelectRow(row);\\n  }\\n\\n  initGrid() {\\n    this.source = this.prepareSource();\\n    this.grid = new Grid(this.source, this.prepareSettings());\\n\\n    this.subscribeToOnSelectRow();\\n    this.subscribeToOnDeselectRow();\\n  }\\n\\n  prepareSource(): DataSource {\\n    if (this.source instanceof DataSource) {\\n      return this.source;\\n    } else if (this.source instanceof Array) {\\n      return new LocalDataSource(this.source);\\n    }\\n\\n    return new LocalDataSource();\\n  }\\n\\n  prepareSettings() {\\n    return deepExtend({}, this.defaultSettings, this.settings);\\n  }\\n\\n  changePage($event) {\\n    this.resetAllSelector();\\n  }\\n\\n  sort($event) {\\n    this.resetAllSelector();\\n  }\\n\\n  filter($event) {\\n    this.resetAllSelector();\\n  }\\n\\n  private deselectAllRows(): void {\\n    this.grid.dataSet.deselectAll();\\n    this.emitDeselectRow(null);\\n  }\\n\\n\\n  private resetAllSelector() {\\n    this.isAllSelected = false;\\n  }\\n\\n  private emitUserSelectRow(row: Row) {\\n    const selectedRows = this.grid.getSelectedRows();\\n\\n    this.userRowSelect.emit({\\n      data: row ? row.getData() : null,\\n      isSelected: row ? row.getIsSelected() : null,\\n      source: this.source,\\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : []\\n    });\\n  }\\n\\n  private emitSelectRow(row: Row) {\\n    const data = {\\n      data: row ? row.getData() : null,\\n      isSelected: row ? row.getIsSelected() : null,\\n      source: this.source\\n    };\\n    this.rowSelect.emit(data);\\n    if (!row?.isSelected) {\\n      this.rowDeselect.emit(data);\\n    }\\n  }\\n\\n  private emitDeselectRow(row: Row): void {\\n    this.rowDeselect.emit({\\n      data: row ? row.getData() : null,\\n      isSelected: row ? row.getIsSelected() : null,\\n      source: this.source\\n    });\\n  }\\n\\n  private isIndexOutOfRange(index: number): boolean {\\n    const dataAmount: number = this.source?.count();\\n    return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\\n  }\\n\\n  private subscribeToOnSelectRow(): void {\\n    if (this.onSelectRowSubscription) {\\n      this.onSelectRowSubscription.unsubscribe();\\n    }\\n    this.onSelectRowSubscription = this.grid.onSelectRow()\\n      .pipe(takeUntil(this.destroyed$))\\n      .subscribe((row) => {\\n        this.emitSelectRow(row);\\n      });\\n  }\\n\\n  private subscribeToOnDeselectRow(): void {\\n    if (this.onDeselectRowSubscription) {\\n      this.onDeselectRowSubscription.unsubscribe();\\n    }\\n    this.onDeselectRowSubscription = this.grid.onDeselectRow()\\n      .pipe(takeUntil(this.destroyed$))\\n      .subscribe((row) => {\\n        this.emitDeselectRow(row);\\n      });\\n  }\\n}\\n\",\"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n  <thead\\n    smart-table-thead\\n    *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n    [grid]=\\\"grid\\\"\\n    [isAllSelected]=\\\"isAllSelected\\\"\\n    [source]=\\\"source\\\"\\n    [createConfirm]=\\\"createConfirm\\\"\\n    (create)=\\\"create.emit($event)\\\"\\n    (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n    (sort)=\\\"sort($event)\\\"\\n    (filter)=\\\"filter($event)\\\"\\n  ></thead>\\n\\n  <tbody\\n    smart-table-body\\n    [grid]=\\\"grid\\\"\\n    [source]=\\\"source\\\"\\n    [deleteConfirm]=\\\"deleteConfirm\\\"\\n    [editConfirm]=\\\"editConfirm\\\"\\n    [rowClassFunction]=\\\"rowClassFunction\\\"\\n    (edit)=\\\"edit.emit($event)\\\"\\n    (delete)=\\\"delete.emit($event)\\\"\\n    (custom)=\\\"custom.emit($event)\\\"\\n    (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n    (editRowSelect)=\\\"editRowSelect($event)\\\"\\n    (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n    (rowHover)=\\\"onRowHover($event)\\\"\\n  ></tbody>\\n</table>\\n\\n<smart-intel-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</smart-intel-table-pager>\\n\",\"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\\nimport { CellModule } from './components/cell/cell.module';\\nimport { FilterModule } from './components/filter/filter.module';\\nimport { PagerModule } from './components/pager/pager.module';\\nimport { TbodyModule } from './components/tbody/tbody.module';\\nimport { TheadModule } from './components/thead/thead.module';\\nimport { SmartIntelTableComponent } from './smart-intel-table.component';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    CellModule,\\n    FilterModule,\\n    PagerModule,\\n    TbodyModule,\\n    TheadModule\\n  ],\\n  declarations: [\\n    SmartIntelTableComponent\\n  ],\\n  exports: [\\n    SmartIntelTableComponent\\n  ]\\n})\\nexport class SmartIntelTableModule {\\n}\\n\",\"export class ServerSourceConf {\\n  protected static readonly sortFieldKey = '_sort';\\n  protected static readonly sortDirKey = '_order';\\n  protected static readonly pagerPageKey = '_page';\\n  protected static readonly pagerLimitKey = '_limit';\\n  protected static readonly filterFieldKey = '#field#_like';\\n  protected static readonly totalKey = 'x-total-count';\\n  protected static readonly dataKey = '';\\n  endPoint: string;\\n  sortFieldKey: string;\\n  sortDirKey: string;\\n  pagerPageKey: string;\\n  pagerLimitKey: string;\\n  filterFieldKey: string;\\n  totalKey: string;\\n  dataKey: string;\\n\\n  constructor({ endPoint = '',\\n    sortFieldKey = '',\\n    sortDirKey = '',\\n    pagerPageKey = '',\\n    pagerLimitKey = '',\\n    filterFieldKey = '',\\n    totalKey = '',\\n    dataKey = ''\\n  } = {}) {\\n    this.endPoint = endPoint ? endPoint : '';\\n\\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.sortFieldKey;\\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.sortDirKey;\\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.pagerPageKey;\\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.pagerLimitKey;\\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.filterFieldKey;\\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.totalKey;\\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.dataKey;\\n  }\\n}\\n\",\"import { HttpClient, HttpParams } from '@angular/common/http';\\nimport { Observable, lastValueFrom } from 'rxjs';\\nimport { map } from 'rxjs/operators';\\nimport { getDeepFromObject } from '../../helpers.define';\\nimport { LocalDataSource } from '../local-data-source/local-data-source.define';\\nimport { ServerSourceConf } from './server-data-source.conf';\\n\\nexport class ServerDataSource\\n  extends LocalDataSource {\\n  protected conf: ServerSourceConf;\\n  protected lastRequestCount = 0;\\n\\n  constructor(\\n    protected http: HttpClient,\\n    conf: ServerSourceConf | object = {}) {\\n    super();\\n\\n    this.conf = new ServerSourceConf(conf);\\n\\n    if (!this.conf.endPoint) {\\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\\n    }\\n  }\\n\\n  count(): number {\\n    return this.lastRequestCount;\\n  }\\n\\n  getElements():Promise<any> {\\n    /** const observer$ = this.requestElements()\\n    .pipe(map(res => {\\n      this.lastRequestCount = this.extractTotalFromResponse(res);\\n      this.data = this.extractDataFromResponse(res);\\n      return this.data;\\n    }));\\n    return lastValueFrom(observer$);*/\\n    return this.requestElements()\\n      .pipe(map(res => {\\n        this.lastRequestCount = this.extractTotalFromResponse(res);\\n        this.data = this.extractDataFromResponse(res);\\n        return this.data;\\n      })).toPromise(); // TODO dis is deprecated\\n  }\\n\\n  /**\\n   * Extracts array of data from server response\\n   *\\n   * @param res\\n   * @returns\\n   */\\n  protected extractDataFromResponse(res): any[] {\\n    const rawData = res.body;\\n    const data = Boolean(this.conf.dataKey) ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\\n\\n    if (data instanceof Array) {\\n      return data;\\n    }\\n\\n    throw new Error(`Data must be an array.\\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\\n  }\\n\\n  /**\\n   * Extracts total rows count from the server response\\n   * Looks for the count in the heders first, then in the response body\\n   *\\n   * @param res\\n   * @returns\\n   */\\n  protected extractTotalFromResponse(res): number {\\n    if (res.headers.has(this.conf.totalKey)) {\\n      return Number(res.headers.get(this.conf.totalKey));\\n    } else {\\n      const rawData = res.body;\\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\\n    }\\n  }\\n\\n  protected requestElements(): Observable<any> {\\n    const httpParams = this.createRequesParams();\\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\\n  }\\n\\n  protected createRequesParams(): HttpParams {\\n    let httpParams = new HttpParams();\\n\\n    httpParams = this.addSortRequestParams(httpParams);\\n    httpParams = this.addFilterRequestParams(httpParams);\\n    return this.addPagerRequestParams(httpParams);\\n  }\\n\\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\\n    if (this.sortConf) {\\n      this.sortConf.forEach((fieldConf) => {\\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\\n      });\\n    }\\n\\n    return httpParams;\\n  }\\n\\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\\n    if (this.filterConf.filters) {\\n      this.filterConf.filters.forEach((fieldConf) => {\\n        if (fieldConf.search) {\\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf.field), fieldConf.search);\\n        }\\n      });\\n    }\\n\\n    return httpParams;\\n  }\\n\\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\\n    if (this.pagingConf && this.pagingConf.page && this.pagingConf.perPage) {\\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf.page);\\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf.perPage);\\n    }\\n\\n    return httpParams;\\n  }\\n}\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"i1\",\"_c0\",\"_c1\"],\"mappings\":\"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\"}","type":"asset"}]}