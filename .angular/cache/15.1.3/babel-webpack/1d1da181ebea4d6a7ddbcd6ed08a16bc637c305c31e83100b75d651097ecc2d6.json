{"ast":null,"code":"import { SimpleChanges } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { DefaultFilter } from './default-filter';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nexport class InputFilterComponent extends DefaultFilter {\n  constructor() {\n    super();\n    this.inputControl = new UntypedFormControl();\n  }\n  ngOnInit() {\n    if (this.query) {\n      this.inputControl.setValue(this.query);\n    }\n    this.inputControl.valueChanges.pipe(distinctUntilChanged(), debounceTime(this.delay)).subscribe(value => {\n      this.query = this.inputControl.value;\n      this.setFilter();\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes.query) {\n      this.inputControl.setValue(this.query);\n    }\n  }\n}\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) {\n  return new (t || InputFilterComponent)();\n};\nInputFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputFilterComponent,\n  selectors: [[\"input-filter\"]],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]],\n  template: function InputFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.title);\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n    }\n  },\n  dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective],\n  encapsulation: 2\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}