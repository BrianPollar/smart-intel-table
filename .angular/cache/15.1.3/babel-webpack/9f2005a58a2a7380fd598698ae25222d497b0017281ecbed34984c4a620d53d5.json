{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Row } from '../../../defines/data-set/row.define';\nimport { Grid } from '../../../defines/grid.define';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TbodyCustomComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_a_0_Template_a_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const action_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onCustom(action_r1, $event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class TbodyCustomComponent {\n  constructor() {\n    this.custom = new EventEmitter();\n  }\n  onCustom(action, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.custom.emit({\n      action: action.name,\n      data: this.row.getData(),\n      source: this.source\n    });\n  }\n}\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) {\n  return new (t || TbodyCustomComponent)();\n};\nTbodyCustomComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TbodyCustomComponent,\n  selectors: [[\"smart-table-body-custom\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    source: \"source\"\n  },\n  outputs: {\n    custom: \"custom\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"href\", \"#\", \"class\", \"smart-table-action smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", 1, \"smart-table-action\", \"smart-table-action-custom-custom\", 3, \"innerHTML\", \"click\"]],\n  template: function TbodyCustomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TbodyCustomComponent_a_0_Template, 1, 1, \"a\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n    }\n  },\n  dependencies: [i1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}