{"ast":null,"code":"import { SimpleChanges } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { DefaultFilter } from 'smart-intel-table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nexport class CustomFilterComponent extends DefaultFilter {\n  constructor() {\n    super();\n    this.inputControl = new UntypedFormControl();\n  }\n  ngOnInit() {\n    this.inputControl.valueChanges.pipe(distinctUntilChanged(), debounceTime(this.delay)).subscribe(value => {\n      this.query = value !== null ? this.inputControl.value.toString() : '';\n      this.setFilter();\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes.query) {\n      this.query = changes.query.currentValue;\n      this.inputControl.setValue(this.query);\n    }\n  }\n}\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) {\n  return new (t || CustomFilterComponent)();\n};\nCustomFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomFilterComponent,\n  selectors: [[\"ng-component\"]],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[\"type\", \"number\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"], [\"number\", \"\"]],\n  template: function CustomFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0, 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl)(\"placeholder\", ctx.column.title);\n    }\n  },\n  dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.FormControlDirective],\n  encapsulation: 2\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}