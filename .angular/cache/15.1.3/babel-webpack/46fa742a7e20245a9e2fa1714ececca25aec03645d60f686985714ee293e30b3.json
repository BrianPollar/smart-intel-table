{"ast":null,"code":"import { Cell } from './cell.define';\nexport class Row {\n  constructor(index, data, dataSet) {\n    this.index = index;\n    this.data = data;\n    this.dataSet = dataSet;\n    this.isSelected = false;\n    this.isInEditing = false;\n    this.cells = [];\n    this.process();\n  }\n  getCell(column) {\n    return this.cells.find(el => el.getColumn() === column);\n  }\n  getCells() {\n    return this.cells;\n  }\n  getData() {\n    return this.data;\n  }\n  getIsSelected() {\n    return this.isSelected;\n  }\n  getNewData() {\n    const values = Object.assign({}, this.data);\n    this.getCells().forEach(cell => values[cell.getColumn().id] = cell.newValue);\n    return values;\n  }\n  setData(data) {\n    this.data = data;\n    this.process();\n  }\n  process() {\n    this.cells = [];\n    this.dataSet.getColumns().forEach(column => {\n      const cell = this.createCell(column);\n      this.cells.push(cell);\n    });\n  }\n  createCell(column) {\n    const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n    return new Cell(value, this, column, this.dataSet);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}