{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../../smart-intel-table/src/lib/smart-intel-table.component\";\nexport class ButtonViewComponent {\n  constructor() {\n    this.save = new EventEmitter();\n  }\n  ngOnInit() {\n    this.renderValue = this.value.toString().toUpperCase();\n  }\n  clickedEvent() {\n    this.save.emit(this.rowData);\n  }\n}\nButtonViewComponent.ɵfac = function ButtonViewComponent_Factory(t) {\n  return new (t || ButtonViewComponent)();\n};\nButtonViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ButtonViewComponent,\n  selectors: [[\"demo-button-view\"]],\n  inputs: {\n    value: \"value\",\n    rowData: \"rowData\"\n  },\n  outputs: {\n    save: \"save\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"click\"]],\n  template: function ButtonViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ButtonViewComponent_Template_button_click_0_listener() {\n        return ctx.clickedEvent();\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.renderValue);\n    }\n  },\n  encapsulation: 2\n});\nexport class BasicExampleButtonViewComponent {\n  constructor() {\n    this.settings = {\n      columns: {\n        id: {\n          title: 'ID'\n        },\n        name: {\n          title: 'Full Name'\n        },\n        username: {\n          title: 'User Name'\n        },\n        email: {\n          title: 'Email'\n        },\n        button: {\n          title: 'Button',\n          type: 'custom',\n          renderComponent: ButtonViewComponent,\n          onComponentInitFunction(instance) {\n            instance.save.subscribe(row => {\n              alert(`${row.name} saved!`);\n            });\n          }\n        }\n      }\n    };\n    this.data = [{\n      id: 1,\n      name: 'Camila Cabelo',\n      username: 'Cami',\n      email: 'Sincere@april.biz',\n      button: 'Button #1'\n    }, {\n      id: 2,\n      name: 'Anne Marie',\n      username: 'Ann',\n      email: 'Shanna@melissa.tv',\n      button: 'Button #2'\n    }, {\n      id: 3,\n      name: 'Billie Eilish',\n      username: 'Bill',\n      email: 'Nathan@yesenia.net',\n      button: 'Button #3'\n    }, {\n      id: 4,\n      name: 'Ellie Steinfield',\n      username: 'Elli',\n      email: 'Julianne.OConner@kory.org',\n      button: 'Button #4'\n    }, {\n      id: 5,\n      name: 'Justin Bieber',\n      username: 'Just',\n      email: 'Lucio_Hettinger@annie.ca',\n      button: 'Button #5'\n    }];\n  }\n  ngOnInit() {}\n}\nBasicExampleButtonViewComponent.ɵfac = function BasicExampleButtonViewComponent_Factory(t) {\n  return new (t || BasicExampleButtonViewComponent)();\n};\nBasicExampleButtonViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BasicExampleButtonViewComponent,\n  selectors: [[\"basic-example-button-view\"]],\n  decls: 1,\n  vars: 2,\n  consts: [[3, \"settings\", \"source\"]],\n  template: function BasicExampleButtonViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"smart-intel-table\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"settings\", ctx.settings)(\"source\", ctx.data);\n    }\n  },\n  dependencies: [i1.SmartIntelTableComponent],\n  encapsulation: 2\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}